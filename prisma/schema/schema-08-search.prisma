/// Discussion Board Search Histories - This implements user search history tracking as derived from requirements F06 (Search/filter topics and posts) and F07 (Receive notifications) in the specifications. 
///
/// This model records every search performed by users on the discussion board, logging keywords, filters, and search contexts for analytics and user experience enhancement. Maintains 3NF compliance by separating search event tracking from user/account/profile data. For example, allows reconstructing a user's recent search queries or admins to audit search trends.
///
/// Key relationships: References the user who initiated the search (foreign key to guest or member or moderator or administrator). Can later link to search recommendations or history-based notifications. 
/// Special behaviors: Should not store actual post/thread content or denormalized search resultsâ€”only search intent and metadata. Used for analytics, recommendation, and privacy review.
///
/// @namespace Search
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discussion_board_search_histories {
  //----
  // COLUMNS
  //----
  /// Primary Key. Uniquely identifies each search history entry.
  id String @id
  
  /// The user (guest, member, moderator, or admin) who executed the search. Target model's {@link discussion_board_guests.id}, {@link discussion_board_members.id}, {@link discussion_board_moderators.id}, or {@link discussion_board_administrators.id}. Implements audit and personalization requirements.
  actor_id String
  
  /// The search keyword or terms entered by the user. Implements functional requirement F06. Ensures normalization by storing only the atomic input. Example: 'election reform', 'inflation trends'. Not nullable.
  keyword String
  
  /// Serialized representation of structured search filters (e.g., tags, categories, date ranges). Implements F06 advanced search capability. Example: '{"tags":["economy"],"date":"2025-07"}'. Optional, as user searches may not use filters.
  filters String?
  
  /// Context of search (e.g., section, channel, or specific UI location where initiated). Implements analytics/audit utility. Example: 'thread_list', 'homepage', 'admin_panel'. Optional for maximal flexibility.
  search_context String?
  
  /// Timestamp when the search was executed. Implements audit trail and behavioral analytics requirements. Maintains normalization by separating event time from event content. Not nullable. Example: '2025-07-22T14:17:31.291Z'.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  actor discussion_board_guests @relation(fields: [actor_id], references: [id], onDelete: Cascade)
  
  @@unique([actor_id, created_at])
  @@index([keyword])
  @@index([created_at])
}