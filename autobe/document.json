{
  "operations": [
    {
      "specification": "This API lists teacher records based on search and filtering. It returns paginated and filtered lists of teachers for dashboard and admin/management screens. This covers the attendance_teacher table (core teacher entity) per requirements for authentication and role-based filtering. Pagination, search by name/email, and sorting options are mandatory. Security: Only admins/teachers with relevant permission may access. Related endpoints are creation, deletion, and single teacher search.",
      "description": "This endpoint provides a paginated and searchable list of teachers from the attendance_teacher table. It enables filtering by school, name, or email as needed for school dashboards, admin management, and role assignment. The API supports pagination (limit/offset), search term for name or email, sorting by creation/update date, and additional filters as desired (e.g., by school_id). This operation is secured by role-based access control: only admin and teacher roles may call this endpoint. Input validation ensures only valid filter parameters are accepted. If search yields no results, an empty list is returned with pagination info. For related context, use POST for creation, PUT for update, and DELETE for removal.",
      "summary": "Paginated list/search for teachers from attendance_teacher table.",
      "parameters": [],
      "requestBody": {
        "description": "Teacher list search and pagination filter parameters",
        "typeName": "IAttendanceTeacher.IRequest"
      },
      "responseBody": {
        "description": "Paginated teacher list with summary info (id, name, email, school, created_at, pagination block)",
        "typeName": "IPageAttendanceTeacher"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/teachers",
      "method": "patch"
    },
    {
      "specification": "Get a specific teacher record by ID from attendance_teacher table. Used for detail view, editing, or audit. Must enforce role-based restriction to authorized users only.",
      "description": "This retrieves a single teacher's information for detailed view, audit, or editing, by attendance_teacher.id (PK, UUID). Data includes all identifying, contact, and linked school/classroom ids, as well as created/updated timestamps. Role-based access enforcement is required (teacher self, admins, possibly school supervisors). If not found or forbidden, 404/403 error returned. Related endpoints include search (PATCH), creation (POST), and update (PUT).",
      "summary": "Get single teacher (attendance_teacher) by id.",
      "parameters": [
        {
          "name": "id",
          "description": "Target teacher's id (attendance_teacher.id, UUID)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Detailed teacher entity information record",
        "typeName": "IAttendanceTeacher"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/teachers/{id}",
      "method": "get"
    },
    {
      "specification": "Create new teacher entity (attendance_teacher) for school/role onboarding. Used for admin or HR operation, including linking to school/auth account. Enforces required fields and normalizes teacher data.",
      "description": "This API adds a new teacher entry in attendance_teacher. Expected request data includes: school_id (required FK), auth_account_id (FK to authentication account), name, email (unique), phone. Validation must ensure unique email, valid school and auth account ids, and required fields. Only authorized roles (admin) can perform this action. If a teacher with this email exists, 409 error should be returned. On success, returns created teacher record.",
      "summary": "Create a new teacher (attendance_teacher) record.",
      "parameters": [],
      "requestBody": {
        "description": "New teacher entity creation data",
        "typeName": "IAttendanceTeacher.ICreate"
      },
      "responseBody": {
        "description": "Created teacher info (attendance_teacher)",
        "typeName": "IAttendanceTeacher"
      },
      "authorization": {
        "role": [
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/teachers",
      "method": "post"
    },
    {
      "specification": "Update (replace) teacher info by id, with validation. Used for admin/HR to correct or change core info (email, phone, linked auth_account, school). Fully replaces teacher record identified by UUID.",
      "description": "This fully updates a teacher's record by PK id. Expects all necessary teacher data (including school_id, auth_account_id, name, email, phone). Used for corrections or HR-driven replacement of core teacher info. Validates: id exists, new email does not duplicate an existing, all FK references are valid. Authorization required (admin/possibly teacher self-update with restrictions). 404 for not found, 409 for duplicate email. Updates updated_at field on success. Returns updated teacher object.",
      "summary": "Replace a teacher entity by id (attendance_teacher, PUT).",
      "parameters": [
        {
          "name": "id",
          "description": "Target teacher's id (attendance_teacher.id, UUID)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Updated teacher replacement data (full)",
        "typeName": "IAttendanceTeacher.IUpdate"
      },
      "responseBody": {
        "description": "Updated teacher entity",
        "typeName": "IAttendanceTeacher"
      },
      "authorization": {
        "role": [
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/teachers/{id}",
      "method": "put"
    },
    {
      "specification": "Remove teacher by id from attendance_teacher. Admin/HR use only. Restricts removal by authorization. Must handle referential integrity (reassignment or cascade).",
      "description": "Soft deletes or fully removes a teacher record by id (UUID PK). Only an admin can call this endpoint. Validates: teacher exists, is eligible for deletion (check for linked classrooms, reassign if needed, etc.). May implement soft delete or hard delete based on system policy. Returns 204 or deleted teacher info. Errors include not found (404) or forbidden (403 if not allowed by system constraints). Related endpoints for create/list/update.",
      "summary": "Delete/remove teacher (attendance_teacher) by id.",
      "parameters": [
        {
          "name": "id",
          "description": "Target teacher id (UUID PK) to delete",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Removed teacher entity or success flag/null (per soft/hard delete policy)",
        "typeName": "IAttendanceTeacher"
      },
      "authorization": {
        "role": [
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/teachers/{id}",
      "method": "delete"
    },
    {
      "specification": "List/search all students with pagination/filtering from attendance_student table. Required for admin, teacher, and parent dashboards (show children). Allows search by name, classroom, parent, school, etc.",
      "description": "Lists students using paginated/search/filter parameters. Accepts school_id, parent_id, classroom_id, and search term (name or email/phone), with limit/offset and sorting for dashboard or parent view. Parent role is restricted to their own children. Teachers and admins see students in their class/school. Handles authorization. Pagination must be supported (limit, offset/next page), and search by relevant fields enabled. Related: create/update/delete endpoints for students. Response: array of students plus pagination block.",
      "summary": "Paginated, searchable student list (attendance_student).",
      "parameters": [],
      "requestBody": {
        "description": "Student query parameters (pagination, search, filter)",
        "typeName": "IAttendanceStudent.IRequest"
      },
      "responseBody": {
        "description": "Paginated list of students with summary info, with pagination block",
        "typeName": "IPageAttendanceStudent"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher",
          "parent"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/students",
      "method": "patch"
    },
    {
      "specification": "Get a single student by id (attendance_student PK). Provides detailed core profile with roles (parent, classroom, school) for authorized caller (self, teacher/class admin).",
      "description": "Returns core information for a given student by attendance_student.id (UUID PK). Includes profile, parent, classroom info. Only accessible by admin/teacher/parent role (parent can only see own child). If record is missing, 404 error. Disallows cross-organization access (school_id match enforced except admin). Related: patch for list, post for new registration, put for update, delete for removal.",
      "summary": "Get single student (attendance_student) by id.",
      "parameters": [
        {
          "name": "id",
          "description": "Attendance student id (UUID PK) to fetch",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Detailed student entity, including parent and class links",
        "typeName": "IAttendanceStudent"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher",
          "parent"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/students/{id}",
      "method": "get"
    },
    {
      "specification": "Register/enroll new student (attendance_student record). Used for school onboarding. Requires all core attributes, linked to parent if available, and valid FKs for school/class/auth account.",
      "description": "Creates new student profile in attendance_student: school_id (required FK), classroom_id (required), parent_id (optional), auth_account_id (required), name, gender, birthdate. Ensures each student has unique auth_account, and parent links are validated. On duplicate auth_account or other FK error, returns 409 or 422. Only admin or teacher may create students. On success, full student object returned.",
      "summary": "Create new student (attendance_student) record.",
      "parameters": [],
      "requestBody": {
        "description": "Student data for creation (enrollment/register)",
        "typeName": "IAttendanceStudent.ICreate"
      },
      "responseBody": {
        "description": "Created student object",
        "typeName": "IAttendanceStudent"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/students",
      "method": "post"
    },
    {
      "specification": "Update/replace a student's record by id (PUT, attendance_student). Used for admin/teacher to fix record, assign parent/classroom, or update demographic/contact.",
      "description": "Replaces student record with provided data by id (UUID PK). Accepts all teacher-operable fields: school_id, classroom_id, parent_id, auth_account_id, name, gender, birthdate. Validates all FKs and uniqueness constraints (auth_account). Authorization restricted to admins/teachers only, and school org constraint enforced. On success, returns updated student record. Errors: 404 (not found), 409 (conflict), 403 (forbidden).",
      "summary": "Replace a student (attendance_student) by id.",
      "parameters": [
        {
          "name": "id",
          "description": "Attendance student id to update (UUID PK)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Student replacement data (all core fields)",
        "typeName": "IAttendanceStudent.IUpdate"
      },
      "responseBody": {
        "description": "Updated student entity",
        "typeName": "IAttendanceStudent"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/students/{id}",
      "method": "put"
    },
    {
      "specification": "Remove (soft/hard delete) a student by id (DELETE, attendance_student). Used for admin/teacher only. Requires reference/integrity checks. May return removed student data or null.",
      "description": "Deletes attendance_student record by id. Only admin or relevant teacher can perform. Checks for classroom/parent/attendance history dependencies. Deletion may be soft (mark inactive) or hard per policy. On success, returns deleted entity as confirmation (or null). Error for not found, or conflict if not allowed due to data links. Related endpoints: student post/patch/put.",
      "summary": "Delete a student record (attendance_student) by id.",
      "parameters": [
        {
          "name": "id",
          "description": "Attendance student id to delete (UUID PK)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Removed/deleted student object, or null (policy)",
        "typeName": "IAttendanceStudent"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/students/{id}",
      "method": "delete"
    },
    {
      "specification": "Paginated/searchable parent/guardian list (attendance_parent) for admin mediation/management; supports school, student, and search filter. Responds to management dashboard queries, but restricts sensitive contact info to authorized callers.",
      "description": "Returns paginated, filtered list of parent/guardian entities. Input: school filter, name, email/phone search, child(student) lookup, pagination/sort. Only admin role may query full list; teachers may query parents of their students only. Parents may not call this. Handles data privacy: restricts sensitive info if caller is teacher and not admin. Related endpoints: post for registration, patch for batch/advanced search, get for detail.",
      "summary": "Paginated/search for parent/guardian list (attendance_parent).",
      "parameters": [],
      "requestBody": {
        "description": "Parent/guardian search and list filter query",
        "typeName": "IAttendanceParent.IRequest"
      },
      "responseBody": {
        "description": "Paginated parent entity list with summary info and children links",
        "typeName": "IPageAttendanceParent"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/parents",
      "method": "patch"
    },
    {
      "specification": "attendance_parent 엔터티의 상세 조회 API입니다. 이 엔드포인트는 특정 부모(학부모)의 상세 정보를 반환합니다. Prisma DB의 attendance_parent 테이블의 주석을 참조하여, 해당 부모의 이름, 이메일, 전화번호, 생성일, 수정일 등 atomic 필드와 연결된 학생 정보(단일 또는 여러 자녀와의 관계)를 명확하게 제공합니다. 이 API는 학부모 역할 기반 서비스 내에서 자녀 출석 현황 알림 설정, 연락처 검증, 개인정보 보호 및 관리 목적 등을 위해 사용될 수 있습니다.\n\n이 API는 인증 및 권한 관리를 고려하여 설계되어야 하며, 해당 부모 계정에 접근 가능한 본인 또는 관리자(권한자)가 호출해야 하므로 Bearer 토큰 인증과 역할 기반 접근제한(Parent 또는 Admin)이 반드시 적용되어야 합니다. 조회 시 타인의 정보가 반환되지 않도록, 호출자 권한(Parent=본인, Admin=전체) 정책을 구현해야 하며, 감사로그 기록 등 개인정보 조회의 추적성도 보장해야 합니다.\n\n실패 케이스로는, 호출자가 본인 계정이 아닐 경우 403 Forbidden, 해당 id에 매치되는 데이터가 없을 경우 404 Not Found 등이 반환됩니다. 성공 시 단일 attendance_parent 오브젝트가 반환되며, 자녀/채널/연동 정보는 필요에 따라 추가로 내부에서 join 조회 가능하도록 설계합니다.",
      "description": "이 API는 attendance_parent 테이블의 주요 필드와 참조관계(학생 정보 등)를 상세하게 반환합니다. 개인정보 보호를 위해 호출자의 인증/권한을 체크해야 하며, 본인의 정보 또는 관리자로 인증된 경우에만 응답이 반환됩니다. 개인정보 제공에 따른 보호, 이력관리, 감사로그 등 서비스 정책을 철저히 반영합니다.",
      "summary": "attendance_parent 테이블의 부모 상세 정보 반환 API",
      "parameters": [
        {
          "name": "id",
          "description": "상세 정보를 조회할 대상 부모(학부모)의 UUID, attendance_parent 엔터티의 PK",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "상세 부모 정보 오브젝트",
        "typeName": "IAttendanceParent"
      },
      "authorization": {
        "role": [
          "parent",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/parents/{id}",
      "method": "get"
    },
    {
      "specification": "새로운 부모(학부모) 사용자를 등록하는 attendance_parent 엔터티의 생성 API입니다. Prisma DB의 attendance_parent 모델의 주석과 3NF 상관관계를 바탕으로, 본 API는 학부모의 직접 가입 또는 관리자의 등록 업무, 그리고 초기 인증 계정 연결 정보를 반영하여 설계됩니다. 요청 바디는 필수적으로 auth_account_id, name, email, phone 등이 포함된 오브젝트 구조를 따라야 하며(중복/유니크 제약 시 서버에서 오류 반환), 생성일/수정일은 시스템에서 자동기록됩니다.\n\n본 API는 인증된 관리자나(관리자 권한으로 대량 등록 또는 외부 연동) 본인 직접 가입(소셜/이메일 인증 등 다양한 가입 시나리오)을 모두 지원할 수 있도록 설계되어야 합니다. 생성 후 attendance_parent 오브젝트와 기본 정보가 반환됩니다. 실무에서 데이터 일관성/법적 책임을 위해 바로 로그인/실명인증/자녀 연결 시나리오가 이어질 수 있으므로, 회원 정보만 우선 생성하고 본인/연동 자녀 매핑은 후속 API에서 처리할 수 있도록 설계합니다.",
      "description": "attendance_parent 테이블의 신규 학부모(보호자) 회원 생성 API입니다. 필수 입력값(인증 계정 ID, 이름, 이메일, 연락처)을 JSON 오브젝트로 받고, 등록 성공 시 생성된 attendance_parent 오브젝트가 반환됩니다. 생성 시 유니크 제약(이메일, auth_account_id) 위반시 409 에러 반환, 사업적 보안정책(본인 인증 등)은 별도 엔드포인트와 분리하여 본 API는 정보 등록/응답까지만 제공합니다.",
      "summary": "attendance_parent 엔터티 신규 생성(회원가입) API",
      "parameters": [],
      "requestBody": {
        "description": "학부모 회원 생성 요청 오브젝트",
        "typeName": "IAttendanceParent.ICreate"
      },
      "responseBody": {
        "description": "생성된 부모(학부모) 정보 오브젝트",
        "typeName": "IAttendanceParent"
      },
      "authorization": {
        "role": [
          "parent",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/parents",
      "method": "post"
    },
    {
      "specification": "attendance_parent 엔터티의 정보 수정(업데이트) API입니다. 이 API는 특정 학부모(보호자)의 이름, 이메일, 연락처 등 개인정보를 갱신할 때 사용합니다. Prisma의 attendance_parent 테이블 기준, 요청 시 auth_account_id, email 등의 유니크 제약을 반드시 서버단에서 강제 검증하며, 수정 전/후 값 비교, 변경 이력 기록, 감사로그 집계 등 개인정보 안전 관리도 구현해야 합니다.\n\n실제로는 자녀 관계, 알림 채널 등 세부 매핑은 별도의 엔드포인트로 처리해야 하며, 본 API는 보호자 자체 정보(이름/연락처 등)만 수정합니다. 호출자는 반드시 본인(Parent) 혹은 인증된 관리자(관리자 역할)이어야 하므로, Bearer 토큰 인증이 적용되며, 접근 권한 위반 시 403, 데이터 불존재시 404, 제약조건 위반 시 409 가 표준 오류입니다.",
      "description": "특정 attendance_parent(학부모)의 개인정보(이름, 메일, 연락처 등)를 JSON 오브젝트로 부분/전체 수정합니다. 요청자는 본인 또는 권한 있는 관리자여야 하며, 민감정보 접근 이력은 감사 로그에 자동 기록해야 합니다. 성공 시 업데이트된 attendance_parent 오브젝트가 반환됩니다.",
      "summary": "attendance_parent 엔터티 정보 수정 API",
      "parameters": [
        {
          "name": "id",
          "description": "수정 대상 부모(학부모) UUID (Primary Key)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "수정할 학부모 정보 오브젝트",
        "typeName": "IAttendanceParent.IUpdate"
      },
      "responseBody": {
        "description": "업데이트 완료된 부모(학부모) 정보 오브젝트",
        "typeName": "IAttendanceParent"
      },
      "authorization": {
        "role": [
          "parent",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/parents/{id}",
      "method": "put"
    },
    {
      "specification": "attendance_parent 엔터티(학부모/보호자)를 완전히 삭제(탈퇴 처리)하는 API입니다. 이 API는 엄격한 권한 정책(본인 또는 관리자)에 따라 사용되며, 단순 탈퇴/삭제 뿐 아니라 데이터 잔존 정책에 따라 논리적 삭제(soft delete) 또는 완전 삭제(physical delete) 정책 구현이 가능합니다. 실제 데이터베이스의 attendance_parent 테이블 PK(id)를 기준으로 부모 식별을 하고, 연관된 접속로그, 자녀 매핑, 알림설정 등도 cascade/적절히 처리되어야 합니다.\n\n실제 현장 정책에 따라 연관 자녀의 보호자 연결을 해제하거나, 알림채널 비활성화, 감사이력 기록 등이 동반되어야 하며, 실무적으로는 완전 삭제 대신 deleted_at 관리/표시(soft delete)가 권장됩니다. 권한이 없는 요청이거나, 해당 id의 보호자가 존재하지 않을 경우 403/404 에러 반환.\n\n본 API의 실사용 시나리오 예시로, 본인 탈퇴, 사고에 의한 외부 관리자 삭제, 개인정보 보호 위한 데이터 완전 삭제(법령 준수)가 있습니다.",
      "description": "attendance_parent(학부모/보호자) 엔터티의 삭제(탈퇴) API입니다. 인증된 본인 또는 관리자만이 호출 가능하며, 실제 요구에 따라 soft delete(논리삭제) 또는 완전 삭제 지원이 필요합니다. 연관 데이터/자녀 매핑/알림 이력등의 트랜잭션 처리 지정 필요. 성공 시 삭제 완료 응답 또는 삭제된 attendance_parent object 혹은 204 No Content가 반환됩니다.",
      "summary": "attendance_parent 엔터티 삭제(탈퇴) API",
      "parameters": [
        {
          "name": "id",
          "description": "삭제/탈퇴할 부모(학부모)의 UUID (Primary Key)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "삭제 결과 또는 삭제된 attendance_parent 오브젝트(soft delete인 경우).",
        "typeName": "IAttendanceParent"
      },
      "authorization": {
        "role": [
          "parent",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/parents/{id}",
      "method": "delete"
    },
    {
      "specification": "attendance_admin 엔터티의 집합 또는 검색 결과 리스트 반환 API입니다. 해당 API는 관리자(Attendance Admin)의 목록을 조회하거나, 검색 조건(이메일, 이름, 소속 학교 등) 기반 필터링, 페이징, 정렬 파라미터 등을 지원하는 것이 일반적입니다. DB의 attendance_admin 테이블의 3NF 구조에 맞춰 atomic 필드(이름, 이메일, 소속학교, 가입일 등)가 반환되며, 관리자별 상세링크나 접근권한, 등급/상태 등도 확장 가능합니다.\n\n대규모 시스템에서의 실무적 사용을 위해, 관리자 권한 또는 상위 관리기관 권한(교육청, 최상위 관리자)을 요구할 수 있으며, Bearer 인증 필수, 응답은 페이징 및 필터 조건에 따라 attendance_admin 배열 + 메타(pagination) 형식으로 반환하는 것이 표준입니다.\n\n실수요에서는 학교별/이름별 검색, 권한기반 접근제한(Security), 상세 페이지 링크 목적의 id 반환이 필수입니다. 비인가/비권한 요청 시 403 에러.\n\n키워드/필드별 검색 조건과 페이징은 requestBody의 IAttendanceAdmin.IRequest 타입에서 정의합니다.",
      "description": "attendance_admin(Admin/관리자)들의 리스트, 검색, 페이징 결과를 JSON 객체 배열 + pagination 메타로 반환하는 API입니다. 페이징 및 필터는 요청 바디에서 받아야 하며, 인증/권한이 반드시 요구됩니다. 각 관리자 개체의 atomic 필드(이름, 이메일, 소속 학교 등)와 반복/검색 대응 설계가 필수입니다.",
      "summary": "attendance_admin 관리자 리스트/검색 API",
      "parameters": [],
      "requestBody": {
        "description": "관리자 리스트/검색/페이징 조건값 오브젝트",
        "typeName": "IAttendanceAdmin.IRequest"
      },
      "responseBody": {
        "description": "페이징된 관리자(Admin) 리스트 반환. page 및 data 배열 포함.",
        "typeName": "IPageIAttendanceAdmin"
      },
      "authorization": {
        "role": [
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/admins",
      "method": "patch"
    },
    {
      "specification": "attendance_admin 관리자(공직자, 감독관 등) 단일 상세 정보 반환 API입니다. 이 엔드포인트는 관리자 목록 중 id(PK)로 특정한 단일 관리자 entity의 상세정보 오브젝트를 반환합니다. 본 상세 조회 API는 관리자 인증/권한 확인이 필수이며, (본인) 또는 상위권한 보유 시에만 정보를 제공합니다.\n\nDB의 attendance_admin 테이블 기준으로, 이름, 이메일, 소속 학교(id, name), 가입일(생성/수정일) 등 atomic 필드 및 sshool_id, auth_account_id 등 상세 데이터가 응답에 포함됩니다. 실무 용례로는 관리자 권한내 자기정보/다른 관리대상 조회, 관리자 상세정보 링크용 API, 개인정보보호/감사로그 트래킹 등에서 사용 가능합니다.\n\n비인가/비권한으로 접근 또는 해당 id 불존재 시 403/404 에러 반환. 성공시 단일 attendance_admin 오브젝트 반환.",
      "description": "attendance_admin(관리자) 단일 PK(id) 기준 상세정보 반환 API입니다. 실무적으로 관리자/상위 관리자/감사자/본인만 접근할 수 있어야 하며, 권한체크, 개인정보노출 보호, 접근이력 감사가 구현되어야 합니다. 성공시 attendance_admin 단일 오브젝트 구조 반환.",
      "summary": "attendance_admin 테이블의 관리자 단일 상세 정보 반환 API",
      "parameters": [
        {
          "name": "id",
          "description": "상세정보를 조회할 대상 관리자(Admin) UUID (PK)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "상세 관리자(Admin) 정보 오브젝트 반환",
        "typeName": "IAttendanceAdmin"
      },
      "authorization": {
        "role": [
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/admins/{id}",
      "method": "get"
    },
    {
      "specification": "신규 admin(관리자/감독관) 사용자를 생성하는 attendance_admin 엔티티 신규등록 API입니다. DB attendance_admin의 atomic 필드에 기준하며, name, email, school_id, auth_account_id 등 필수 입력값을 포함한 JSON 오브젝트를 요청 바디로 받습니다. 생성자(요청자)는 반드시 상위 관리자/감사자 권한(교육청, 경찰, 시스템 관리자)이어야 합니다. 생성 후 attendance_admin 오브젝트가 반환되며, 신설 관리자 활성상태는 후속 별도 API(승인/비활성화)에서 처리할 수 있습니다.\n\n실무적으로 여러 관리자 등재, 외부기관/시스템 연동 전달, 교육부보고 등에도 사용될 수 있으며, 응답에는 생성된 admin의 모든 atomic 필드가 포함됩니다.",
      "description": "attendance_admin(관리자) 신규 생성(등록) API입니다. 요청자는 반드시 충분한 권한(상위 관리자/관리자 인증)이 있어야 하며, 입력값(name, email, school_id, auth_account_id 등) 중복/제약조건(유니크) 검증이 수행되어야 합니다. 성공 시 생성된 attendance_admin 오브젝트가 반환되며, 추가 등록처리/승인 등은 별도 API에서 수행될 수 있습니다.",
      "summary": "attendance_admin 관리자 신규 생성(등록) API",
      "parameters": [],
      "requestBody": {
        "description": "관리자(감독관) 신규등록 요청 바디 오브젝트",
        "typeName": "IAttendanceAdmin.ICreate"
      },
      "responseBody": {
        "description": "생성된 관리자(Admin) 오브젝트",
        "typeName": "IAttendanceAdmin"
      },
      "authorization": {
        "role": [
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/admins",
      "method": "post"
    },
    {
      "specification": "attendance_admin 엔터티(관리자)의 정보 수정(변경, update) API입니다. 주로 관리자 개인 정보(email, 이름 등), 소속(학교), 인증 계정 매핑 필드(auth_account_id 등)를 갱신합니다. PK(id)로 수정 대상 지정, JSON 오브젝트로 필드 전달. 다른 관리자 또는 상위 관리자만이 접근 가능한 권한 정책이 강제되어야 하며(Bearer 인증), DB의 unique 제약(이메일, 인증계정 등) 위반 시 신속히 오류 처리됩니다.\n\n감사정책상 변경이력 기록 및 중요한 데이터는 변경 전/후 모두 감사로그에 남겨야 하며, 실무적으로 수정이 잦은 필드는 따로 부분수정/전체수정 구분도 지원 가능. 응답은 수정 후 최신 attendance_admin 오브젝트 반환, 실패 시 403/409/404 등 표준오류 반환.",
      "description": "특정 attendance_admin(관리자)의 정보(PK = id 기준)를 JSON 오브젝트로 수정/갱신하는 API. 요청자는 충분한 관리자권한/상위자격을 통해 Bearer 인증 후 사용 가능. 수정 후(전체/부분) attendance_admin 오브젝트 리턴. 변경이력 및 감사로그 필수.",
      "summary": "attendance_admin(관리자) 정보 수정(업데이트) API",
      "parameters": [
        {
          "name": "id",
          "description": "수정할 관리자(admin)의 UUID (PK)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "수정할 관리자 정보(이메일, 이름, 소속 등) 오브젝트",
        "typeName": "IAttendanceAdmin.IUpdate"
      },
      "responseBody": {
        "description": "수정된 관리자(Admin) 정보 오브젝트",
        "typeName": "IAttendanceAdmin"
      },
      "authorization": {
        "role": [
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/admins/{id}",
      "method": "put"
    },
    {
      "specification": "attendance_admin 엔터티(관리자)를 완전 삭제(퇴직/권한말소) 처리하는 API입니다. attendance_admin DB모델의 id(PK) 기준, 인증된 관리자가 퇴직자 또는 외부기관 권한 회수, 시스템상 비활성화 정책 등 다양한 요구사항에 따라 삭제를 실행할 수 있습니다. 연관된 접근로그, 감사이력 등은 cascade/backup 정책을 적용하여 함께 처리해야 하며, 실운영상 soft-delete(논리삭제: deleted_at=now) 정책 적용이 권장됩니다. 요청자는 반드시 Bearer 인증된 상위 관리자만 가능.",
      "description": "attendance_admin(관리자) 삭제(퇴직/권한말소) API입니다. 관리자는 본인 또는 상위 관리자/최상위 감사권자가 호출할 수 있으며, 소프트삭제 정책 권고(복구/감사목적). 성공시 삭제된 attendance_admin 오브젝트 또는 No Content 반환, 실패시는 403/404등으로 응답.",
      "summary": "attendance_admin 관리자 삭제/권한말소 API",
      "parameters": [
        {
          "name": "id",
          "description": "삭제 대상 관리자(admin)의 UUID (PK)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "삭제 완료된 관리자(Admin) 오브젝트 또는 완료 응답 (204)",
        "typeName": "IAttendanceAdmin"
      },
      "authorization": {
        "role": [
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/admins/{id}",
      "method": "delete"
    },
    {
      "specification": "attendance_school 테이블 내 학교의 리스트를 검색/조회(페이징/필터링) 하는 API입니다. 사용자는 검색 조건(이름, 지역, 페이징 등)이 포함된 오브젝트를 requestBody로 전달할 수 있으며, 응답은 데이터 배열+페이징 메타 오브젝트로 반환됩니다. 학교 정보는 이름, 주소 등 atomic 필드만 포함하며, 상세 정보/학생/교사 정보 등은 추가 API에서 별도 조회합니다. 본 API는 관리자는 물론, 교사/학부모/학생 등도 사용 가능한 권한 정책이 적용 가능해야 합니다. Bearer 인증이 권장되며, 등급별 정보축소/조건 필터링도 지원할 수 있습니다.",
      "description": "학교 엔터티(attendance_school) 리스트 검색/조회(페이징/필터) API입니다. 요청자는 권한별 필터링 가능, 페이징/검색 조건을 requestBody로 받고, IPageIAttendanceSchool 응답합니다. 이름/주소 등 핵심 필드 위주 설계.",
      "summary": "attendance_school 테이블의 학교 검색/조회 API",
      "parameters": [],
      "requestBody": {
        "description": "학교 검색/필터/페이징 조건 오브젝트",
        "typeName": "IAttendanceSchool.IRequest"
      },
      "responseBody": {
        "description": "페이징된 학교 목록 및 페이지 메타 오브젝트",
        "typeName": "IPageIAttendanceSchool"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher",
          "student",
          "parent"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/schools",
      "method": "patch"
    },
    {
      "specification": "단일 학교(Attendance School Entity) PK(id) 기준 상세정보 조회 API입니다. attendance_school의 이름, 주소, 생성일 등 atomic 필드만 반환하며, 상세/추가 정보(학생/교사 목록, 반 정보, 통계 등)는 별도 연동 API에서 처리합니다. 본 API는 교사, 학생, 학부모, 관리자 모두 사용 가능해야 하며, 접근 시 Bearer 인증이 권장됩니다. 권한/정책에 따라 정보 공개 범위는 조절될 수 있습니다.",
      "description": "attendance_school 테이블의 단일 학교 상세정보 조회 API입니다. 유저(교사/학생/학부모/관리자) 모두 활용 가능, PK(id) 기준 학교 오브젝트 반환. 등급/권한별 응답 제한 가변화 가능합니다.",
      "summary": "attendance_school 학교 단일 상세 정보 조회 API",
      "parameters": [
        {
          "name": "id",
          "description": "상세정보를 조회할 대상 학교 UUID (Primary Key)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "상세 학교 정보 오브젝트",
        "typeName": "IAttendanceSchool"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher",
          "student",
          "parent"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/schools/{id}",
      "method": "get"
    },
    {
      "specification": "Creates a new school in the attendance system. This operation is associated with the 'attendance_school' table, which stores atomic information for each school, such as name and address, and does not include any denormalized statistics. The endpoint enables authorized clients (such as administrators) to register a new school entity, providing essential information such as the school's name and address. Only authorized admin-level roles can access this operation to ensure the integrity and scope of the school registry data. All required validations for unique school name/address must be enforced, and duplicate entries must be rejected gracefully. Related tables include attendance_teacher, attendance_student, and attendance_admin, as they reference school_id. On success, the newly created school information is returned, including its unique ID and registration timestamp.",
      "description": "This endpoint allows the creation of a new school in the attendance system, as required by the administrator interface for school management (see 06_attendance_admin_page.md). The input must include atomic, normalized school properties, specifically the school name and address. These fields must be validated for uniqueness at the database level to prevent the registration of duplicate schools. The operation is restricted to users with admin privileges, as identified via bearer token JWT authentication. Upon successful creation, the endpoint returns the full school record with a unique school ID, time of creation, and all submitted fields. Validation errors, such as duplicate school name/address or missing required fields, yield appropriate error responses. This operation is critical for onboarding new institutions into the platform and creating the reference anchor for related entities such as teachers, students, admins, and classrooms. It should be used before registering users or classes for new schools.",
      "summary": "Create new school (attendance_school table).",
      "parameters": [],
      "requestBody": {
        "description": "Information required to create a new school (name, address).",
        "typeName": "IAttendanceSchool.ICreate"
      },
      "responseBody": {
        "description": "Newly created school entity with ID and all attributes.",
        "typeName": "IAttendanceSchool"
      },
      "path": "/attendance/schools",
      "method": "post"
    },
    {
      "specification": "Updates the data of a specific school entity in the system. Associated with the 'attendance_school' table, this operation allows for modifying atomic school fields such as name or address. Only authorized admin users may perform updates. The endpoint ensures all references remain consistent and enforces uniqueness constraints for school name/address. It is crucial for maintaining accurate institution data for all dependent modules (students, teachers, classrooms).",
      "description": "This endpoint permits updating an existing school's name or address, referenced by its unique school ID, as managed in the attendance_school table. Only admin-level users may access this route, which requires JWT bearer authentication. The operation confirms the existence of the school, ensures any changes comply with uniqueness constraints for name/address, and propagates updates to all referencing records. Attempting to update to a duplicate name/address will return a validation error. All changes are timestamped for audit purposes. Use this endpoint to correct or modify institution information as required in administrative workflows.",
      "summary": "Update a school's name or address (attendance_school table).",
      "parameters": [
        {
          "name": "id",
          "description": "Target school's unique ID",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "School update information (name/address/other allowed changes).",
        "typeName": "IAttendanceSchool.IUpdate"
      },
      "responseBody": {
        "description": "Updated school entity record.",
        "typeName": "IAttendanceSchool"
      },
      "path": "/attendance/schools/{id}",
      "method": "put"
    },
    {
      "specification": "Deletes a specified school from the database. This operation is associated with the 'attendance_school' table, which stores all registered institution entities. Only users with admin privileges may perform this action. Deletion must cascade to or validate all referencing entities (teachers, students, classrooms, admins) to preserve referential integrity. Use with caution; this operation is typically restricted via secondary verification in production environments.",
      "description": "Deletes an existing school identified by its unique school ID (from the attendance_school table). Only system administrators may access this endpoint. Before deletion, the service must check for dependent entities (students, teachers, classrooms, admins) and either refuse the operation if links remain or cascade delete/reassign according to the system's policy. Operates under strict audit logging. On successful deletion, a confirmation is returned; otherwise, appropriate error or conflict responses are given. Refer to administrator data management policies for real-world data removal impacts.",
      "summary": "Delete a school from the attendance system (attendance_school table).",
      "parameters": [
        {
          "name": "id",
          "description": "Target school's unique ID",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Success confirmation or error details.",
        "typeName": "IDeleteResult"
      },
      "path": "/attendance/schools/{id}",
      "method": "delete"
    },
    {
      "specification": "Retrieves a paginated, filtered list of classrooms in the system. This operation is associated with the 'attendance_classroom' table and is designed for scenarios where users (typically teachers or admins) need to search, filter, and list classrooms belonging to a specific school, grade, or teacher. Supports query input for advanced search, pagination, and sorting. Used in dashboards and directory listing components.",
      "description": "Returns a list of classrooms based on search, filter, and pagination parameters. The underlying attendance_classroom table is atomic and normalized, so this endpoint may filter by school, teacher, grade level, or other search criteria. Input supports page size, page number/offset, and sort options. Only information directly from the attendance_classroom table and valid reference lookups is returned—no derived statistics. Accessible to teachers and admins with appropriate roles, enforced via bearer token authentication. The endpoint enables frontends to build listing UI, such as classroom directories and management panels. Supports error handling for out-of-bounds pages or invalid filters.",
      "summary": "List/search classrooms (attendance_classroom table).",
      "parameters": [],
      "requestBody": {
        "description": "Search, filter and pagination info for classroom list.",
        "typeName": "IAttendanceClassroom.IRequest"
      },
      "responseBody": {
        "description": "Paginated list of classroom entities.",
        "typeName": "IPageIAttendanceClassroom"
      },
      "path": "/attendance/classrooms",
      "method": "patch"
    },
    {
      "specification": "Retrieves the complete data for a specific classroom entity. Linked to the 'attendance_classroom' table, this operation supports direct lookup by unique classroom ID. Used in dashboards, rollbooks, and configuration panels for teachers/admins. Returns all atomic classroom attributes, including references (school, teacher), but does not return denormalized stats or student lists directly.",
      "description": "Gets the complete record for a single classroom using its unique ID (primary key in attendance_classroom). This operation is accessible to authorized users with either teacher or admin privileges, secured by bearer token authentication. The endpoint strictly returns only atomic classroom fields (ID, name, grade, school reference, teacher reference, etc.) and does not include embedded lists of students or derived data. Intended for use cases such as class editor panels, teacher dashboards, and context lookups for classroom detail screens. Errors are returned for invalid IDs or access denied situations. Use this endpoint for detail views or update flows in the frontend UI.",
      "summary": "Get a specific classroom by ID (attendance_classroom table).",
      "parameters": [
        {
          "name": "id",
          "description": "Target classroom's unique ID",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Classroom entity with all atomic fields.",
        "typeName": "IAttendanceClassroom"
      },
      "path": "/attendance/classrooms/{id}",
      "method": "get"
    },
    {
      "specification": "Creates a new classroom record in the attendance system. The endpoint is associated with the 'attendance_classroom' table, supporting the creation of new groups/classes for schools. Requires information about the school (school_id), lead teacher (teacher_id), classroom name, and grade level. Used by admin or teacher roles in class/curriculum management panels. All foreign keys are validated on creation. Duplicated classroom names within a school are rejected. Newly created classrooms are indicated by their unique ID.",
      "description": "Adds a new classroom to the system, as managed by the attendance_classroom table. Input must include a valid school_id, teacher_id, unique classroom name for that school, and grade level. Only admin or teacher users can access this operation, with authentication via bearer token. The service enforces all key constraints and uniqueness within the given school. On success, the complete classroom record, including its assigned ID and audit timestamps, is returned. This endpoint is integral to onboarding new classes and enabling teacher dashboard configuration or grade/year transitions. Input errors, FK violations, or uniqueness conflicts are returned with detailed error responses.",
      "summary": "Create a new classroom (attendance_classroom table).",
      "parameters": [],
      "requestBody": {
        "description": "Classroom creation data (school, teacher, name, grade).",
        "typeName": "IAttendanceClassroom.ICreate"
      },
      "responseBody": {
        "description": "Created classroom entity with unique ID.",
        "typeName": "IAttendanceClassroom"
      },
      "path": "/attendance/classrooms",
      "method": "post"
    },
    {
      "specification": "Updates the atomic and reference data for a specific classroom entity. Linked to the 'attendance_classroom' table, this operation supports the correction of classroom name, teacher assignment, or grade level. Admin or teacher roles may access this depending on policy. FK validity and uniqueness constraints within the school are always enforced. Updates are audited for accountability.",
      "description": "Modifies the name, lead teacher, or grade of a classroom, referenced by its unique ID. Only users with teacher or admin roles are permitted, enforced by bearer authentication. The service checks all FKs (school_id, teacher_id), ensures the intended name remains unique within its school, and rejects updates violating business or DB constraints. A successful update returns the new state of the classroom entity. All updates are logged for audit trail, supporting rollbacks and change history. Use for year transitions, teacher reassignments, or error corrections. Returns error if FK not found or constraints are violated.",
      "summary": "Update a classroom (attendance_classroom table).",
      "parameters": [
        {
          "name": "id",
          "description": "Target classroom's unique ID",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Classroom update data (name, teacher, grade, etc).",
        "typeName": "IAttendanceClassroom.IUpdate"
      },
      "responseBody": {
        "description": "Updated classroom entity.",
        "typeName": "IAttendanceClassroom"
      },
      "path": "/attendance/classrooms/{id}",
      "method": "put"
    },
    {
      "specification": "Deletes a classroom entity from the database. This operation is associated with the 'attendance_classroom' table, and is used by teachers or admins to remove unused, obsolete, or merged classes. Deletion requires valid authentication and must check for dependent records (students/attendance/notifications) to prevent orphaned data or to trigger cascading deletes per policy. All deletions are audit-logged.",
      "description": "Removes a classroom identified by its unique ID (from attendance_classroom table). Only admin or teacher accounts with sufficient privileges may perform this operation, which is authenticated with a bearer token. Before deletion, the service must ensure that referential constraints are respected. If permitted by system policy, associated records (such as attendance or students) may be reassigned or deleted as well. The operation logs all events in the audit log table for transparency and compliance. Upon success, the endpoint returns confirmation; otherwise, it delivers detailed errors explaining why deletion is not possible (such as FK violation or policy restriction).",
      "summary": "Delete a classroom (attendance_classroom table).",
      "parameters": [
        {
          "name": "id",
          "description": "Target classroom's unique ID",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Success confirmation or error details.",
        "typeName": "IDeleteResult"
      },
      "path": "/attendance/classrooms/{id}",
      "method": "delete"
    },
    {
      "specification": "Retrieves a paginated, searchable list of authentication accounts. Associated with the 'attendance_auth_account' table, supporting scenarios where admins or system operators list/search logins for audit, linkage, or operational management. Input may include search criteria, pagination, and sort options. Used for admin management panels and audit compliance.",
      "description": "Returns a list of auth accounts filtered by search criteria or pagination info, from the attendance_auth_account table. Typical use: admin reviews accounts, links, and status for users of various roles. Only admins or operators with the correct privileges may perform listing/search. Query supports filtering by email, creation date, status, or other account attributes. Results are paginated with page count/offset and sort fields. This endpoint supports admin-side dashboards for operational review and troubleshooting. Invalid filters or requests yield error responses. Bearer authentication required.",
      "summary": "List/search authentication accounts (attendance_auth_account table).",
      "parameters": [],
      "requestBody": {
        "description": "Search and pagination information for auth account list.",
        "typeName": "IAttendanceAuthAccount.IRequest"
      },
      "responseBody": {
        "description": "Paginated list of authentication accounts.",
        "typeName": "IPageIAttendanceAuthAccount"
      },
      "path": "/attendance/auth/accounts",
      "method": "patch"
    },
    {
      "specification": "Retrieves the data for a specific authentication account in the system. Linked to the 'attendance_auth_account' table, this endpoint allows admin or system processes to get details for a specific user by ID. Used for audit, troubleshooting, or account/permissions management flows.",
      "description": "Returns the full authentication account entity referenced by its unique ID from the attendance_auth_account table. Admins or operators may use this endpoint for account lookups, audits, user support, or troubleshooting. Only authorized roles may access via bearer authentication. All atomic fields (id, email, status, creation, last update, etc) are returned—no profile or role attributes from other tables. This endpoint supports admin dashboard account detail views and troubleshooting tools. Error responses are given for non-existent IDs or access violations.",
      "summary": "Get authentication account details by ID (attendance_auth_account table).",
      "parameters": [
        {
          "name": "id",
          "description": "Target authentication account's unique ID",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Authentication account entity for the requested ID.",
        "typeName": "IAttendanceAuthAccount"
      },
      "path": "/attendance/auth/accounts/{id}",
      "method": "get"
    },
    {
      "specification": "Creates a new authentication account. Associated with the 'attendance_auth_account' table, this operation supports initial onboarding for all user roles (teacher, student, parent, admin). It handles registration with local credentials (email/password) or may be adapted for social login mapping (see attendance_social_account). The endpoint enforces email uniqueness and stores only atomic, non-profile info. New accounts are audited for compliance and support linking to user roles after registration. Admin privilege or open registration policy governs accessibility.",
      "description": "Registers a new authentication account record in the attendance_auth_account table. The request body specifies email, password (hashed), etc, adhering to the local login policy and requirements for unique emails. This route is used by onboarding flows for all user types, preparing their login credentials (with further role assignments handled elsewhere). Errors are returned for duplicate emails, weak password hashes, or invalid format. After creation, the full account record is returned for use in session/token flows. This endpoint is fundamental to account onboarding, and supports both local and, with extension, social login onboarding. Strict audit logs are kept to track all new account registrations.",
      "summary": "Create a new authentication account (attendance_auth_account table).",
      "parameters": [],
      "requestBody": {
        "description": "Authentication account creation info (email, password, etc).",
        "typeName": "IAttendanceAuthAccount.ICreate"
      },
      "responseBody": {
        "description": "Newly created authentication account entity.",
        "typeName": "IAttendanceAuthAccount"
      },
      "path": "/attendance/auth/accounts",
      "method": "post"
    },
    {
      "specification": "Implements updating an existing authentication account entity in attendance_auth_account table. This operation allows for the modification of properties such as email and password_hash, while maintaining atomicity and normalization of authentication data. It is essential for supporting account recovery, profile updates, and password reset flows. The endpoint requires strict adherence to unique constraints for email and consistency with the linked user role tables (teacher/student/admin/parent).",
      "description": "This API allows a client with proper authorization (such as an administrator or the account owner) to update information of a specific authentication account in the attendance_auth_account table. The endpoint ensures strict 3NF compliance — it never allows inserting role or profile-specific data here, only atomic fields pertaining to authentication logic such as email or password hash. It supports use cases like email update, password reset, or recovery following a social login link/unlink action. Requests must be authenticated with a bearer token and are subject to auditing for security compliance. Related critical actions (such as password changes) may be separately logged in the audit log table (attendance_audit_log). Validation includes ensuring new email is unique if provided, and that no hard delete occurs (soft delete only via deleted_at).",
      "summary": "Updates an existing authentication account in the attendance_auth_account table.",
      "parameters": [
        {
          "name": "id",
          "description": "Authentication account identifier (UUID). Corresponds to attendance_auth_account.id",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Fields to update on the authentication account (email/password hash/soft delete marker).",
        "typeName": "IAttendanceAuthAccount.IUpdate"
      },
      "responseBody": {
        "description": "Returns the updated authentication account entity.",
        "typeName": "IAttendanceAuthAccount"
      },
      "authorization": {
        "role": [
          "attendance_admin",
          "attendance_teacher",
          "attendance_parent",
          "attendance_student"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/auth/accounts/{id}",
      "method": "put"
    },
    {
      "specification": "Implements soft deletion of an authentication account (attendance_auth_account row) by marking deleted_at. This operation is critical for account deactivation, regulatory compliance, and security programs. Never physically deletes for audit trail retention.",
      "description": "This API soft-deletes an authentication account by setting deleted_at on the relevant attendance_auth_account row, disabling further authentication. It supports user-initiated account deletion, admin offboarding, or regulatory erasure requests, while ensuring compliance with security and audit requirements by never hard-deleting records. Related actions should be recorded in attendance_audit_log for regulatory traceability. Only fully authorized actors (admin, owner) can call this endpoint, with strict checks that role table dependencies are honored (parent/teacher/student/admin linkage must be considered).",
      "summary": "Soft-deletes an authentication account by marking deleted_at.",
      "parameters": [
        {
          "name": "id",
          "description": "Authentication account identifier to soft delete (UUID). Corresponds to attendance_auth_account.id",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Returns the updated authentication account (marked deleted).",
        "typeName": "IAttendanceAuthAccount"
      },
      "authorization": {
        "role": [
          "attendance_admin",
          "attendance_teacher",
          "attendance_parent",
          "attendance_student"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/auth/accounts/{id}",
      "method": "delete"
    },
    {
      "specification": "Implements paginated, filterable list retrieval of all social account mappings (attendance_social_account) for audit, account linking, or management UI purposes. This endpoint allows querying by provider, social_id, or auth_account_id for reporting/monitoring needs.",
      "description": "Retrieves a list of mapped social accounts in attendance_social_account, supporting pagination, search, and filter options on provider, social_id, or account linkage. This is used by admin UIs or account management modules to review social login configurations, confirm linkages, or audit possible conflicts. Requires authentication as an admin or the account owner, and returns paginated data with filtering support for auditability. Sensitive auditing may be performed for provider management or security review.",
      "summary": "Retrieves a paginated, filterable list of social account mappings.",
      "parameters": [],
      "requestBody": {
        "description": "Pagination, search, or filtering criteria for the list of social accounts.",
        "typeName": "IAttendanceSocialAccount.IRequest"
      },
      "responseBody": {
        "description": "Paginated list of attendance_social_accounts matching criteria.",
        "typeName": "IPageIAttendanceSocialAccount"
      },
      "authorization": {
        "role": [
          "attendance_admin",
          "attendance_teacher",
          "attendance_parent",
          "attendance_student"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/auth/socialAccounts",
      "method": "patch"
    },
    {
      "specification": "Retrieves a specific mapped social account (attendance_social_account) by its ID to show linkage detail (e.g., for user account profile, audit review, or account recovery action). Key for OAuth2/social login audit, security, and linkage management.",
      "description": "Gets detailed information about a particular social login mapping, identified by the unique UUID. Used for profile, security, or administrative views into the social login linkage status, including auditing which external provider/social_id is linked to which local account. Requires authentication with proper access checks to ensure user or admin visibility. Includes link timestamp and provider identity for audit/compliance use cases.",
      "summary": "Retrieves a single social account mapping record by its ID.",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of attendance_social_account mapping to retrieve.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Returns the attendance_social_account record.",
        "typeName": "IAttendanceSocialAccount"
      },
      "authorization": {
        "role": [
          "attendance_admin",
          "attendance_teacher",
          "attendance_parent",
          "attendance_student"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/auth/socialAccounts/{id}",
      "method": "get"
    },
    {
      "specification": "Implements creation of a new social account mapping (attendance_social_account), linking an external provider account (Google, Naver, etc.) to a local authentication account. Used in social sign-up, profile linking workflows, and OAuth2 onboarding.",
      "description": "Creates a new row in attendance_social_account linking a given external social account to an existing authentication account (ID in attendance_auth_account). Enforces unique constraint on (provider, social_id) and ensures correct linkage to local account. On successful creation, a new mapping is stored with audit information for compliance and logging. Used in registration, social login/account-linking flows. Requires authentication with bearer token. Security policy enforces that only owner or admin can link accounts.",
      "summary": "Creates a new social account mapping linked to an authentication account.",
      "parameters": [],
      "requestBody": {
        "description": "Payload with provider, social_id, and linked auth_account_id information.",
        "typeName": "IAttendanceSocialAccount.ICreate"
      },
      "responseBody": {
        "description": "Returns the newly created social account mapping.",
        "typeName": "IAttendanceSocialAccount"
      },
      "authorization": {
        "role": [
          "attendance_admin",
          "attendance_teacher",
          "attendance_parent",
          "attendance_student"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/auth/socialAccounts",
      "method": "post"
    },
    {
      "specification": "Updates an existing mapped social account (attendance_social_account) by its ID, supporting use cases such as changing linked provider or social_id, or unlinking from local account for security/account management.",
      "description": "Allows modification of a mapped social login (attendance_social_account) record by its ID. Can be used when a user wants to re-link a new provider account, correct social_id, or update linkage following an external deauthorization. Changes are tracked for audit. Authorization is required to alter linkages, and operation is monitored for security purposes, often restricted to owner or admin. Field constraints such as provider/social_id unique pair must still be enforced.",
      "summary": "Updates a mapped social login (social_account) by its ID.",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of the social login mapping to update (attendance_social_account).",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Fields to update in the mapping (e.g., provider, social_id, auth_account_id).",
        "typeName": "IAttendanceSocialAccount.IUpdate"
      },
      "responseBody": {
        "description": "Returns the updated social login mapping.",
        "typeName": "IAttendanceSocialAccount"
      },
      "authorization": {
        "role": [
          "attendance_admin",
          "attendance_teacher",
          "attendance_parent",
          "attendance_student"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/auth/socialAccounts/{id}",
      "method": "put"
    },
    {
      "specification": "Deletes/unlinks a social login mapping identified by ID (attendance_social_account). This operation is key for security, privacy, and account separation, supporting account recovery or withdrawal scenarios. Enforces audit and cascade policies as required.",
      "description": "Deletes (unlinks) a mapped social account from the system by its UUID. Marks the mapping as deleted and removes access via the given external provider. Used when a user wants to remove a social login (for privacy, account separation, or compliance). Enforces strict permissions (only owner/admin), and always logs for audit/compliance. Cascade or orphan rules enforced at the database/application layer to ensure account integrity. Any further logins with the removed provider/social_id are blocked.",
      "summary": "Deletes/unlinks a mapped social account by its ID.",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of the social login mapping to delete/unlink.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Returns deleted/unlinked social login mapping (tombstone or status).",
        "typeName": "IAttendanceSocialAccount"
      },
      "authorization": {
        "role": [
          "attendance_admin",
          "attendance_teacher",
          "attendance_parent",
          "attendance_student"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/auth/socialAccounts/{id}",
      "method": "delete"
    },
    {
      "specification": "Implements paginated, searchable list retrieval of active authentication sessions (attendance_auth_session), supporting device/session management UI, security review, or forced logout flows.",
      "description": "Retrieves a paginated list of issued authentication sessions from attendance_auth_session, with support for filtering (e.g., by account, token, status), sorting, and device context. Used for security/audit dashboards, user account session management, and reviewing currently valid/expired sessions. Requires correct authorization and is typically logged for audit/security policies. Results may include session tokens, device/user agent info, timestamps, and status (active, revoked, expired).",
      "summary": "Retrieves a paginated list of authentication sessions with search/filter support.",
      "parameters": [],
      "requestBody": {
        "description": "Pagination and search/filter criteria for session list retrieval.",
        "typeName": "IAttendanceAuthSession.IRequest"
      },
      "responseBody": {
        "description": "Paginated list of authentication sessions matching the query.",
        "typeName": "IPageIAttendanceAuthSession"
      },
      "authorization": {
        "role": [
          "attendance_admin",
          "attendance_teacher",
          "attendance_parent",
          "attendance_student"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/auth/sessions",
      "method": "patch"
    },
    {
      "specification": "Retrieves detailed data about a specific authentication session (attendance_auth_session) by its ID, for user device/session management UIs or admin audit/investigation.",
      "description": "Provides detailed information about an individual authentication session, identified by session UUID. Used for security monitoring, forced logout, device history, or troubleshooting issues such as unauthorized access. Requires bearer authentication and owner/admin permission. Response includes session metadata, token, issued/expires timestamps, device/user_agent/IP details as per schema.",
      "summary": "Retrieves details about a single authentication session by ID.",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of the session to retrieve details for.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Returns authentication session record with detailed metadata.",
        "typeName": "IAttendanceAuthSession"
      },
      "authorization": {
        "role": [
          "attendance_admin",
          "attendance_teacher",
          "attendance_parent",
          "attendance_student"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/auth/sessions/{id}",
      "method": "get"
    },
    {
      "specification": "Implements creation of a new authentication session (attendance_auth_session) record, corresponding to token issuance upon login, device registration, or OAuth2 flow. Supports multi-device login and security compliance.",
      "description": "Creates a new authentication session record in attendance_auth_session when a user logs in to an application, issues a new access/refresh token, or registers a device. Ensures proper linkage to the user's authentication account, keeps all relevant session metadata (user agent, IP, etc.), and enforces session token uniqueness and security lifetime. Used in every successful login event, including social or local logins. Creation is logged for audit/monitoring purposes. Requires authentication and proper token flows.",
      "summary": "Creates a new authentication session (issues token/records login state).",
      "parameters": [],
      "requestBody": {
        "description": "Session creation payload (account linkage, token, timestamps, device/IP metadata).",
        "typeName": "IAttendanceAuthSession.ICreate"
      },
      "responseBody": {
        "description": "Returns created authentication session record (token/metadata/state).",
        "typeName": "IAttendanceAuthSession"
      },
      "authorization": {
        "role": [
          "attendance_admin",
          "attendance_teacher",
          "attendance_parent",
          "attendance_student"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/auth/sessions",
      "method": "post"
    },
    {
      "specification": "Updates an existing authentication session (attendance_auth_session) by ID — for scenarios such as forced logout, device name change, or session extension (refresh token update). Never allows session_token change, only metadata/lifetime/status.",
      "description": "Allows authorized actors (typically the owner or admin) to update an active session record. Used for forced logouts (setting revoked_at), session extension, or updating device context. Updates never replace the original session token but may record status changes (e.g., revoked, device details edit). All updates audited for security compliance. Field constraints ensure referential/account validity, and security-sensitive fields (token/issued_at) are immutable. Requires bearer token authentication.",
      "summary": "Updates an authentication session (metadata/status change, soft revocation) by ID.",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of the authentication session to update.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Fields to update (e.g., revoke, extend expiry, user agent, device info).",
        "typeName": "IAttendanceAuthSession.IUpdate"
      },
      "responseBody": {
        "description": "Returns updated authentication session (with new status/metadata).",
        "typeName": "IAttendanceAuthSession"
      },
      "authorization": {
        "role": [
          "attendance_admin",
          "attendance_teacher",
          "attendance_parent",
          "attendance_student"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/auth/sessions/{id}",
      "method": "put"
    },
    {
      "specification": "Implements session termination for attendance authentication tokens. This operation enables the deletion of an existing session token, fulfilling secure logoff and forced session invalidation requirements per OAuth2/OIDC best practices. It is tightly linked to the attendance_auth_session Prisma table, which logs all issued authentication tokens (JWT/opaque) for security audit and session management. This API allows an authenticated user or admin to explicitly revoke a session (e.g., upon logout, suspicious activity, or account lock). Deletion only marks the session as revoked at the database-level (audit evidence is retained). Used by account management UIs and zero-trust security processes. Audit logs and access logs should reference this event for compliance. Typical errors: 401 (unauthorized), 404 (no such session), 403 (cannot delete). Role mapping: Admin, Teacher, Student, Parent, via their mapped attendance_auth_account. This is a critical part of secure session lifecycle management.",
      "description": "This endpoint is used to delete and revoke a user's session token from the attendance_auth_session table, permanently invalidating the specified authentication session for compliance and security. Especially important for account lockout, manual forced logout, or session expiration. Only available to authenticated user roles mapped to attendance_auth_account (student, teacher, parent, admin), and audit evidence is retained (session is flagged as revoked rather than hard-deleted). Useful for situations where a session is potentially compromised or simply needs to be terminated remotely. Linked to attendant access and audit logs, so all deletions are evidence-tracked. Typical error handling covers 401 (no valid token), 403 (insufficient permission), 404 (session id does not exist for actor). This deletion does not affect related role/account data, just the specific session token. For successful deletion, returns 204 No Content, confirming session is now terminated.",
      "summary": "Deletes (revokes) a session token in attendance_auth_session (logout/token revoke).",
      "parameters": [
        {
          "name": "id",
          "description": "Target session's ID to be deleted (UUID string from attendance_auth_session table).",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": null,
      "authorization": {
        "role": [
          "attendance_teacher",
          "attendance_student",
          "attendance_parent",
          "attendance_admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/auth/sessions/{id}",
      "method": "delete"
    },
    {
      "specification": "Implements advanced search and paginated filtering for attendance records. This operation retrieves a list of attendance_attendance_record entries from the database, using criteria such as date range, student/class/teacher filter, status (present/absent/late), and supports dashboard/statistics use cases for both teacher and admin roles. Oracle-style PATCH is used for complex query bodies beyond URL parameters and for returning paginated responses. Pagination metadata and sorting options are included. Prisma table covered: attendance_attendance_record. Used for teacher dashboards, statistical exports, audit log review, and anomaly detection UI. Errors: 401 (unauthorized), 422 (invalid filter).",
      "description": "This PATCH endpoint provides a filtered, paginated list of attendance records (attendance_attendance_record) for dashboards/statistical reporting and export. Allows criteria such as classroom, date range, student, teacher, method, or attendance status. Supports search, pagination (offset/limit), and sort order. Especially useful for teacher/admin viewing of class-wide or date-wide attendance, anomaly detection, parent notification preparation, and export flows (e.g., Excel/CSV). Returned data includes basic metadata for each matching record as well as pagination summary. Endpoint requires authentication (admin/teacher/parent/student with relevant school/class role). Validation errors or unauthorized queries return 401 or 422. Each attendance record entry includes links to its student, class, teacher, method, and code (where applicable).",
      "summary": "Gets a paginated/searchable list of attendance records from attendance_attendance_record.",
      "parameters": [],
      "requestBody": {
        "description": "Filtering/search, pagination, and sort request for attendance_attendance_record list retrieval.",
        "typeName": "IAttendanceAttendanceRecord.IRequest"
      },
      "responseBody": {
        "description": "Paginated list/result of attendance records matching search for dashboard/statistics.",
        "typeName": "IPageAttendanceAttendanceRecord"
      },
      "authorization": {
        "role": [
          "attendance_teacher",
          "attendance_admin",
          "attendance_student",
          "attendance_parent"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/attendanceRecords",
      "method": "patch"
    },
    {
      "specification": "Retrieves a single, full-detail log of an attendance record, fully dereferencing all atomic values and foreign keys according to 3NF design. Used in detail drill-down, audit flows, correction requests, or parent/teacher review. Covers attendance_attendance_record table (student, class, teacher, method, code, status, exceptions, timestamps). Typical use: parent queries for own child, teacher audit, or student correction request. Returns all fields for the given attendance event. Linked to notification, stats, and anomaly detection flows.",
      "description": "This GET endpoint retrieves all details of a single attendance record from attendance_attendance_record, given a record id. Used for drill-down (dashboard, parent/teacher audit), correction request, or status display. Requires access rights to the event (auth enforcement: teacher/admin/student/parent as mapped). Returns structured object with student, classroom, teacher, method, status, codes, check-in time, exception details, and related notification/anomaly info as needed. Handles 401 (auth failure), 403 (not permitted), 404 (no such record) as errors.",
      "summary": "Retrieves detail for an attendance_attendance_record by id.",
      "parameters": [
        {
          "name": "id",
          "description": "The id of the attendance_attendance_record (UUID) to retrieve.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Full attendance record, all metadata, including student, teacher, status, timestamps.",
        "typeName": "IAttendanceAttendanceRecord"
      },
      "authorization": {
        "role": [
          "attendance_teacher",
          "attendance_admin",
          "attendance_student",
          "attendance_parent"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/attendanceRecords/{id}",
      "method": "get"
    },
    {
      "specification": "Creates a new atomic attendance_attendance_record row representing a student's attendance submission for a particular class, method, code, and timestamp. Strict audit: all fields must be normalized and references must point to existing students, class, teacher, method, and code (if used). Validation covers all unique/constraint/duplicate for student+class+timestamp. Typical use: student submission (code entry, QR scan), teacher manual correction, backend import. Only allowed for authenticated students/teachers/parents/admin per role mapping. Prisma table: attendance_attendance_record. Returns the created attendance record object (for UI confirmation, parent notification trigger, dashboard refresh).",
      "description": "This POST endpoint creates a new student-attendance event in attendance_attendance_record, with normalized references to student, teacher, class, method, and (optionally) code. Used by students submitting attendance, teachers adding/adjusting, or admin bulk-import. All values strictly validated (auth/account role checks, referential integrity, time window, duplicate protection). Returns created record (with all fields filled, for notification/audit UX). Linked downstream to notification/event flows and stats/dashboard. Fails with 409 (duplicate), 422 (invalid), 401/403 (permission).",
      "summary": "Creates a new attendance submission in attendance_attendance_record (student/teacher event log).",
      "parameters": [],
      "requestBody": {
        "description": "Input/new attendance submission to be inserted (student, class, time, method, code/status, etc).",
        "typeName": "IAttendanceAttendanceRecord.ICreate"
      },
      "responseBody": {
        "description": "Newly created attendance_attendance_record object (all fields populated).",
        "typeName": "IAttendanceAttendanceRecord"
      },
      "authorization": {
        "role": [
          "attendance_teacher",
          "attendance_admin",
          "attendance_student",
          "attendance_parent"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/attendanceRecords",
      "method": "post"
    },
    {
      "specification": "Updates/replaces fields for an existing atomic attendance_attendance_record row. Used for post-hoc corrections by teacher/admin, student correction flows, or audit rectification. All fields validated via referential integrity (must be valid record for that id, with foreign key checks for referenced student/class/method/code). Returns updated object (used in dashboard, audit trail, notification event chains). Prisma table: attendance_attendance_record.",
      "description": "This PUT endpoint updates/modifies an existing attendance_attendance_record, allowing all modifiable fields to be set. Essential for teacher-side corrections, admin audit replay, or student-submitted corrections. Validates record existence, links (student, teacher, method, code), referential integrity, and applies concurrency protection. Returns updated object after mutation. Fails 404 (no record), 409 (conflict), 422 (validation), 401/403 (auth). Linked to audit/notification/statistics. Limited to actors with access rights (student/teacher/parent/admin by attendance record).",
      "summary": "Updates (replaces) an attendance_attendance_record by id.",
      "parameters": [
        {
          "name": "id",
          "description": "The id (UUID) of the attendance record to update.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Updated/entire attendance record info (replaces/prunes atomic fields) for attendance_attendance_record.",
        "typeName": "IAttendanceAttendanceRecord.IUpdate"
      },
      "responseBody": {
        "description": "The updated, full attendance_attendance_record object (all fields).",
        "typeName": "IAttendanceAttendanceRecord"
      },
      "authorization": {
        "role": [
          "attendance_teacher",
          "attendance_admin",
          "attendance_student",
          "attendance_parent"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/attendanceRecords/{id}",
      "method": "put"
    },
    {
      "specification": "Implements secure, auditable deletion (logical or hard, according to policy) of an attendance_attendance_record record. Used when a record must be removed (data error, audit, privacy request, or correction rollback). Deletion is limited to actors with permission, and all deletions must be logged for auditability. This covers the attendance_attendance_record table. Fails for idempotent/dead references. Cascade/delete policies on related notifications or stats per referential integrity, but record itself is removed from core table.",
      "description": "This DELETE endpoint permanently deletes or flags as deleted a specific attendance_attendance_record identified by uuid. Only actors with explicit permission (teacher/admin, or self student/parent with authority) may invoke. All deletions are evidence tracked in audit log (who, when, why, etc). Removes main record and updates or deletes related notification/stat counters as per referential integrity. Used for audit/data hygiene/fixes. Fails 404 (not found), 403 (no permission), 401 (not authenticated), 409 (ref conflict). Returns 204 No Content on success.",
      "summary": "Deletes an attendance_attendance_record (atomic attendance event log) by id.",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of attendance_attendance_record to delete.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": null,
      "authorization": {
        "role": [
          "attendance_teacher",
          "attendance_admin",
          "attendance_student",
          "attendance_parent"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/attendanceRecords/{id}",
      "method": "delete"
    },
    {
      "specification": "List/search for attendance code entities (attendance_attendance_code) produced by teachers for class-based or session-based check-in. Returns paginated and filterable results, supporting dashboard 'issued code' panels, audit logs, security dashboard. Accepts filtering criteria: teacher, classroom, window (issue or expire date), is_active. PATCH is used for complex query/pagination. Covers attendance_attendance_code Prisma table. Each record contains code string, validity, expiration, classroom/teacher. Errors: 401/403/422.",
      "description": "This endpoint provides a paginated, sortable, and searchable list of attendance codes (attendance_attendance_code) based on filter criteria supplied in the request body. Used in teacher dashboards to view issued codes, for controller audits, or to check for active code conflicts/session history. Filters include teacher id, classroom id, active flag, window constraint (issue/expire date), etc. Only accessible to actors with code access rights: teacher, admin, etc. Returns paginated result with total count, current page, and codes info for UI. Validation: 401 (no token), 403 (no permission), 422 (bad parameters). Linked to audit log for search/export evidence.",
      "summary": "Retrieves a paginated/filterable list of attendance codes (attendance_attendance_code) for dashboards/audit.",
      "parameters": [],
      "requestBody": {
        "description": "Code list filtering/search and pagination/sort request for attendance_attendance_code.",
        "typeName": "IAttendanceAttendanceCode.IRequest"
      },
      "responseBody": {
        "description": "Paginated result of attendance codes matching filter/search (dashboard/audit).",
        "typeName": "IPageAttendanceAttendanceCode"
      },
      "authorization": {
        "role": [
          "attendance_teacher",
          "attendance_admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/attendanceCodes",
      "method": "patch"
    },
    {
      "specification": "Retrieves detailed information for a single attendance code row. Used by teachers, admins, or occasionally students/parents needing to verify code attributes (for audit, trouble ticket, or active code UX flows). Prisma table: attendance_attendance_code, including classroom, teacher, code value, issued/expire date, is_active flag. Returns full atomic fields and referenced information for UX/validation/audit flows. Key use: code detail screen, manual audit, or validation.",
      "description": "GET detail of an attendance_attendance_code by id. Requires authorized user (teacher, admin, etc). Returns all code attributes, including string, expiration, classroom/teacher (dereferenced/embedded). Validation: 404 (code not found), 401 (unauthenticated) or 403 (insufficient role). Used for validation/audit, code value UX. Fails on non-existing code or permission error. Result can drive UX, report, or security export.",
      "summary": "Fetches a detail attendance_attendance_code entity by UUID.",
      "parameters": [
        {
          "name": "id",
          "description": "Target attendance_attendance_code's ID (UUID) to fetch.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "The attendance_attendance_code object with all fields (classroom, teacher, etc).",
        "typeName": "IAttendanceAttendanceCode"
      },
      "authorization": {
        "role": [
          "attendance_teacher",
          "attendance_admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/attendanceCodes/{id}",
      "method": "get"
    },
    {
      "specification": "Creates a new attendance_attendance_code record, issuing a code for a teacher/classroom combination. Used for code-based attendance session issuance by teachers (dashboard UI), or scheduled batch code issue (admin). Strict creation: barcode/code string, is_active, time limits, target class, creator teacher required. Prisma table: attendance_attendance_code. Returns the created code object (for value sharing, student display, or audit). Validity enforced: only authenticated/authorized roles (teacher/admin). Downstream: CODE notification, student-side UX, dashboard refresh. On error: 422 (conflict/invalid), 401/403 (auth/permission), 409 (collision).",
      "description": "This POST endpoint creates a new attendance_attendance_code object and returns it. For automatic/manual code distribution in teacher dashboard/automation, only teacher/admin roles can issue. Required parameters: class, code value, issue/expire times, active flag, creator teacher. Strict reference/constraint check: target class, creator, conflict/duplicate, valid code string, time window. Successful creation returns code object for display/sharing. Triggers code created log and audit snapshot. Errors include 409 (duplicate/collision), 422 (constraint), 401/403 (no permission). Always audit trail.",
      "summary": "Issues/adds a new code row in attendance_attendance_code table (class/teacher/code distribution).",
      "parameters": [],
      "requestBody": {
        "description": "Attributes for new attendance code (class, code string, issuer, active, dates).",
        "typeName": "IAttendanceAttendanceCode.ICreate"
      },
      "responseBody": {
        "description": "The created attendance_attendance_code object (all returned fields for UX/audit).",
        "typeName": "IAttendanceAttendanceCode"
      },
      "authorization": {
        "role": [
          "attendance_teacher",
          "attendance_admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/attendanceCodes",
      "method": "post"
    },
    {
      "specification": "Updates or replaces fields for an existing attendance_attendance_code: used to modify code attributes (expiration, is_active, classroom/teacher assignment, etc). Primarily used by teacher/admin after code is issued (e.g., to expire/reregister, fix details, extend code). All fields validated: class, teacher, code string, time. Prisma table: attendance_attendance_code. Returns new fields for UX/UI.",
      "description": "This PUT endpoint modifies an existing attendance_attendance_code identified by id. Used for teacher/admin code management: extend, expire, fix. Requires referential and uniqueness constraint checks on all fields and references (classroom/teacher), code string/active/expiry. Returns updated code entity. On error: 404 (not found), 409 (conflict), 401/403 (perms), 422 (constraint/bad data). Always triggers audit log and downstream refresh events. Used in teacher dashboards, code admin panels.",
      "summary": "Updates/replaces fields in attendance_attendance_code (by id, all atomic fields).",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of attendance_attendance_code entity to update/replace.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "New/updated attributes (classroom, code, time, flag, teacher) to overwrite attendance code.",
        "typeName": "IAttendanceAttendanceCode.IUpdate"
      },
      "responseBody": {
        "description": "Updated entity (classroom/code/all atomic fields filled for UX/audit).",
        "typeName": "IAttendanceAttendanceCode"
      },
      "authorization": {
        "role": [
          "attendance_teacher",
          "attendance_admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/attendanceCodes/{id}",
      "method": "put"
    },
    {
      "specification": "Deletes (logically or hard) an attendance_attendance_code row. Only teachers/admins can remove a code (e.g., after session end, stale code, or accidental issue). Deletion triggers audit log and invalidation for any codes in use, and related session records/logs should be pruned per policy. Prisma table: attendance_attendance_code. Linked to access code log events and dashboard refresh. Downstream: possible notification to students or admin for session code status.",
      "description": "DELETE endpoint for attendance_attendance_code. Permits code invalidation/removal when code is expired, revoked, or mistaken. Only teacher/admin actor may issue request, strict by code id. All permission and reference errors handled (404: no code; 401/403: no right). Removes code entity (or marks as inactive/blocklisted in DB). Cascade policy (if any) on related logs/attendance records handled per referential integrity. On successful deletion, code invalid and no longer distributed/usable for attendance. Returns 204 No Content.",
      "summary": "Removes (invalidates or deletes) an attendance_attendance_code by id.",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of attendance_attendance_code to delete.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": null,
      "authorization": {
        "role": [
          "attendance_teacher",
          "attendance_admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/attendanceCodes/{id}",
      "method": "delete"
    },
    {
      "specification": "attendance_attendance_code_log 엔터티의 모든 출석 코드 이벤트(생성, 사용, 만료 등) 로그를 조건/검색 정보와 함께 목록으로 조회하기 위한 패치 방식의 리스트 API입니다. 해당 엔드포인트는 관리자·교사 등 감사·추적 목적으로 사용되며, 출석 부정/이상감지 대시보드에 필요한 데이터를 유연하게 가져옵니다. 제한적 조건(코드별, 날짜, 이벤트 유형 등) 검색, 페이지네이션, 정렬 등을 지원해야 합니다. 상세 데이터는 attendance_attendance_code_log Prisma 스키마 주석 참조.",
      "description": "이 API는 attendance_attendance_code_log 테이블 내용을 다수 조회하는 패치 엔드포인트입니다. 출석 코드의 사용 이력 및 라이프사이클(발급/사용/만료/실패 등) 정보를 다양한 조건으로 필터링합니다.\n\n첫 번째로, 교사와 관리자는 특정 코드별 이력, 학생 부정 출석 탐지, 발급일/사용일 기준 범위 검색, 이벤트 유형별 통계 등 실무에 맞는 정보를 효율적으로 조회할 수 있습니다. Prisma 스키마의 description에 따라 code_id, event_type, event_time 등의 컬럼을 기준으로 검색 필드를 제공해야 하며, 페이징(page, pageSize), 정렬(sortBy, order), 기간 필터(startDate, endDate)도 지원해야 합니다.\n\n두 번째로, 이 엔드포인트는 감사/보안 관점의 감사 로그 활용도 고려해야 하므로, 액터(teacher/student/admin/system)별 이벤트 목록을 감시할 수 있습니다.\n\n세 번째로, 반환 형식은 attendance_attendance_code_log의 복수결과(페이징 포함)로 하며, 응답 구조 또한 IPageAttendanceAttendanceCodeLog와 같은 표준 구조로 요약정보+데이터+카운트 방식이 되는 것이 바람직합니다.\n\n이 API는 출석 코드 관련 대시보드, 보안감사, 부정 탐지 모듈 등과 연동되어 콜될 수 있습니다. DB 상 Prisma 테이블: attendance_attendance_code_log.",
      "summary": "attendance_attendance_code_log 테이블의 출석 코드 이벤트 이력 리스트 조회 (검색/페이징/정렬 지원)",
      "parameters": [],
      "requestBody": {
        "description": "출석 코드 로그 리스트 패치 요청 정보 (검색조건/페이징/정렬)",
        "typeName": "IAttendanceAttendanceCodeLog.IRequest"
      },
      "responseBody": {
        "description": "출석 코드 로그 페이징 리스트 (요약정보+복수레코드 데이터)",
        "typeName": "IPageAttendanceAttendanceCodeLog"
      },
      "path": "/attendance/attendanceCodeLogs",
      "method": "patch"
    },
    {
      "specification": "attendance_attendance_code_log 엔터티의 PK(id) 기반 단건 조회 API입니다. 특정 출석 코드 이벤트 로그(예: 발급/사용/실패 등)를 식별자(id)로 조회하고, 대시보드·상세 팝업 등에서 세부정보 열람에 사용합니다. Prisma 테이블 주석에 따라 row마다 code_id, event_type, event_time, details 등을 제공해야 합니다.",
      "description": "이 API는 attendance_attendance_code_log 레코드를 식별자(PK, id)로 조회하는 get 방식 디테일 조회 엔드포인트입니다.\n\n첫 번째로, 이 API는 현장 대시보드·이상 징후 상세 팝업·관리 감사 화면 등에서 단일 출석 코드 이벤트 로그의 세부사항을 조회할 때 사용합니다. 반환 필드는 테이블의 모든 컬럼(code_id, event_type, event_time, actor_id, actor_type, details 등)을 포함해야 하며, 오류 시 404(없는 로그) 및 403(권한 없음) 처리가 필요합니다.\n\n두 번째로, 이 API는 actor_id/actor_type 등으로 인해 polymorphic 액터케이스(teacher, student, admin, system)에 대한 설명이 필요하며, 프론트에서 이를 활용해 적절한 UI를 구성해야 합니다.\n\n세 번째로는 error handling/documentation에서 Prisma 주석의 각각의 컬럼 목적까지 정확히 안내해야 하며, query param 없이 path param id만 필요합니다.\n\nDB상의 attendance_attendance_code_log 테이블과 1:1 매핑됩니다.",
      "summary": "attendance_attendance_code_log 단일 이벤트 로그(PK) 상세 조회 API",
      "parameters": [
        {
          "name": "id",
          "description": "조회 대상 출석 코드 이벤트 로그의 PK(UUID)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "출석 코드 로그 상세 데이터",
        "typeName": "IAttendanceAttendanceCodeLog"
      },
      "path": "/attendance/attendanceCodeLogs/{id}",
      "method": "get"
    },
    {
      "specification": "attendance_attendance_code_log 테이블에 출석 코드 이벤트(코드 생성, 사용, 만료, 실패 등)를 신규로 기록(생성)하는 post 방식 API입니다. 이 엔드포인트는 출석 코드 발급, 사용시도, 만료, 실패 등 이벤트가 발생할 때마다 시스템적으로 Row를 추가하며, 스키마 주석 필수 항목(code_id, event_type, event_time, actor_id, actor_type)이 모두 포함되어야 합니다. Strict 3NF.",
      "description": "본 엔드포인트는 attendance_attendance_code_log 테이블(출석 코드 이벤트 이력)에 신규 이벤트 로그를 추가(생성)할 때 사용합니다.\n\n첫째, 출석 코드의 생성/사용/만료/오류 등 라이프사이클 이벤트가 발생하면 이 API를 호출해 새로운 로그를 저장합니다. 모든 필수 요소(code_id, event_type, event_time, actor_id, actor_type)가 누락 없이 입력되어야 하며, 시스템·관리자·교사 등 이벤트 주체(actor_type)에 따라 다양한 행위 감사를 지원해야 합니다.\n\n둘째, 생성 성공 시 PK(id)와 함께 새 레코드 전체 데이터를 반환; 입력값 불충분 시 422, 권한 오류 시 403, 중복·규칙 위반 시 400을 반환합니다.\n\n셋째, 이 API는 부정 출석 탐지, 코드 감사, 실시간 대시보드 이벤트 삽입 등 다양한 비즈니스 로직의 기반이 됩니다.\n\nDB 구조 및 모든 컬럼/비즈니스 규칙은 attendance_attendance_code_log Prisma 테이블 description을 그대로 따릅니다.",
      "summary": "출석 코드 로그(이벤트 기록) 신규 생성(post) API (attendance_attendance_code_log)",
      "parameters": [],
      "requestBody": {
        "description": "출석 코드 이벤트 로그 생성 정보 (code_id, event_type, ...반드시 포함)",
        "typeName": "IAttendanceAttendanceCodeLog.ICreate"
      },
      "responseBody": {
        "description": "생성된 출석 코드 로그 상세 데이터 (PK 포함)",
        "typeName": "IAttendanceAttendanceCodeLog"
      },
      "path": "/attendance/attendanceCodeLogs",
      "method": "post"
    },
    {
      "specification": "attendance_attendance_code_log 엔터티의 PK(id) 기반 업데이트(수정) API. 도메인 특성상 대부분 추가 신규 기록으로 추적하지만, 실무상 잘못 저장된 이벤트나, 비고(Details) 수정 등이 필요할 때 사용합니다. 업데이트에서는 기본적으로 details, actor_id, event_type 등 컬럼의 변경만 허용되어야 하며, full 구조는 Prisma 컬럼 참조.",
      "description": "이 API는 attendance_attendance_code_log 엔터티에서 특정 PK(id)로 식별되는 이벤트 로그의 일부/전체 요소를 수정(전체 대체/PUT)하는 엔드포인트입니다.\n\n실제로 출석 코드 이력은 append-only가 원칙이나, 예외적으로 잘못 기록된 이벤트나 비고 필드(details) 오타 등 수정이 필요할 때 제한적으로 활용됩니다. 수정 가능한 컬럼/제약 사항은 관련 Prisma 테이블 주석을 반드시 따르며, path param id 지정과 함께 변경할 필드를 request body 형태로 구조화해야 합니다.\n\n수정 성공 시 최신 상태 레코드를 반환하고, 권한·유효성 위반 등은 403/422 코드로 반환해야 합니다. 보안·감사 로그 역시 연동되어야 하며, 불가항력 수정 케이스 기록을 위한 감사 로그 연계가 바람직합니다.",
      "summary": "attendance_attendance_code_log PK(id) 기반 이벤트 로그 수정/업데이트(put) API",
      "parameters": [
        {
          "name": "id",
          "description": "수정 대상 출석 코드 로그의 PK(UUID)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "출석 코드 이벤트 로그 수정 정보(details, actor_id 등)",
        "typeName": "IAttendanceAttendanceCodeLog.IUpdate"
      },
      "responseBody": {
        "description": "수정/업데이트 후 출석 코드 로그 상세 데이터",
        "typeName": "IAttendanceAttendanceCodeLog"
      },
      "path": "/attendance/attendanceCodeLogs/{id}",
      "method": "put"
    },
    {
      "specification": "attendance_attendance_code_log 테이블의 단일 이벤트 로그를 식별자로 삭제하는 delete API입니다. 출석 코드 이벤트 이력 중 잘못된 이벤트 로그, 탈루/실수 기록, 테스트 데이터 등을 삭제하거나 감사정책상 삭제가 필요한 케이스 대응을 위함입니다. 시스템 정책상 물리적 삭제 혹은 삭제마크 플래그 처리(soft delete)는 비즈니스 정책을 따라야 하며, 실제 삭제 시 모든 식별컬럼/감사정책/연관 무결성 등도 고려해야 합니다. 실제 행동은 Prisma 모델 정책/캠페인 별로 달라질 수 있음.",
      "description": "이 API는 attendance_attendance_code_log 엔터티의 특정 단일 이벤트 로그(PK, id)를 삭제하는 delete 방식 엔드포인트입니다.\n\n실제 비즈니스 정책에 따라 물리 삭제(hard) 혹은 소프트 삭제 플래그 처리 정책이 적용 가능하며, 삭제 완료 시 200 OK(혹은 204 No Content), 실패 시 404(존재 X), 403(권한 없음) 에러 처리를 명확히 해야 합니다.\n\n모든 삭제는 반드시 해당 id로 식별/검증 후 진행되며, 감사/보안 로그 연동 등 추가 업무플로우와의 연계도 고려할 것. Prisma 주석 및 컬럼 구조 그대로 따름.",
      "summary": "attendance_attendance_code_log 이벤트 로그(PK) 삭제 API",
      "parameters": [
        {
          "name": "id",
          "description": "삭제 대상 출석 코드 이벤트 로그의 PK(UUID)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "삭제 후 성공 플래그 또는 null(비어있는 본문)",
        "typeName": "null"
      },
      "path": "/attendance/attendanceCodeLogs/{id}",
      "method": "delete"
    },
    {
      "specification": "attendance_attendance_method 엔터티의 다양한 출석 방식(코드 입력, QR, 수기 등) 마스터 데이터를 조건에 맞게 검색/리스트로 조회하는 패치 API입니다. 대시보드, 출석 등록 폼, 통계설정 등에서 지원 방식 리스트와 상세설명을 동적으로 조회해야 할 때 사용됩니다. 검색조건/정렬/페이징 등 지원. Prisma description 및 각 필드 목적에 따라 명확히 구조화하여 반환.",
      "description": "이 API는 attendance_attendance_method 테이블에 저장된 모든 출석 방식(출석체크 방법 마스터)의 리스트를 검색 및 페이징/정렬과 함께 반환합니다.\n\nex) 메뉴에 '코드입력', 'QR스캔', 'API직접', '수기입력' 방식 제공시, 실제 가능한 방법/설명을 포함한 목록을 동적으로 읽어와야 합니다. 검색 조건(method_name, description 등 텍스트 검색), 페이지네이션, 정렬 옵션의 requestBody를 구성하여 시스템 전체에서 일관성 있게 동작해야 하며, 반환 데이터 또한 IPageAttendanceAttendanceMethod와 같이 표준 페이징+복수레코드 구조를 가집니다.\n\n실제 사용처는 교사용 대시보드, 출석 등록 UI, 설정페이지 등이며, Prisma 스키마 description을 반영해 method_name, description 등 키 정보를 반드시 포함해야 합니다.",
      "summary": "attendance_attendance_method(출석 방식) 마스터 리스트 조회(검색/페이징 등 지원) 패치 API",
      "parameters": [],
      "requestBody": {
        "description": "출석 방식 리스트 패치 요청 정보 (검색조건/페이징/정렬)",
        "typeName": "IAttendanceAttendanceMethod.IRequest"
      },
      "responseBody": {
        "description": "출석 방식 페이징 리스트 (요약정보+복수레코드 데이터)",
        "typeName": "IPageAttendanceAttendanceMethod"
      },
      "path": "/attendance/attendanceMethods",
      "method": "patch"
    },
    {
      "specification": "attendance_attendance_method 엔터티의 PK(id) 기반 단일 출석방식 정보 상세 조회 API입니다. 메뉴/form/대시보드 등에서 지원 출석방식의 상세(특정 방식 조회시)를 읽을 때 사용. 모든 컬럼(method_name, description)을 필수로 제공, Prisma 스키마 description 참조.",
      "description": "본 API는 attendance_attendance_method(출석 방식 마스터) 테이블에서 PK(id)로 단일 방식을 조회하는 get 방식 엔드포인트입니다.\n\n사용 예시로는, 출석 등록 화면에서 사용가능한 선택 방법이나 설정 페이지에서 특정 방식 상세 정보 팝업을 열 때 등입니다. 반환 데이터는 method_name, description 등 테이블의 모든 컬럼을 포함해야 하며, id가 잘못되거나 없는 경우 404 반환되어야 하고, 권한 문제는 403\n\n검색 필드는 path param의 id(필수) 하나로 충분합니다.",
      "summary": "attendance_attendance_method(출석 방식) 단건 상세 조회(get) API",
      "parameters": [
        {
          "name": "id",
          "description": "조회 대상 출석 방식의 PK(UUID)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "출석 방식 마스터 상세 데이터",
        "typeName": "IAttendanceAttendanceMethod"
      },
      "path": "/attendance/attendanceMethods/{id}",
      "method": "get"
    },
    {
      "specification": "attendance_attendance_method 테이블에 신규 출석체크 방식을 등록하는 post 방식 생성 API입니다. 새로운 출석체크 방법('블루투스', 'NFC', '얼굴인식' 등)은 본 엔드포인트로 관리자가 추가할 수 있습니다. Prisma 주석의 각 필수 컬럼(method_name, description 등)에 따라 requestBody 구조 생성, 생성 성공 시 PK(id) 및 전체 데이터 반환.",
      "description": "이 API는 attendance_attendance_method(출석 방식 마스터)에 신규 방식을 추가 생성(post)하는 엔드포인트입니다.\n\n예를 들어, 시스템 확장·조직별 정책에 의해 'NFC', '얼굴인식' 등 출석 방식이 추가될 때 사용합니다. 모든 필수 칼럼(method_name/description)은 request body에 반드시 포함되어야 하며, 입력 누락/중복 시 422/400 등의 에러 처리 필요.\n\n생성 성공 시 PK(id)까지 포함한 전체 출석 방식 데이터를 반환하며, 비즈니스 정책에 따라 생성 권한 제어가 반드시 동반됩니다.",
      "summary": "attendance_attendance_method(출석 방식) 신규 생성(post) API",
      "parameters": [],
      "requestBody": {
        "description": "출석체크 방식 생성 정보 (method_name, description 포함)",
        "typeName": "IAttendanceAttendanceMethod.ICreate"
      },
      "responseBody": {
        "description": "생성된 출석 방식 마스터 데이터 (PK포함)",
        "typeName": "IAttendanceAttendanceMethod"
      },
      "path": "/attendance/attendanceMethods",
      "method": "post"
    },
    {
      "specification": "attendance_attendance_method 엔터티에서 PK(id) 기준으로 기존 출석 방식을 수정(전체 대체/PUT)하는 API입니다. 옵션/설명 업데이트, 이름 변경 등 신규 정책 반영 시 활용되며, 본 정보는 수정 가능 컬럼(method_name, description 등)을 request body로 전달받습니다. path param id는 필수이며, 결과로 최신 상태 객체 반환(에러/권한 제어)",
      "description": "본 API는 attendance_attendance_method(출석 방식) 마스터에서 PK(id)로 식별된 데이터를 수정(전체 대체)하는 put 엔드포인트입니다.\n\n예로, 출석 방식 명칭 또는 설명을 변경할 때 사용되며, 실수/변경 정책 등으로 수정사항이 발생하면 본 API로 갱신합니다. request body에는 수정가능한 모든 컬럼(method_name, description 등)이 포함되어야 하며, id 파라미터로 대상 명시, 이 후 바뀐 전체 데이터를 반환합니다. 없는 id면 404, 입력 누락/제약 위반 등은 422, 권한 문제 403 반환.\n\n정책상 수정시 audit log 연동을 권장합니다.",
      "summary": "attendance_attendance_method(출석 방식) 수정(put) API (PK id 기반)",
      "parameters": [
        {
          "name": "id",
          "description": "수정 대상 출석 방식 마스터의 PK(UUID)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "수정 정보 (method_name, description 등)",
        "typeName": "IAttendanceAttendanceMethod.IUpdate"
      },
      "responseBody": {
        "description": "수정된 출석 방식 상세 데이터",
        "typeName": "IAttendanceAttendanceMethod"
      },
      "path": "/attendance/attendanceMethods/{id}",
      "method": "put"
    },
    {
      "specification": "attendance_attendance_method 테이블의 PK(id)로 식별된 출석체크 방식을 삭제하는 delete API입니다. 기등록된 방식 중 더 이상 미지원/정책변경으로 삭제 시 활용합니다. Prisma 컬럼 구조 참고, 실제 동작은 hard/soft delete 정책에 따라 비즈니스에 유연히 연동. 삭제 후 성공 or 빈 본문 반환.",
      "description": "이 API는 attendance_attendance_method 마스터에서 PK(id)를 기준으로 특정 출석 방식을 삭제(delete)하는 엔드포인트입니다.\n\n삭제 성공 시 200 혹은 204를 반환하며, 없는 id 404, 권한 부족/정책 위배 403 등을 명확히 핸들링해야 합니다. 실제 삭제 방식(物리/논리)은 비즈니스 정책·감사업무 정책에 따라 변동됩니다.\n\n모든 삭제는 감사 로그 등 연동, Prisma 모델의 컬럼 설계를 그대로 따릅니다.",
      "summary": "attendance_attendance_method(출석 방식) 삭제(delete) API (PK id 기반)",
      "parameters": [
        {
          "name": "id",
          "description": "삭제 대상 출석 방식 마스터의 PK(UUID)",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "삭제 후 성공 플래그 또는 null(비어있는 본문)",
        "typeName": "null"
      },
      "path": "/attendance/attendanceMethods/{id}",
      "method": "delete"
    },
    {
      "specification": "attendance_notification(알림 이벤트 마스터) 테이블에서 다양한 검색/조건(학생id, event_type, classroom_id, 기간 등) 기반으로 알림 트리거 이벤트 전체를 패치 방식으로 가져오는 리스트 API입니다. 학부모, 교사 대시보드 등에서 알림 발송 내역/이상 알림 로그/기간 내 리스트 등을 효율적으로 조회할 수 있도록 검색·필터·페이지네이션·정렬 옵션을 지원해야 합니다. Prisma 스키마 description을 정확히 참고.",
      "description": "이 API는 attendance_notification 엔터티의 여러 행을 조건(학생id, classroom, event_type, 기간 등)과 페이징/정렬과 함께 리스트(패치)로 조회하는 엔드포인트입니다.\n\n주요 용도는 교사 대시보드의 알림 내역, 학부모의 자녀 출결 알림 현황 열람, 관리자의 전체 이벤트 트레이스 등이며, 검색 필드는 Prisma 스키마 컬럼을 기준으로 학교/클래스/학생/발송시간/이벤트 등 다각도로 노출해야 합니다.\n\n반환 구조는 IPageAttendanceNotification 같이 표준 페이징(요약 정보+데이터) 방식이 이상적이고, data와 total, page 등의 키를 포함합니다. 구체적 컬럼/조건 등은 Prisma 모델 주석에 명시된 용도·구조를 준수합니다.",
      "summary": "attendance_notification 마스터 다수 알림 이벤트 패치 리스트 조회(검색/페이징 지원)",
      "parameters": [],
      "requestBody": {
        "description": "알림 이벤트 마스터 리스트 패치 요청 정보 (검색조건/페이징 등)",
        "typeName": "IAttendanceNotification.IRequest"
      },
      "responseBody": {
        "description": "알림 이벤트 마스터 페이징 리스트 (요약정보+데이터)",
        "typeName": "IPageAttendanceNotification"
      },
      "path": "/attendance/notifications",
      "method": "patch"
    },
    {
      "specification": "Retrieve a specific attendance notification by its unique ID. This corresponds to the attendance_notification entity in the AttendanceNotification schema, which tracks all events that triggered attendance notifications (such as present, absent, late, or leave) for auditing, parent communication, and integration into dashboards. This operation allows authorized users (such as teachers, admins, or parents) to fetch details of a single notification event, including event type, student, classroom, timestamps, and the generated message template. This is essential for parent communication review, audit history display, and notification troubleshooting screens or detail modals. All data strictly reflects atomic, non-denormalized notification fields, referencing related entities by ID for normalization. Permissions must be enforced per the user's role, limiting access to only those notification records they are permitted to view (e.g., parents get records about their own children, teachers about their own classes, admins can view all for their scope).",
      "description": "This API operation fetches a single attendance notification based on its system-unique identifier, as defined in the attendance_notification table. The notification contains the core event data: which student and classroom it references, who (if any) triggered the event (such as a teacher), the event type (present, absent, late, leave), the exact time it was triggered, and the associated message template intended for parent/authority communication. The attendance_notification record is strictly normalized, referencing atomically the relevant attendance record, student, teacher (if applicable), and classroom, without containing denormalized or aggregated data from any join. The API enforces strict access controls so that: 1) Teachers can only fetch notifications issued for their own classes/students; 2) Parents can only access notifications regarding their child(ren); 3) Administrators and authorized officials may retrieve any notification within their jurisdiction. The API robustly returns appropriate error responses for requests for records outside the authorized scope, for deleted/expired IDs, or malformed requests. Related notification history and channel information for this notification are accessed via their own endpoints but may be referenced in the response. This endpoint is often used in parent-facing notification detail screens, admin audits, or incident response workflows.",
      "summary": "Fetch a single attendance notification event by ID (attendance_notification table).",
      "parameters": [
        {
          "name": "id",
          "description": "Target notification's unique identifier (UUID).",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Attendance notification event data, fully normalized and atomic.",
        "typeName": "IAttendanceNotification"
      },
      "authorization": {
        "role": [
          "teacher",
          "parent",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/notifications/{id}",
      "method": "get"
    },
    {
      "specification": "Create a new attendance notification event. This operation corresponds to the attendance_notification table within the AttendanceNotification schema and is invoked when a new event (e.g., attendance submission by student, abnormal status, manual teacher trigger) requires a notification to be sent to parents, admins, or other stakeholders. By posting a new record, the system stores event details and prepares for follow-up delivery actions (triggered via associated notification history and channel tables). This API is called either directly by teacher/admin actions (such as forcing a notification) or indirectly by attendance automation logic (upon status change or anomaly detection). All fields are atomic, normalized, and reference IDs for related entities such as attendance records, student, teacher, and classroom as required by full 3NF, as well as message templates and timestamp metadata for future notification or auditing.",
      "description": "This API operation is used to post (create) a new attendance notification in the attendance_notification table, reflecting an event that is to trigger communication toward guardians (parents), admins, or other monitoring roles. The operation requires the caller to specify all mandatory atomic fields—attendance_record_id (what event this is for), student_id (who it pertains to), classroom_id (which group/class), event_type (present, absent, late, leave, etc.), triggered_at (when the notification event was generated), and message_template (the canonical or customized message for the notification). Optionally, teacher_id can be specified if the notification resulted from a teacher's manual action. This endpoint enforces normalized storage (never aggregates per delivery channel) and is directly linked via FK to notification histories and channels for actual delivery attempts/logging. Only authorized users (teachers for their students; admins for their school/unit) can invoke this function. Validation includes referential integrity checks for all provided IDs, input length/range validation (e.g., for message template), and legal status checks (e.g., no duplicate for the same attendance record and event_type). Error handling covers privilege errors, referential integrity failures, or unexpected system states. Upon success, the created notification is returned; automated delivery to channels may follow as a background job or be explicitly triggered via secondary endpoints.",
      "summary": "Create a new attendance notification event (attendance_notification table).",
      "parameters": [],
      "requestBody": {
        "description": "New notification event atomic info, referencing student, attendance record, classroom, message, and optional teacher.",
        "typeName": "IAttendanceNotification.ICreate"
      },
      "responseBody": {
        "description": "Created attendance notification event (fully normalized).",
        "typeName": "IAttendanceNotification"
      },
      "authorization": {
        "role": [
          "teacher",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/notifications",
      "method": "post"
    },
    {
      "specification": "Update an existing attendance notification event by its ID. This corresponds to modifying a record in the attendance_notification table in the AttendanceNotification schema. Permits the correction or update of atomic notification fields (e.g., event_type if wrongly typed, message_template if a custom message is needed, or teacher_id/classroom_id for administrative corrections). Only fields permitted by business logic can be updated: no aggregate/delivery data (those are managed in channel/history tables). Authorization checks and referential integrity are enforced for all changed FKs and updated fields. The endpoint is intended primarily for admin use (fixing errors, responding to review processes, or adapting notification logic), but teacher users may also update their own notifications if permitted by policy. Critical change operations (such as message/template updates) are always audit logged via attendance_audit_log.",
      "description": "This API operation allows updating a single attendance notification's atomic event fields, as represented in the attendance_notification table. The operation requires the caller to specify the notification ID (UUID, path parameter) and a payload (normalized and atomic) specifying only the fields to be updated—such as event_type, triggered_at, message_template, teacher_id, or classroom_id. Restrictions are enforced so that delivery attempts, channel history, and delivery status are immutable via this endpoint; changes here affect only the master event record's content (used for subsequent or corrected notifications). Strict referential integrity must be checked for all updated FKs, and policy-enforced constraints are applied for event_type and allowed editing windows (e.g., after delivery, editing may be restricted). Role-based permissions dictate that only the originating teacher (for their own classes) or admins (systemwide) may update notification events, with all changes appended to the audit log. Proper error responses are returned for privilege failures, missing/invalid IDs, or business logic violations. The final returned data includes the full updated notification event, matching atomic schema.",
      "summary": "Update an existing attendance notification event (attendance_notification).",
      "parameters": [
        {
          "name": "id",
          "description": "Target notification's unique identifier (UUID) to update.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Fields for attendance notification update (atomic, only updatable fields allowed).",
        "typeName": "IAttendanceNotification.IUpdate"
      },
      "responseBody": {
        "description": "Updated attendance notification event (fully normalized).",
        "typeName": "IAttendanceNotification"
      },
      "authorization": {
        "role": [
          "teacher",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/notifications/{id}",
      "method": "put"
    },
    {
      "specification": "Delete an attendance notification event by its unique identifier. This API operation deletes a notification record from the attendance_notification table in the AttendanceNotification schema. Intended for administrative use (removing errant or duplicate notifications or for legal/audit compliance). In general, only notifications not delivered or those triggered in error/aborted workflows are subject to deletion; delivered/logged notifications should be soft-deleted or marked inactive for audit. This endpoint should strictly enforce referential integrity, preventing deletion if dependent records exist (e.g., notification histories or critical audit chains). The operation is logged for audit with actor/role and timestamp for regulatory compliance. Access is limited to admins, or to teachers only for self-owned (their own class) notifications in permitted policy contexts.",
      "description": "This API removes an atomic attendance notification event from the attendance_notification table. Deletion is by UUID, and the endpoint enforces referential checks (ensuring that if there are dependent notification history records, the request is rejected unless policies allow cascading deletes or soft deletion). The endpoint returns success/failure status upon completion, and any removal is logged for compliance tracing. Typically, only admins or owning teachers may remove records, and only if not critical to operational/audit chains (if so, must mark as inactive rather than delete). Errors include not found, permission denied, or foreign key constraint violations. This is commonly invoked for data correction, legal requests, or duplicate error clean-up by teachers or system admins.",
      "summary": "Delete an attendance notification event by ID (attendance_notification).",
      "parameters": [
        {
          "name": "id",
          "description": "Target notification's unique identifier (UUID) for deletion.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Status/success (or deleted notification snapshot if required for compliance/audit).",
        "typeName": "IAttendanceNotification.IDeleteResponse"
      },
      "authorization": {
        "role": [
          "teacher",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/notifications/{id}",
      "method": "delete"
    },
    {
      "specification": "Retrieve a paginated/searchable list of attendance notification channels (settings for how notifications are delivered to students/parents, e.g., push, SMS, or email). This corresponds to the attendance_notification_channel table, tracking enabled/disabled state per channel, recipient mapping, and delivery priority. This endpoint allows clients (admin, parent, student) to query their notification channel preferences, filter by channel type, recipient, status, or preference order. Used for display in profile/settings dashboards or notification configuration modals to allow users to view/edit their preferred notification routes. Must return normalized, atomic records only, and enforce role-based restrictions on accessible records (e.g., student/parent only see their own settings, admin can view all for their scope). Pagination, search (by channel_type/status), and sorting are mandatory for scalable display.",
      "description": "This API retrieves a list of notification channel configurations as stored in attendance_notification_channel for a user's accessible scope (their own settings for parents/students; class/school for admin; their children's channels for parent). The client may supply search parameters (channel_type, status/is_enabled, preference_order filter, student_id or parent_id), and results must be paginated and sortable. All returned channel records contain only normalized atomic data (presented ID fields for FK bound entities, enable state, channel type, and preference order). The endpoint strictly limits access to only authorized records based on the role and authenticated user. Used for profile and delivery settings UIs, troubleshooting notification issues, and bulk analytics. Returns standard page metadata (total count, current page, total pages, etc.) and list of matching channel records.",
      "summary": "List/search notification channel settings (attendance_notification_channel).",
      "parameters": [],
      "requestBody": {
        "description": "Query/search parameters, paging, and filters for notification channels.",
        "typeName": "IAttendanceNotificationChannel.IRequest"
      },
      "responseBody": {
        "description": "Paginated notification channel list, filtered and sorted.",
        "typeName": "IPageIAttendanceNotificationChannel"
      },
      "authorization": {
        "role": [
          "student",
          "parent",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/notificationChannels",
      "method": "patch"
    },
    {
      "specification": "Fetch a single notification channel configuration by its unique identifier. This operation corresponds to the attendance_notification_channel table, which records the enabled/disabled state and priority for each given route (push, SMS, email) per recipient. The endpoint allows authorized users (the setting owner, their parent, or relevant admin) to retrieve details for one channel, including student/parent mapping, type, enable status, and preference order. Used for detail display screens or to prepopulate an edit form. The integrity of data returned is strictly atomic and normalized, without aggregations or roll-ups. Authorization is strongly enforced to avoid leaking notification routing settings cross-user/class boundaries.",
      "description": "This API retrieves a single attendance notification channel by its unique identifier, as found in the attendance_notification_channel table. It returns the atomic, normalized settings for channel delivery for the target student/parent association, including channel type (push/SMS/email), enable/disable state, and order of preference. Access is limited such that students or their parents can only read their own channel records; admins or school officials may fetch by global ID to support troubleshooting, settings editing, or compliance audits. Errors returned include not found, permission denied, and referential integrity errors for ID mismatches.",
      "summary": "Fetch a specific notification channel by ID (attendance_notification_channel).",
      "parameters": [
        {
          "name": "id",
          "description": "Target notification channel's unique identifier (UUID).",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Atomic details of a single notification channel setting.",
        "typeName": "IAttendanceNotificationChannel"
      },
      "authorization": {
        "role": [
          "student",
          "parent",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/notificationChannels/{id}",
      "method": "get"
    },
    {
      "specification": "Create a new notification channel configuration (route for push, sms, or email notifications per student/parent). This corresponds to a new row in the attendance_notification_channel table in AttendanceNotification schema, specifying recipient/delivery preference/settings. Used by parent/student/admin to add a new notification route. All inserted fields must be normalized: student/parent FK, channel_type (enum), enable state, and preference order. Referential integrity enforced for students/parents (must exist), and uniqueness constraints on (student, parent, channel_type). Used for onboarding new accounts, enabling new channels, or granting additional guardians control.",
      "description": "This API allows the authenticated user (or admin on their behalf) to create a new delivery route entry for notification preferences in the attendance_notification_channel table. The request body contains required atomic fields: student_id, channel_type (such as app_push, sms, email), is_enabled boolean, and preference_order integer; parent_id may be set if a guardian profile is being created or updated. All provided FKs are validated for existence/ownership, and a unique constraint on (student_id, parent_id, channel_type) is enforced. Typical use cases include new account onboarding (auto-create app/SMS), parent granting SMS authorization, or school administrator provisioning default contact routes. Errors returned include privilege errors (for users trying to create channels for others), invalid FKs, or uniqueness violations. On success, the fully normalized channel entry is returned for immediate use in settings UIs or confirmation modals.",
      "summary": "Create a new notification channel route (attendance_notification_channel).",
      "parameters": [],
      "requestBody": {
        "description": "Atomic parameters for channel creation (association, type, enable, order).",
        "typeName": "IAttendanceNotificationChannel.ICreate"
      },
      "responseBody": {
        "description": "Success and record of created notification channel.",
        "typeName": "IAttendanceNotificationChannel"
      },
      "authorization": {
        "role": [
          "student",
          "parent",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/notificationChannels",
      "method": "post"
    },
    {
      "specification": "Update a notification channel for a specific student/parent. This operation modifies an existing record in the attendance_notification_channel table (AttendanceNotification schema). Permitted changes include enable/disable state, channel type (within allowed values), or preference order. Only the target owner (student/parent) or an admin may make changes. All updated data fields must be atomic and validated. Use for settings update screens or bulk edit functions. Integrity and audit logging required for compliance.",
      "description": "This API allows modification of the atomic details of a notification channel delivery route, keyed by its UUID. The user submits a payload (IAttendanceNotificationChannel.IUpdate) that may include new values for is_enabled, channel_type, or preference_order, as well as an updated parent_id if the parental guardian association changes. The role and ownership of the user is always checked to limit the scope only to settings the user can edit (own/student profile, own child for parents, or by admin). Constraints on FK integrity, unique keys (student+channel+parent), and allowed channel_type are enforced. Errors are returned for privilege violations, business logic errors, or referential integrity issues. Updates are audit-logged for regulatory compliance. The response always contains the up-to-date, fully atomic and normalized entry for the notification channel.",
      "summary": "Update a notification channel's details (attendance_notification_channel).",
      "parameters": [
        {
          "name": "id",
          "description": "Target notification channel route's unique identifier (UUID) to update.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Fields for channel update (atomic, only allowed fields).",
        "typeName": "IAttendanceNotificationChannel.IUpdate"
      },
      "responseBody": {
        "description": "Resulting updated notification channel entry.",
        "typeName": "IAttendanceNotificationChannel"
      },
      "authorization": {
        "role": [
          "student",
          "parent",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/notificationChannels/{id}",
      "method": "put"
    },
    {
      "specification": "Delete a notification channel configuration by unique identifier. This corresponds to attendance_notification_channel table row removal, disconnecting a delivery route for push, SMS, or email. Use for inactivation or revocation of parent's/student's alert settings (by owner or admin only). Enforce referential constraints (should not break notification history records); may require soft delete for audit. Returns status or deleted entry snapshot for client confirmation and audit logging.",
      "description": "This endpoint deletes a specific notification channel (by UUID) for a student/parent. Used to remove an unwanted or invalid delivery route for push, SMS, or email (for instance, after phone loss, app uninstalled, or contact detail changed). Strict referential and business logic constraints enforced: only admins or the channel owner (student/parent) may delete. The deletion is either soft (mark as inactive) or hard (FK permitting), depending on policy and presence of dependent notification history records. Errors include not found, FK constraint failure, or privilege errors. All deletions are logged for compliance/audit. On success, the endpoint returns a status or the deleted record snapshot (can be used for undo purposes or client UI update).",
      "summary": "Delete a notification channel setting by ID (attendance_notification_channel).",
      "parameters": [
        {
          "name": "id",
          "description": "Target notification channel's unique UUID to remove.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Deletion success or snapshot of removed channel entry.",
        "typeName": "IAttendanceNotificationChannel.IDeleteResponse"
      },
      "authorization": {
        "role": [
          "student",
          "parent",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/notificationChannels/{id}",
      "method": "delete"
    },
    {
      "specification": "Search or retrieve a paginated list of attendance notification delivery history records. This operation queries attendance_notification_history, reporting all message delivery/log attempts per recipient/channel/notification. The endpoint allows searching by status (pending/delivered/failed), channel type, date, recipient, notification_id, etc. Result set is paginated and can be sorted for scalable dashboards, troubleshooting, analytics, or reporting. Access is tightly restricted: each user can only request their own (or admin for their scope). No denormalized info, only normalized log records per attempt per channel per event.",
      "description": "This API operation lists or searches notification delivery attempt histories based on search/paging parameters as an atomic (paginated) query against attendance_notification_history table. The client may filter by notification_id, channel_id/type, recipient, delivery status, sent_at/delivered_at window, etc. Only normalized detail records are returned: do not aggregate/join message bodies or event meta here. Used in parent/student dashboards, admin troubleshooting, analytics, or compliance audit logs. Access is restricted to owners (for their events) or admin (full scope). Errors are returned on access failure, invalid filters, or paging issues. Standard pagination is always present (page, total, page_size, etc.), plus an array of atomic history records for consumption by client UIs.",
      "summary": "Search/list notification delivery history records (attendance_notification_history).",
      "parameters": [],
      "requestBody": {
        "description": "Search, filter, and paging parameters for notification histories.",
        "typeName": "IAttendanceNotificationHistory.IRequest"
      },
      "responseBody": {
        "description": "Paginated result of notification delivery attempt log records.",
        "typeName": "IPageIAttendanceNotificationHistory"
      },
      "authorization": {
        "role": [
          "student",
          "parent",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/notificationHistories",
      "method": "patch"
    },
    {
      "specification": "Fetch a single attendance notification delivery history record by its unique identifier. This endpoint retrieves a single row from the attendance_notification_history table, giving the atomic delivery status for a particular notification attempt on a channel. The data includes notification/channel link, all timestamps, status (delivered, pending, failed), and error message (if any). Strictly normalized and intended for use in delivery status screens, audit detail pages, or troubleshooting. Access is restricted: only owner or admin may read. No message bodies/PII exposed. Used for fine-grained notification troubleshooting, compliance investigation, or status dashboards.",
      "description": "This endpoint fetches atomic details for a single notification delivery attempt by its UUID from attendance_notification_history. Returned data includes notification_id, channel_id, all timestamps (sent, delivered, etc), status, and any error codes/messages. Authorization required: only channel owner (student/parent or their admin) may view. Used in troubleshooting failed notifications, detail popups in notification status views, and audit tasks. Proper error response for not found or privilege/record violations. Result contains only normalized atomic log row.",
      "summary": "Get details for a single notification delivery attempt by ID (attendance_notification_history).",
      "parameters": [
        {
          "name": "id",
          "description": "Target notification history delivery attempt's UUID.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Atomic record of notification delivery attempt.",
        "typeName": "IAttendanceNotificationHistory"
      },
      "authorization": {
        "role": [
          "student",
          "parent",
          "admin"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/notificationHistories/{id}",
      "method": "get"
    },
    {
      "specification": "Create a new notification history entry for attendance events. This operation is mapped to the attendance_notification_history table in the AttendanceNotification namespace. It facilitates the recording of the attempted delivery or outcome of notifications (such as push, SMS, or email) that were initiated in response to attendance-related events, e.g., student check-in, absence, etc. All created histories must be strictly normalized, referencing notification, channel, and timestamp information.",
      "description": "This API endpoint allows the system to log a new delivery event for a notification sent to parents, teachers, or admins. As described in the Prisma schema: each record must store the foreign keys to the notification (attendance_notification), the channel used for delivery (attendance_notification_channel), the expected or actual sent/delivered timestamps, delivery status (e.g., pending, delivered, failed), and any error message returned from the channel provider. This is crucial for post-event auditing and troubleshooting delivery issues.\n\nPermission checks must ensure that notification and channel refs are valid and that only authorized system roles (notification relay/process runners, not students or parents) are allowed to invoke this operation. Error handling follows the schema: failing on missing required FK, invalid statuses, or business rule violations (e.g., duplicate log for same notification+channel+timestamp).\n\nRelated API operations may include querying notification history (for notification status dashboards or parent/teacher review) and bulk log import (for external relay integration).",
      "summary": "Creates a new attendance_notification_history record in the database.",
      "parameters": [],
      "requestBody": {
        "description": "Delivery attempt/result info of the notification history event.",
        "typeName": "IAttendanceNotificationHistory.ICreate"
      },
      "responseBody": {
        "description": "The detailed attendance_notification_history record.",
        "typeName": "IAttendanceNotificationHistory"
      },
      "path": "/attendance/notificationHistories",
      "method": "post"
    },
    {
      "specification": "Update the detailed information of a specific notification history record. This operation is associated with the attendance_notification_history table. Aimed for cases where the delivery status, timestamps, or error message need correction/overriding due to a delivery confirmation/update/failure. This does not create a new event but alters an existing one for traceability.",
      "description": "This API updates an existing notification history record. According to the schema, the identifier (id) in the path selects the target row, while the request body provides new values for status, error messages, and delivery timestamps as appropriate. Editing is strictly controlled: only server processes, notification relays, or authorized admins can amend delivery results, and audit logs for such changes are mandated.\n\nError handling includes checks for existence of target row, permissions, and valid status transitions (e.g., cannot move from delivered to pending).\n\nThis endpoint is related to the notification sending and monitoring API in that it may be called asynchronously in response to webhook callbacks from push/SMS/email providers.",
      "summary": "Updates a specific attendance_notification_history record.",
      "parameters": [
        {
          "name": "id",
          "description": "Target notification history record's ID (UUID).",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Partial/full update for the notification history record.",
        "typeName": "IAttendanceNotificationHistory.IUpdate"
      },
      "responseBody": {
        "description": "The updated attendance_notification_history record.",
        "typeName": "IAttendanceNotificationHistory"
      },
      "path": "/attendance/notificationHistories/{id}",
      "method": "put"
    },
    {
      "specification": "Delete a specific notification history record from the attendance_notification_history table. Used in rare audit/troubleshooting cases, typically only by system or admin users. Ensures full traceability by soft (preferred) or hard (rare/directive) delete according to business policy.",
      "description": "This endpoint allows the removal of a delivery attempt log for an attendance notification. As described in the schema, deletion is only permissible for authorized admin/system roles and must either soft-delete (audit fields: mark deleted at) or hard-delete (fully remove the row for data minimization/compliance) as per configuration.\n\nDeleting notification histories can impact the audit trail for notifications; ensure cross-checks and proper permission checks before destructive actions.\n\nThis is typically related to compliance operations or admin panel troubleshooting/fixes for orphaned/erroneous log rows, not regular app flow.",
      "summary": "Deletes a specific attendance_notification_history record from the database.",
      "parameters": [
        {
          "name": "id",
          "description": "Target notification history record's ID (UUID).",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": null,
      "path": "/attendance/notificationHistories/{id}",
      "method": "delete"
    },
    {
      "specification": "Retrieve a list of daily attendance statistics with search, filtering, and pagination capabilities. Based on the attendance_stats_daily table, provides daily-level summaries for classrooms and schools as required for dashboards and reporting.",
      "description": "This endpoint enables clients (dashboard/reporting UIs, admin panels) to query one or more attendance_stats_daily records filtered by classroom, school, time-range, etc., with optional pagination and sorting. According to the schema, response includes day-level present/late/absent/leave counts and references to relevant classroom/school.\n\nSecurity: All users may query, but results are filtered (teachers/parents see only relevant classes, admins have broader access).\n\nValidation: Ensures only valid filters are processed and controls size of result set.\n\nRelated: result set powers dashboards, calendar exports, and trend analysis for both teachers and administrators.",
      "summary": "Returns a paginated list of attendance_stats_daily records matching the query.",
      "parameters": [],
      "requestBody": {
        "description": "Query/filtering/search conditions for attendance_stats_daily listing.",
        "typeName": "IAttendanceStatsDaily.IRequest"
      },
      "responseBody": {
        "description": "Paginated/filtered list of attendance_stats_daily summary records.",
        "typeName": "IPageIAttendanceStatsDaily"
      },
      "path": "/attendance/stats/daily",
      "method": "patch"
    },
    {
      "specification": "Return detailed information about a specific daily attendance statistics record, from attendance_stats_daily. This is used both in dashboards (when clicking a summary row) or for detailed drill-down.",
      "description": "Retrieves a specific attendance_stats_daily row by its unique identifier. The response includes all fields (present, late, absent, early_leave counts) and references (classroom, school, day) as described in the schema. Authorization checks filter access to only allowed users per classroom/school.\n\nErrors include not found, permission denied, or invalid id.",
      "summary": "Returns details for a specific attendance_stats_daily record.",
      "parameters": [
        {
          "name": "id",
          "description": "Target day-level stats record's ID (UUID).",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Detail about the target attendance_stats_daily record.",
        "typeName": "IAttendanceStatsDaily"
      },
      "path": "/attendance/stats/daily/{id}",
      "method": "get"
    },
    {
      "specification": "Create a new daily attendance statistics row. Related to attendance_stats_daily in Prisma. Usually called by an admin/statistics job or dashboard bulk add; records summary counts for a classroom and school for a given day.",
      "description": "Inserts a new attendance_stats_daily record. The request body (see schema) must specify which classroom, school, and day, and the daily counts for present/late/absent/early_leave. Insertions are strictly controlled: cannot duplicate a (classroom, day) pair and must honor all atomic normalization rules.\n\nRole check: only admins or system cron jobs can create stats directly (teacher dashboards usually rely on automatic aggregation).\n\nError handling on duplicate entry, invalid FKs, or missing data is critical.\n\nLinked operations: stats update, daily summary dashboard refresh, etc.",
      "summary": "Creates a new attendance_stats_daily record.",
      "parameters": [],
      "requestBody": {
        "description": "New daily classroom/school summary statistics to add.",
        "typeName": "IAttendanceStatsDaily.ICreate"
      },
      "responseBody": {
        "description": "The created attendance_stats_daily record.",
        "typeName": "IAttendanceStatsDaily"
      },
      "path": "/attendance/stats/daily",
      "method": "post"
    },
    {
      "specification": "Update the details of a specific attendance_stats_daily record—used for correcting attendance counts, fixing records, or updating day or aggregation scope. Table: attendance_stats_daily in AttendanceStatsDashboard.",
      "description": "Updates a day's stats summary (present/late/absent/leave counts) or the relevant classroom or school IDs. The operation checks for dupe constraints (unique (classroom, day)), enforces permission (admin-only), and creates an audit trail.\n\nInput validation: only valid status counts, proper classroom/school references, and correct day format (YYYY-MM-DD) allowed.\n\nRelated: May be called from dashboards, error correction flows, or stats sync jobs.",
      "summary": "Updates a specific attendance_stats_daily record.",
      "parameters": [
        {
          "name": "id",
          "description": "Target stats_daily record's ID (UUID).",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Columns to update for the day-level stats row.",
        "typeName": "IAttendanceStatsDaily.IUpdate"
      },
      "responseBody": {
        "description": "Resulting/updated attendance_stats_daily record.",
        "typeName": "IAttendanceStatsDaily"
      },
      "path": "/attendance/stats/daily/{id}",
      "method": "put"
    },
    {
      "specification": "Delete a specific daily attendance statistics row from attendance_stats_daily. Usually invoked only by system or admin users to correct summary/reporting errors or for data minimization/policy directives.",
      "description": "Removes a stats_daily record by ID (UUID). Only super-admin/system users allowed to perform this action, as it can affect dashboards, reports, and exports. Will check for referential integrity (e.g., don't orphan summaries needed by reporting).\n\nAll deletes should be auditable, with soft delete preferred unless hard delete is required (for data retention/GDPR-period expiration, etc.). Errors on FK violation, not found, or permission denied are to be handled as per standard convention.\n\nLinked to: data correction, reporting, record retention enforcement.",
      "summary": "Deletes an attendance_stats_daily record specified by ID.",
      "parameters": [
        {
          "name": "id",
          "description": "Target daily stats record's ID (UUID).",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": null,
      "path": "/attendance/stats/daily/{id}",
      "method": "delete"
    },
    {
      "specification": "Query multiple student-level attendance statistics summary records. Based on attendance_stats_student_summary: aggregate stats per student, period, classroom, etc, with support for search and pagination.",
      "description": "Query for a list of student summary stats records with search, filtering, and pagination. Response includes period-based totals for present, late, absent, early_leave by student and classroom ref, as described in the schema and requirements. Supports drilldown for dashboards, risk assessments, and progress review by admin/teacher/parent.\n\nSecurity: filters output to allowed users (e.g., teachers see only their students, parents only children), with paging/size control as per policy.\n\nMay aggregate over semesters, months, or user-defined periods.",
      "summary": "Returns a paginated list of attendance_stats_student_summary records.",
      "parameters": [],
      "requestBody": {
        "description": "Search, filtering, and pagination criteria for retrieving student summaries.",
        "typeName": "IAttendanceStatsStudentSummary.IRequest"
      },
      "responseBody": {
        "description": "Paginated and filtered list of student summary stats.",
        "typeName": "IPageIAttendanceStatsStudentSummary"
      },
      "path": "/attendance/stats/studentSummaries",
      "method": "patch"
    },
    {
      "specification": "Retrieve detail information about a single student summary stats record, as stored in attendance_stats_student_summary. Used for detailed drilldown or review in portals/dashboards.",
      "description": "Get the details for one summary stats record by its UUID. Response includes student, classroom, period, and counters as described in schema for dashboards and analysis/progress workflows. Authorization and validation per role, record existence, etc. Errors handled for not found, not permitted, etc.",
      "summary": "Returns details about a specific attendance_stats_student_summary record.",
      "parameters": [
        {
          "name": "id",
          "description": "Target student summary stats record's ID (UUID).",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Full details for the student summary stats row.",
        "typeName": "IAttendanceStatsStudentSummary"
      },
      "path": "/attendance/stats/studentSummaries/{id}",
      "method": "get"
    },
    {
      "specification": "Create a new student summary statistics record in attendance_stats_student_summary, for period stats dashboards, risk detection, or review/aggregation. Usually invoked by admin/batch/statistics routines.",
      "description": "Adds a summary row for a specific student, classroom, and period with associated present/late/absent/leave totals as per the schema. It must enforce uniqueness by (student, period_start, period_end), validate all references, and allow only staff/admin users to create directly (student summaries are normally computed automatically).\n\nError checks: references valid, period-format validated, no duplicate summary record for the same student/period/subject.\n\nMay be related to mass import/refresh, or correction workflows/workarounds for data issue remediation.",
      "summary": "Creates a new attendance_stats_student_summary record.",
      "parameters": [],
      "requestBody": {
        "description": "New period summary for a student, classroom, and period.",
        "typeName": "IAttendanceStatsStudentSummary.ICreate"
      },
      "responseBody": {
        "description": "Created student summary stats record.",
        "typeName": "IAttendanceStatsStudentSummary"
      },
      "path": "/attendance/stats/studentSummaries",
      "method": "post"
    },
    {
      "specification": "Updates a specific student summary statistics record in the attendance_stats_student_summary table. It allows authorized administrators or teachers to modify aggregate attendance statistics for an individual student and a specific period, as required for corrections or retroactive adjustments documented in the requirements. Full compliance with daily/statistical normalization and audit trail. Also supports updating the aggregation period or summary data when attendance corrections are made post hoc.",
      "description": "This endpoint updates a single student summary statistics record in the attendance_stats_student_summary table.\n\nPermission is limited to authorized roles (typically admins or teachers). It strictly follows the database's 3NF policy, ensuring that no derived or denormalized data is introduced/injected -- the update applies only to the canonical summary for the student and period. Every update must reference the audit policy, meaning changes must be tracked by audit logs for compliance and traceability.\n\nValidation ensures the target student exists, the period is valid, and all summary data (such as present, late, absent, early_leave counts) adheres to integrity rules. The system rejects updates that would create duplicate (student_id, period_start, period_end) records. If the summary statistics need to be recalculated (e.g., after correcting individual records), this endpoint also refreshes the total fields.\n\nAutomatic update timestamps enable downstream dashboards to refresh in near-real time. If the update leads to any abnormal pattern detected, relevant hooks for abnormal log insertion are triggered.",
      "summary": "Update a specific student summary statistics record (attendance_stats_student_summary).",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of the student summary statistics record to update.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "The updated data for the student summary statistics record.",
        "typeName": "IAttendanceStatsStudentSummary.IUpdate"
      },
      "responseBody": {
        "description": "Returns the full updated summary statistics for the specified student and period.",
        "typeName": "IAttendanceStatsStudentSummary"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/stats/studentSummaries/{id}",
      "method": "put"
    },
    {
      "specification": "Deletes a specific student summary statistics record in the attendance_stats_student_summary table. Used for administrative error correction or purging obsolete summary rows. All actions are fully auditable with appropriate access restrictions based on role. Any deletion must be logged for compliance per audit policy requirements.",
      "description": "This endpoint deletes (removes) a student summary statistics record from the attendance_stats_student_summary table for a given ID.\n\nOnly users with admin or high-level teacher privileges are authorized to perform the deletion. Every deletion action is logged in the audit log for full system compliance, supporting incident investigation or administrative rollback if required. The endpoint strictly deletes by the canonical primary key (id) and enforces referential integrity: deletion is blocked if summary records are referenced elsewhere or would violate integrity constraints.\n\nComplies with data retention policies as per system requirements: soft-delete policies or archiving may be applied at the application/business logic layer but are not detailed here. System provides appropriate error messages for not found, forbidden, or integrity constraint violations.\n",
      "summary": "Delete a student summary stats record (attendance_stats_student_summary).",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of the student summary statistics record to delete.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": null,
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/stats/studentSummaries/{id}",
      "method": "delete"
    },
    {
      "specification": "Retrieves a list of classroom summary statistics records from the attendance_stats_classroom_summary table, with search/sort/filter options as used by dashboards or administrators. Enables dashboard queries by period, classroom, or custom search conditions. Returns paged or filtered results as per API client request.",
      "description": "This endpoint returns a filtered list of classroom summary statistics records from the attendance_stats_classroom_summary table.\n\nSupports advanced dashboard and reporting use cases: API clients may search/filter by school, classroom, period, or sort by total stats (present, late, absent, early_leave). Pagination options may be provided in the request body. Only authorized admin or teacher users can query class-level summary stats.\n\nValidation ensures search parameters are well-formed and fall within the allowed range of classroom/periods. If the request body is absent or empty, returns the default most recent period summaries for all classrooms available to the user. Results are suitable for rendering bulk dashboards or exporting to CSV as per admin/teacher requirements.",
      "summary": "List classroom summary stats with advanced filter/search (attendance_stats_classroom_summary).",
      "parameters": [],
      "requestBody": {
        "description": "Search and filter parameters for retrieving classroom summary stats records.",
        "typeName": "IAttendanceStatsClassroomSummary.IRequest"
      },
      "responseBody": {
        "description": "A paginated or filtered list of classroom summary records matching the request.",
        "typeName": "IPageIAttendanceStatsClassroomSummary"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/stats/classroomSummaries",
      "method": "patch"
    },
    {
      "specification": "Retrieves the full details of a specific classroom summary statistics record from the attendance_stats_classroom_summary table, as required for detailed dashboard or report views. Supports use cases that require all period aggregation metrics for a particular classroom and period.",
      "description": "This endpoint retrieves the full record for a specific classroom summary statistics row from the attendance_stats_classroom_summary table by primary key (UUID).\n\nAccess is restricted to authorized admin or teacher roles. All summary data (present, late, absent, early_leave counts) for the time period is returned. The endpoint supports error return for not found or forbidden (e.g., if the user does not have privileges for the classroom).\n\nComplies with dashboard requirements for period detail view; downstream systems may use this data for deeper analytics or exporting. Audit logs record every access to support regulatory compliance and monitoring.",
      "summary": "Get detailed classroom summary statistics record (attendance_stats_classroom_summary).",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of the classroom summary statistics record to retrieve.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Returns the complete classroom summary statistics record.",
        "typeName": "IAttendanceStatsClassroomSummary"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/stats/classroomSummaries/{id}",
      "method": "get"
    },
    {
      "specification": "Creates a new classroom summary statistics record in the attendance_stats_classroom_summary table. Used when new classroom periods are started, or retroactively to insert period summaries after record migration/correction. Strictly requires all fields for referential/integrity control. Full audit compliance: inserts are logged with administrative actor info.",
      "description": "This endpoint creates a new classroom summary statistics record within the attendance_stats_classroom_summary table for the provided classroom, school, and period.\n\nOnly admins or teachers with privileges for the target classroom are allowed to use this endpoint. All required aggregation/statistics fields must be populated to satisfy integrity (present, late, absent, early_leave counts). The endpoint validates uniqueness (no duplicate (classroom_id, period_start, period_end)), and ensures that the referenced classroom and school exist. Audit logs are generated automatically to record the creation for compliance.\n\nField validation is performed for period range, counts, and primary key uniqueness. Endpoint returns the full created summary statistics row, including record id.",
      "summary": "Create a new classroom summary stats record (attendance_stats_classroom_summary).",
      "parameters": [],
      "requestBody": {
        "description": "Data required to create a new classroom summary statistics record.",
        "typeName": "IAttendanceStatsClassroomSummary.ICreate"
      },
      "responseBody": {
        "description": "Returns the newly created classroom summary stats record with all details.",
        "typeName": "IAttendanceStatsClassroomSummary"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/stats/classroomSummaries",
      "method": "post"
    },
    {
      "specification": "Updates a specific classroom summary statistics record (by primary key UUID) in the attendance_stats_classroom_summary table. Enables correction/refresh of per-period aggregates, as required by administrative/business workflows or retroactive adjustments. Audit log required for any change.",
      "description": "This endpoint updates an existing classroom summary stats record for a given id in the attendance_stats_classroom_summary table.\n\nOnly users with admin or teacher privileges may perform the update, and every operation must be logged to an audit log (including before/after images if required by business logic). Integrity is maintained by ensuring that any updated values remain within valid constraints, e.g., present+late+absent+early_leave cannot exceed total student-days for the period; period range validation is enforced.\n\nIf the classroom or period is altered, the endpoint checks for unique constraint violations and referential integrity with classroom/school records. Return value is the entire updated stats record for rendering summary dashboard updates/managing further exports.",
      "summary": "Update an existing classroom summary stats record (attendance_stats_classroom_summary).",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of the classroom summary stats record to update.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Fields to update in the classroom summary stats record.",
        "typeName": "IAttendanceStatsClassroomSummary.IUpdate"
      },
      "responseBody": {
        "description": "Returns the updated classroom summary statistics record.",
        "typeName": "IAttendanceStatsClassroomSummary"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/stats/classroomSummaries/{id}",
      "method": "put"
    },
    {
      "specification": "Deletes a specific classroom summary statistics record by id (UUID) from the attendance_stats_classroom_summary table. Implements required business logic for administrative/statistical corrections, record purges, and data management. Audit log required for traceability and compliance.",
      "description": "This endpoint deletes a classroom summary statistics record from the attendance_stats_classroom_summary table for the specified id.\n\nAction is restricted to admin or teachers. Deletion events are logged in the audit log for compliance (actor, action, result) and to support investigative or troubleshooting workflows. If deleting the summary would violate referential integrity (e.g., referenced by dash/report), action is blocked. Returns status 204/empty success on successful deletion.\n\nHard or soft delete is managed per application policy; this spec only describes physical delete from canonical store.",
      "summary": "Delete a classroom summary stats record (attendance_stats_classroom_summary).",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of the classroom summary stats record to delete.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": null,
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/stats/classroomSummaries/{id}",
      "method": "delete"
    },
    {
      "specification": "Retrieves a filtered list of attendance_stats_abnormal_log records matching search/sort/filter criteria as required for admin/teacher abnormality review dashboards and anomaly analytics. Enables period/class/student anomaly rollups, period-over-period comparison, and attribute-based filtering. Result may be paged as per request.",
      "description": "This endpoint returns a filtered, ordered list of abnormal attendance log records from attendance_stats_abnormal_log (suspicious/corrected/flagged attendance events over a period/class/student). \n\nFilters/search parameters are provided in the request body: e.g., by student, class, anomaly type, period. \n\nPermissions restricted to admin and teacher roles: only data matching user privileges are returned. Validation checks search parameter validity and page constraints. \n\nThe response is a list or paginated structure suitable for rendering dashboard anomaly widgets, reports, or audit review. System may apply additional business filters (e.g., open/closed only) as per request.",
      "summary": "List abnormal attendance logs with filter/search (attendance_stats_abnormal_log).",
      "parameters": [],
      "requestBody": {
        "description": "Search criteria for listing abnormal attendance log records.",
        "typeName": "IAttendanceStatsAbnormalLog.IRequest"
      },
      "responseBody": {
        "description": "A page or list of abnormal log record details for the matching criteria.",
        "typeName": "IPageIAttendanceStatsAbnormalLog"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/stats/abnormalLogs",
      "method": "patch"
    },
    {
      "specification": "Retrieves the details of a specific abnormal attendance log record from attendance_stats_abnormal_log by id (UUID), as used for anomaly review/management dashboards. Supports root-cause, audit, or correction workflows. Returns all metadata for a given abnormal attendance event.",
      "description": "This endpoint retrieves the full details for a specific abnormal attendance log record from attendance_stats_abnormal_log by id (UUID).\n\nOnly accessible to authorized admin/teacher users. All event metadata, detection rule, anomaly type, and work status are returned, enabling corrective action, annotation, or further review. Not found errors are possible if ID does not exist or access is disallowed. Audit logs may record this access for compliance/audit purposes.",
      "summary": "Get details of a specific abnormal attendance log record (attendance_stats_abnormal_log).",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of the abnormal log record to retrieve.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Returns the complete abnormal attendance log record and all metric/anomaly info.",
        "typeName": "IAttendanceStatsAbnormalLog"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/stats/abnormalLogs/{id}",
      "method": "get"
    },
    {
      "specification": "Creates a new abnormal attendance log record in attendance_stats_abnormal_log. Used to record new anomaly detections (either system or manual), corrections/flagging actions, or as part of dashboard flag/annotation workflow. Inserts are fully auditable and must validate required integrity and source references.",
      "description": "This endpoint creates a new abnormal attendance log record in the attendance_stats_abnormal_log table.\n\nAction is restricted to admin or teacher roles. All record fields must comply with referential/integrity checks: e.g., referenced attendance record and student must exist, anomaly type valid, etc. Used as part of review dashboard, manual flagging, or in support of anomaly detection features. Creation of a log triggers downstream hooks (anomaly notification, dashboard widgets).\n\nAudit log is created to track who/what triggered each new anomaly event. Returns the newly inserted abnormal log record for further review/action.",
      "summary": "Create a new abnormal attendance log record (attendance_stats_abnormal_log).",
      "parameters": [],
      "requestBody": {
        "description": "Data to insert as a new abnormal log record.",
        "typeName": "IAttendanceStatsAbnormalLog.ICreate"
      },
      "responseBody": {
        "description": "Returns info for the newly created abnormal attendance log record.",
        "typeName": "IAttendanceStatsAbnormalLog"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/stats/abnormalLogs",
      "method": "post"
    },
    {
      "specification": "Updates a specific abnormal attendance log record (by id, UUID) in attendance_stats_abnormal_log. Used by admin/teacher roles for marking anomalies reviewed/resolved, appending notes, or updating status as corrective actions are processed. All updates fully auditable with before/after images as per compliance.",
      "description": "This endpoint updates an abnormal attendance log record for a specified id in the attendance_stats_abnormal_log table.\n\nOnly accessible to admin/teacher users with appropriate privileges. Updateable fields may include status (open, closed, in_review), anomaly description/rule, associated admin, or note fields. All changes are recorded in an audit log for compliance. Input validation ensures updated fields adhere to normalization/integrity rules and that referenced entities exist (e.g., attendance record, student).\n\nReturns the updated abnormal log record with the full detailed view for dashboards or downstream alerting.",
      "summary": "Update a specific abnormal attendance log record (attendance_stats_abnormal_log).",
      "parameters": [
        {
          "name": "id",
          "description": "UUID of the abnormal log record to update.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Fields to update in the abnormal log record.",
        "typeName": "IAttendanceStatsAbnormalLog.IUpdate"
      },
      "responseBody": {
        "description": "The updated abnormal attendance log record.",
        "typeName": "IAttendanceStatsAbnormalLog"
      },
      "authorization": {
        "role": [
          "admin",
          "teacher"
        ],
        "type": "Bearer"
      },
      "path": "/attendance/stats/abnormalLogs/{id}",
      "method": "put"
    },
    {
      "specification": "Implements the deletion operation for the abnormal attendance log record. This operation deletes a single attendance_stats_abnormal_log record specified by its unique identifier (id) from the audit log. This table supports administrative anomaly resolution workflows in the attendance platform as described in both requirement analysis and Prisma comments.",
      "description": "This API deletes an abnormal log entry for attendance, which documents a detected anomaly regarding a student's attendance (such as suspected proxy check-in, duplicate, code invalidation, or other rule violations). The endpoint is protected for use by system administrators or users with administrative rights. When invoked, the specified log record is permanently removed from the database, provided the actor has the required permissions, per security and audit requirements. If the id does not exist, an appropriate error is returned. This API directly manipulates the attendance_stats_abnormal_log table, which implements per-event anomaly tracking and review for teacher/admin dashboards, and is referenced for audit and compliance reporting. Related record deletions (such as dependent references) follow database cascade rules as defined in the schema.",
      "summary": "Delete a specific abnormal attendance log (attendance_stats_abnormal_log table) by its id.",
      "parameters": [
        {
          "name": "id",
          "description": "Unique identifier of the abnormal log to delete",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": null,
      "authorization": null,
      "path": "/attendance/stats/abnormalLogs/{id}",
      "method": "delete"
    },
    {
      "specification": "Retrieves a filtered and paginated list of access logs for the attendance management system. This operation performs a search/filter on attendance_access_log, which stores all access events (logins, dashboard views, etc.) for audit and compliance.",
      "description": "This API allows authorized users (typically administrators or auditors) to search and retrieve a paginated list of access log entries, each representing a single access event to the attendance system. Filters can include user role (teacher, student, admin, parent), date intervals, classroom, IP address, and other log attributes. The attendance_access_log table records who accessed what, from where (user agent, IP), and when. This is critical for operational monitoring, security audits, and legal compliance. Result pagination, sorting, and advanced search are supported for efficient log review. Related endpoints include access log detail/retrieval, creation for system actions, update, and deletion. The list retrieval is a patch since complex search criteria can be submitted in the request body.",
      "summary": "Search and paginate attendance access logs (attendance_access_log table).",
      "parameters": [],
      "requestBody": {
        "description": "Filter/search parameters for access logs, including pagination, date range, actor info, and search keywords.",
        "typeName": "IAttendanceAccessLog.IRequest"
      },
      "responseBody": {
        "description": "Paginated list and summary info of matching access logs.",
        "typeName": "IPageIAttendanceAccessLog"
      },
      "authorization": null,
      "path": "/attendance/accessLogs",
      "method": "patch"
    },
    {
      "specification": "Retrieves a single access log entry from attendance_access_log by unique id. This operation supports detailed review of a particular access event needed for security, compliance, or audit purposes.",
      "description": "This API returns all the details of a single access log event (login, page/dashboard access, etc.) given its unique log id. Entries in attendance_access_log provide a permanent audit trail of access actions, including the user (teacher, admin, student, parent), affected classroom, user agent, ip address, and exact timestamp for the event. This endpoint is used in investigations, compliance review, and granular audit reporting. The endpoint is designed for read-only retrieval of existing logs and does not permit modification or deletion.",
      "summary": "Retrieve single attendance access log detail by id (attendance_access_log table).",
      "parameters": [
        {
          "name": "id",
          "description": "Unique id of the access log entry to retrieve",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Detailed information for a single access log event.",
        "typeName": "IAttendanceAccessLog"
      },
      "authorization": null,
      "path": "/attendance/accessLogs/{id}",
      "method": "get"
    },
    {
      "specification": "Creates a new access log event in attendance_access_log. This operation records a system or user access event for permanent audit and compliance.",
      "description": "This endpoint allows the attendance system (or admins/tools) to create an explicit access log event. Typical use cases include logging dashboard accesses, sensitive data views, or user/session activities in compliance with audit policy. Required parameters include user/account (teacher_id, student_id, etc.), classroom (if applicable), ip address, user agent, device id, and exact event timestamp. Audit requirements mandate that all accesses of sensitive data or system pages be logged and immutable. This API creates a single record in attendance_access_log and returns confirmation or error as appropriate. The table is append-only for audit integrity. Only system actors or applications with auditor/admin rights should have write access. Related endpoints: patch for search, get for detail, put for update, delete for removal.",
      "summary": "Insert a new access log event (attendance_access_log table).",
      "parameters": [],
      "requestBody": {
        "description": "Information for the new access log event (user/session, context, device info).",
        "typeName": "IAttendanceAccessLog.ICreate"
      },
      "responseBody": {
        "description": "The resulting access log entry after creation.",
        "typeName": "IAttendanceAccessLog"
      },
      "authorization": null,
      "path": "/attendance/accessLogs",
      "method": "post"
    },
    {
      "specification": "Updates an existing access log record in attendance_access_log specified by its id. Used for correcting metadata or updating device/session info post-event (when policy allows).",
      "description": "This API allows authorized actors (typically the system or privileged administrators) to update an existing access log event by id. Usage should be minimal due to audit record integrity, but possible in limited situations such as device info corrections, IP updates, or adding user agent data. All updates must themselves be logged for audit trail purposes. Endpoint modifies atomic attributes for the selected log record. If the record does not exist, a not-found error is returned. Only system or audit actors can update. Related endpoints: patch for search, get for detail, post for creation, delete for removal.",
      "summary": "Update a specific access log event's details (attendance_access_log table).",
      "parameters": [
        {
          "name": "id",
          "description": "Unique identifier of the access log entry to update.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Fields and values to update for the access log entry.",
        "typeName": "IAttendanceAccessLog.IUpdate"
      },
      "responseBody": {
        "description": "Updated access log entry after changes applied.",
        "typeName": "IAttendanceAccessLog"
      },
      "authorization": null,
      "path": "/attendance/accessLogs/{id}",
      "method": "put"
    },
    {
      "specification": "Deletes an access log record from attendance_access_log by its id. Used to remove test, obsolete, or redacted log entries as per retention policy and audit guidelines.",
      "description": "This endpoint deletes a specific access log event. The requestor must have appropriate authority (auditor, compliance admin). Used rarely, as logs are generally append-only for legal compliance, but necessary for cases such as data subject requests, retention expiry, or redaction. Deletion is permanent and should itself be logged. Related endpoints: patch for search, get for detail, post for creation, put for update.",
      "summary": "Delete a specific access log record (attendance_access_log table) by id.",
      "parameters": [
        {
          "name": "id",
          "description": "Unique identifier for the access log entry to delete.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": null,
      "authorization": null,
      "path": "/attendance/accessLogs/{id}",
      "method": "delete"
    },
    {
      "specification": "Retrieves a filtered and paginated list of audit logs from attendance_audit_log. Supports deep search over all audit events/critical actions for admin review, compliance, and incident response.",
      "description": "This API enables administrators and auditors to retrieve and paginate through critical action logs (audit trail) as recorded in attendance_audit_log. Filters include event types (policy changes, export, edits), user/role actors, date intervals, classroom, success/failure, and more. This operation fulfills compliance, system monitoring, and post-incident review requirements. Each entry details the actor (teacher, student, parent, admin), the action, affected entity, result, timestamps, and other audit context. Paginated results support bulk review or export. Related endpoints: get for detail, post for creating log entries, put for updating (where allowed), delete.",
      "summary": "Filter and paginate audit logs (attendance_audit_log table).",
      "parameters": [],
      "requestBody": {
        "description": "Advanced search/filter criteria for audit logs (event type, actor, date range, etc.).",
        "typeName": "IAttendanceAuditLog.IRequest"
      },
      "responseBody": {
        "description": "Paginated result set of matching audit log entries.",
        "typeName": "IPageIAttendanceAuditLog"
      },
      "authorization": null,
      "path": "/attendance/auditLogs",
      "method": "patch"
    },
    {
      "specification": "Retrieves the details of a single audit log record by id from attendance_audit_log. Used for fine-grained review of an audit action or event.",
      "description": "This API returns a single audit log event (such as a critical policy change, export action, user privilege alteration, etc.) by its unique log id. Each audit entry in attendance_audit_log includes action type, actor, classroom context, action details, success/failure, and timestamps. This endpoint supports investigations, compliance review, and detailed auditing in the admin dashboard or by command log. Related endpoints include patch for searching/filtering, post for log creation, put for record corrections, and delete for removal (rarely allowed for audit integrity).",
      "summary": "Get single audit log event detail by id (attendance_audit_log table).",
      "parameters": [
        {
          "name": "id",
          "description": "Unique identifier for the audit log entry to retrieve.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": {
        "description": "Detailed audit log entry data.",
        "typeName": "IAttendanceAuditLog"
      },
      "authorization": null,
      "path": "/attendance/auditLogs/{id}",
      "method": "get"
    },
    {
      "specification": "Creates a new audit log event in attendance_audit_log. For logging critical actions (policy changes, data access, system exports, etc.) for compliance and incident review.",
      "description": "This endpoint inserts a new critical action/event in the audit log table. Used by the system and privileged actors to record essential/critical changes or accesses for forensic and legal compliance. Required inputs: actor (teacher, student, parent, admin), event type, entity/context, details, outcome, timestamps. Records are append-only—there is no support for update/delete for most users after creation (except very limited admin/rectification workflows). Related endpoints: patch for search, get for single, put for limited updates.",
      "summary": "Insert new audit log record for critical system action (attendance_audit_log table).",
      "parameters": [],
      "requestBody": {
        "description": "Details for the new audit log entry (actor, event, context, etc.).",
        "typeName": "IAttendanceAuditLog.ICreate"
      },
      "responseBody": {
        "description": "The new audit log entry as stored.",
        "typeName": "IAttendanceAuditLog"
      },
      "authorization": null,
      "path": "/attendance/auditLogs",
      "method": "post"
    },
    {
      "specification": "Updates an existing audit log event in attendance_audit_log by id. Used in rare cases to correct or annotate audit records for compliance, audit closure, or error correction. All updates must themselves be auditable.",
      "description": "This API updates the details of an existing audit log entry, such as error correction, clarifying action details, or annotating results. Action is reserved for system-level or privileged/lead compliance actors. Only atomic properties are updatable; action must itself be logged. Editing audit logs is rare and regulated. If record does not exist, a not-found error is returned. Related endpoints: patch for search, get for detail, post for creation, delete for removal (rarely allowed).",
      "summary": "Update specific audit log entry by id (attendance_audit_log table).",
      "parameters": [
        {
          "name": "id",
          "description": "Unique id of audit log record to edit.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "description": "Fields to update in the audit log record.",
        "typeName": "IAttendanceAuditLog.IUpdate"
      },
      "responseBody": {
        "description": "The updated audit log entry after modification.",
        "typeName": "IAttendanceAuditLog"
      },
      "authorization": null,
      "path": "/attendance/auditLogs/{id}",
      "method": "put"
    },
    {
      "specification": "Deletes a single audit log entry by id from attendance_audit_log. This action is highly restricted and only available for legal compliance or record rectification, as audit logs are otherwise append-only.",
      "description": "This API permanently deletes an audit log record. Only system administrators or legal compliance officials may use this endpoint, and the deletion is itself audited elsewhere. Typical scenarios: redaction upon valid legal request, expiration under retention policy, or correction of mislogged records. Related endpoints: patch for search, get for detail, post for creation, put for limited edits.",
      "summary": "Delete specific audit log entry by id (attendance_audit_log table).",
      "parameters": [
        {
          "name": "id",
          "description": "Unique id for the audit log record to delete.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": null,
      "responseBody": null,
      "authorization": null,
      "path": "/attendance/auditLogs/{id}",
      "method": "delete"
    }
  ],
  "components": {
    "schemas": {
      "IAttendanceTeacher.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "교사 고유 식별자(UUID). attendance_teacher.id의 PK. 모든 참조에서 사용되는 anchor 값."
          },
          "name": {
            "type": "string",
            "description": "교사 이름. atomic, 원자적 실명 필드로 검색 대시보드, 알림 등에서 주로 사용."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "교사 이메일(로그인/알림/연락용). 유니크 제약 필드로 리스트/검색 최상위 기준."
          },
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "교사의 소속 학교ID(UUID, FK). attendance_school.id 참조."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "계정 생성(등록)일시. 관리 대시보드, 감사, 목록에서 필수 표기."
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "school_id",
          "created_at"
        ],
        "description": "교사 리스트 뷰/검색 결과 등에 사용하는 요약형 DTO입니다.\nAtomic 필드(이름, 이메일, 소속 학교, 등록일 등)만 포함하며, 상세 보기에서는 IAttendanceTeacher를 사용합니다.\n주로 PATCH /attendance/teachers, 리스트 응답 등에서 data[] 엔트리로 사용됩니다."
      },
      "IAttendanceStudent.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "학생 고유 식별자(UUID, PK). attendance_student.id"
          },
          "name": {
            "type": "string",
            "description": "학생 실명. atomic, 부분/전체 검색용 최상위 필드."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "소속 학급(반) UUID. attendance_classroom.id FK."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "description": "학생의 학부모(보호자) UUID(FK). 연결 없으면 null. attendance_parent.id"
          },
          "gender": {
            "oneOf": [
              {
                "const": "male",
                "description": "학생 성별. 남자 male, 여자 female만 허용."
              },
              {
                "const": "female",
                "description": "학생 성별. 남자 male, 여자 female만 허용."
              }
            ],
            "description": "학생 성별. enum형('male'/'female'), 정책상 두 값만 허용."
          }
        },
        "required": [
          "id",
          "name",
          "classroom_id",
          "gender"
        ],
        "description": "학생 목록/검색 등에서 row summary로 사용하는 간결한 요약 정보 타입입니다.\n기본 인적 정보 및 연결된 반/학부모의 FK만 표시하며, 상세 정보나 통계를 원할 때는 IAttendanceStudent로 조회합니다."
      },
      "IAttendanceParent.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "학부모 고유 식별자(UUID, PK). attendance_parent.id"
          },
          "name": {
            "type": "string",
            "description": "학부모/보호자 이름. atomic 필드, 요약뷰용."
          },
          "email": {
            "type": "string",
            "description": "이메일(로그인/알림, 유니크), 요약리스트 표기 필드."
          },
          "phone": {
            "type": "string",
            "description": "핸드폰(알림/연락처), 부모 리스트뷰 표기 필드."
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "phone"
        ],
        "description": "attendance_parent 요약(리스트뷰/검색뷰) row 오브젝트 타입입니다. 상세정보/자녀 등은 미포함, 최소 atomic 필드만 포함합니다."
      },
      "IAttendanceTeacher.IRequest": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "검색하려는 교사의 소속 학교 식별자(UUID). 해당 학교에 소속된 교사만 조회할 때 사용합니다.\n\nPrisma attendance_teacher.school_id 칼럼 주석 기반: '학교(참조)' - 엄격한 3NF, 필수, attendance_school 테이블의 FK.\n\n일반적으로 관리자/교장/상위 감독자 등은 여러 학교간 조회를 허용할 수 있으며, 필수값 아님."
          },
          "name": {
            "type": "string",
            "description": "교사 이름을 검색할 때 사용하는 텍스트 문자열. 부분일치(Like) 검색 지원.\n\nPrisma attendance_teacher.name 칼럼 주석 기반: '교사 이름' - 원자적, 규칙대로 저장.\n\n목적: 대시보드/리스트에서 이름 기준으로 교사를 검색하는 용도."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "교사 이메일을 검색/필터링할 때 사용하는 필드입니다. 유니크 제약, 부분검색 가능.\n\nPrisma attendance_teacher.email 칼럼 주석 기반: '이메일' - 고유, 연락처."
          },
          "page": {
            "type": "integer",
            "description": "페이지 번호 (기본값: 1). 페이징 기능을 위한 파라미터.\n\nIPage.IRequest 참조. 1부터 시작, 음수 불가."
          },
          "limit": {
            "type": "integer",
            "description": "페이지 당 반환 레코드 수 (예: 50). 페이징 기능을 위한 파라미터.\n\nIPage.IRequest 참조. 일반적으로 100 이하 권장."
          },
          "sort_by": {
            "oneOf": [
              {
                "const": "created_at",
                "description": "정렬 기준이 되는 교사 테이블 필드. (예: created_at=생성일, updated_at=수정일)\n\n테이블 실 컬럼 기준으로만 지정 가능. 미지정시 기본값은 created_at."
              },
              {
                "const": "updated_at",
                "description": "정렬 기준이 되는 교사 테이블 필드. (예: created_at=생성일, updated_at=수정일)\n\n테이블 실 컬럼 기준으로만 지정 가능. 미지정시 기본값은 created_at."
              }
            ],
            "description": "정렬 기준이 되는 교사 테이블 필드. (예: created_at=생성일, updated_at=수정일)\n\n테이블 실 컬럼 기준으로만 지정 가능. 미지정시 기본값은 created_at."
          },
          "sort_direction": {
            "oneOf": [
              {
                "const": "asc",
                "description": "정렬 방향(asc=오름차순, desc=내림차순). 기본값은 desc.\n\n정렬 필드(sort_by)와 합쳐서 사용."
              },
              {
                "const": "desc",
                "description": "정렬 방향(asc=오름차순, desc=내림차순). 기본값은 desc.\n\n정렬 필드(sort_by)와 합쳐서 사용."
              }
            ],
            "description": "정렬 방향(asc=오름차순, desc=내림차순). 기본값은 desc.\n\n정렬 필드(sort_by)와 합쳐서 사용."
          }
        },
        "required": [],
        "description": "교사 목록/검색에 사용되는 쿼리 및 페이징, 정렬, 필터 옵션 객체입니다.\n\nPrisma attendance_teacher 및 관리대시보드 기획서/요구서에서 리스트 검색에 사용되는 주요 파라미터들을 모두 포함합니다. 각 필드는 atomic하며, 고유 식별자, 텍스트 부분 검색, 페이징(Page/Limit), 정렬(sort_by, sort_direction) 등 UI와 API의 표준 검색 기능 명세와 정확히 일치해야 합니다.\n\n이 타입은 일반적으로 PATCH /attendance/teachers 등에서 requestBody로 사용됩니다."
      },
      "IPageAttendanceTeacher": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceTeacher.ISummary"
            },
            "description": "해당 페이지에 대응하는 교사(요약) 객체들의 배열. 각 원소는 ISummary(필수 주요 필드만)를 참조."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "교사(Teacher) 목록 및 페이지네이션이 결합된 표준 리스트 응답 DTO 객체입니다.\n\nIPage<T> 인터페이스 패턴을 따르며, pagination은 현재페이지/전체갯수 등, data는 IAttendanceTeacher.ISummary[]로 각 레코드의 요약 내용만 포함합니다.\n\nPrisma attendance_teacher 엔티티의 검색/리스트/관리 페이지 등에서 반환 표준을 제공합니다."
      },
      "IAttendanceTeacher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "고유 교사 식별자(UUID). attendance_teacher.id 의 PK. 시스템 전반의 FK, 감사로그의 anchor."
          },
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "소속 학교 식별자. attendance_school.id 를 참조하는 FK. 3NF에 따라 school 필드 상호참조."
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "해당 교사의 인증계정 고유 ID (attendance_auth_account.id). 역할별 분리된 인증 모델/연동 필드."
          },
          "name": {
            "type": "string",
            "description": "교사 이름 (최대 길이/실명 확인 등은 UI/비지니스 규칙에 따름)."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "교사 이메일(고유/연락/계정용). 유니크 제약 필수."
          },
          "phone": {
            "type": "string",
            "description": "교사 전화번호. SMS/비상연락 목적."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "생성일시(ISO8601). 레코드 최초 등록 및 감사로그 추적용."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "수정일시(ISO8601). 정보 업데이트/감사 기록용."
          }
        },
        "required": [
          "id",
          "school_id",
          "auth_account_id",
          "name",
          "email",
          "phone",
          "created_at",
          "updated_at"
        ],
        "description": "교사(Teacher) 엔터티 전체 atomic 필드 DTO. attendance_teacher 테이블의 모든 주요 컬럼을 포함하며, 인증/조직/이력/식별자/연락 정보를 모두 명확하게 객체화합니다.\n\n시스템의 역할 기반권한 체계, 감사, 대시보드에서 사용자별 drill-down 정보 활용시 사용. 관련된 모든 API 응답/데이터 오브젝트의 근간."
      },
      "IAttendanceTeacher.ICreate": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "등록할 교사의 소속 학교 식별자 (attendance_school.id FK). 필수."
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "연동할 인증 계정의 고유ID (attendance_auth_account.id). 필수."
          },
          "name": {
            "type": "string",
            "description": "교사 이름. 필수."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "교사 이메일(고유, 필수)."
          },
          "phone": {
            "type": "string",
            "description": "교사 전화번호(필수)."
          }
        },
        "required": [
          "school_id",
          "auth_account_id",
          "name",
          "email",
          "phone"
        ],
        "description": "신규 교사(Teacher) 엔터티 생성요청 DTO. attendance_teacher 테이블의 PK/id는 응답 전용이며, 생성 시에는 school_id, auth_account_id, name, email, phone 을 반드시 제공해야 함.\n\n중복 이메일, 잘못된 참조(FK)에 대한 서버단 validation이 필요합니다. 모든 필드는 atomic, 조합 없이 독립적으로 의미를 가져야 하며, 생성 후 반환되는 결과는 IAttendanceTeacher 엔티티 전체와 일치합니다."
      },
      "IAttendanceTeacher.IUpdate": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "업데이트 대상 교사의 소속 학교ID (attendance_school.id)."
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "수정/연결 대상 인증계정 ID (attendance_auth_account.id)."
          },
          "name": {
            "type": "string",
            "description": "수정할 교사 이름."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "수정할 이메일(고유)."
          },
          "phone": {
            "type": "string",
            "description": "수정할 전화번호."
          }
        },
        "required": [
          "school_id",
          "auth_account_id",
          "name",
          "email",
          "phone"
        ],
        "description": "교사 엔터티 전체 업데이트(대체/PUT) 요청 DTO. attendance_teacher의 주요 필드를 모두 전달해야 하며 보안/조직/역할 정책상 무결성 규칙 및 유니크/제약조건이 서버단 validation필수입니다. 모든 필드는 atomic하게 단일 값만 취급되어야 하며, 부분 수정 Patch가 아니라, 전체 교사 정보를 덮어쓰는 사용(Full Replacement)입니다."
      },
      "IAttendanceStudent.IRequest": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "검색 대상 학생의 소속 학교 식별자(UUID, FK)."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "검색 대상 학생의 소속 반(PK)."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "description": "검색 대상 학생의 보호자(부모) 식별자(UUID, FK to attendance_parent.id)"
          },
          "name": {
            "type": "string",
            "description": "검색용 학생이름(부분/정확 검색)."
          },
          "phone": {
            "type": "string",
            "description": "학생연락처(일부 API 또는 실무용 특화, 필요에 따라 필드 추가)."
          },
          "page": {
            "type": "integer",
            "description": "페이지 네이션 파라미터."
          },
          "limit": {
            "type": "integer",
            "description": "페이지당 아이템 수."
          },
          "sort_by": {
            "oneOf": [
              {
                "const": "created_at",
                "description": "정렬기준 컬럼명."
              },
              {
                "const": "updated_at",
                "description": "정렬기준 컬럼명."
              }
            ],
            "description": "정렬기준 컬럼명."
          },
          "sort_direction": {
            "oneOf": [
              {
                "const": "asc",
                "description": "정렬 방향."
              },
              {
                "const": "desc",
                "description": "정렬 방향."
              }
            ],
            "description": "정렬 방향."
          }
        },
        "required": [],
        "description": "학생(AttendanceStudent) 목록 요청의 페이징, 검색, 정렬/필터 요청 DTO. attendance_student 테이블의 주요 FK/필드명에 정확히 일치하도록 설계됨. 일반적으로 PATCH /attendance/students 등에서 사용."
      },
      "IPageAttendanceStudent": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceStudent.ISummary"
            },
            "description": "해당 페이지의 학생(요약) 정보 목록. IAttendanceStudent.ISummary 배열."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "학생(AttendanceStudent) 목록의 페이징+데이터 표준 응답 DTO. pagination은 IPage.IPagination 표준 타입, data는 요약학생배열."
      },
      "IAttendanceStudent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "학생 고유 식별자(UUID, PK)."
          },
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "소속 학교ID(FK)."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "소속 반ID(FK)."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "description": "부모(보호자)ID(FK, nullable)."
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "학생의 인증 계정ID(FK)."
          },
          "name": {
            "type": "string",
            "description": "학생 실명."
          },
          "gender": {
            "oneOf": [
              {
                "const": "male",
                "description": "학생 성별. 'male', 'female' 중 하나."
              },
              {
                "const": "female",
                "description": "학생 성별. 'male', 'female' 중 하나."
              }
            ],
            "description": "학생 성별. 'male', 'female' 중 하나."
          },
          "birthdate": {
            "type": "string",
            "format": "date-time",
            "description": "학생 생년월일(ISO8601)."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "등록일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "수정일시."
          }
        },
        "required": [
          "id",
          "school_id",
          "classroom_id",
          "auth_account_id",
          "name",
          "gender",
          "birthdate",
          "created_at",
          "updated_at"
        ],
        "description": "학생(AttendanceStudent) 엔티티의 atomic 필드 DTO. Prisma attendance_student 테이블에 맞춘 완전형 상세 정보."
      },
      "IAttendanceStudent.ICreate": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "학생 소속 학교 ID(FK)."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "소속 반 ID(FK)."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "description": "학생 보호자(부모) ID(FK, nullable)."
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "연동 인증계정ID(FK)."
          },
          "name": {
            "type": "string",
            "description": "학생 실명(필수)."
          },
          "gender": {
            "oneOf": [
              {
                "const": "male",
                "description": "학생 성별(남자:male, 여자:female, 필수)."
              },
              {
                "const": "female",
                "description": "학생 성별(남자:male, 여자:female, 필수)."
              }
            ],
            "description": "학생 성별(남자:male, 여자:female, 필수)."
          },
          "birthdate": {
            "type": "string",
            "format": "date-time",
            "description": "생년월일(필수, ISO8601)."
          }
        },
        "required": [
          "school_id",
          "classroom_id",
          "auth_account_id",
          "name",
          "gender",
          "birthdate"
        ],
        "description": "신규 학생(AttendanceStudent) 등록용 DTO. atomic 필드만 기술(모든 값의 중복, FK 제약 validation 필요)."
      },
      "IAttendanceStudent.IUpdate": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "업데이트할 학생 소속 학교 ID(FK)."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "수정대상 반 ID(FK)."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "description": "수정대상 부모/보호자 ID(FK, nullable)."
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "수정/연동 인증계정ID(FK)."
          },
          "name": {
            "type": "string",
            "description": "수정할 학생 실명."
          },
          "gender": {
            "oneOf": [
              {
                "const": "male",
                "description": "성별(수정)."
              },
              {
                "const": "female",
                "description": "성별(수정)."
              }
            ],
            "description": "성별(수정)."
          },
          "birthdate": {
            "type": "string",
            "format": "date-time",
            "description": "생년월일."
          }
        },
        "required": [
          "school_id",
          "classroom_id",
          "auth_account_id",
          "name",
          "gender",
          "birthdate"
        ],
        "description": "학생(AttendanceStudent) 정보 업데이트(전체대체/PUT)용 DTO. 전체필수요소 필드로 atomic, 중복/제약/정합성 검사 필요."
      },
      "IAttendanceParent.IRequest": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "검색 대상 부모가 소속된 학교 ID(FK to attendance_school.id)."
          },
          "name": {
            "type": "string",
            "description": "검색용 부모이름(부분/정확 검색)."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "검색용 이메일."
          },
          "phone": {
            "type": "string",
            "description": "검색용 전화번호."
          },
          "child_id": {
            "type": "string",
            "format": "uuid",
            "description": "해당 부모의 자녀(학생) ID기준 검색(학생-부모 연결성 검증 지원)."
          },
          "page": {
            "type": "integer",
            "description": "페이지네이션 파라미터."
          },
          "limit": {
            "type": "integer",
            "description": "페이지당 건수."
          },
          "sort_by": {
            "oneOf": [
              {
                "const": "created_at",
                "description": "정렬기준 필드."
              },
              {
                "const": "updated_at",
                "description": "정렬기준 필드."
              }
            ],
            "description": "정렬기준 필드."
          },
          "sort_direction": {
            "oneOf": [
              {
                "const": "asc",
                "description": "정렬방향."
              },
              {
                "const": "desc",
                "description": "정렬방향."
              }
            ],
            "description": "정렬방향."
          }
        },
        "required": [],
        "description": "부모(Parent/Guardian) 목록 쿼리/검색 요청DTO 필드 집합. 전체 필드는 atomic/3NF/Validation대로 구성. 일반적으로 PATCH /attendance/parents 등에서 사용."
      },
      "IPageAttendanceParent": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceParent.ISummary"
            },
            "description": "해당 페이지 부모(요약) 객체 목록. ISummary 타입 배열."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "부모(Guardian/Parent) 목록 페이지네이션 구조(표준 IPage<T> 패턴). pagination+data 배열 구조 반환."
      },
      "IAttendanceParent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "학부모의 고유 식별자입니다.\n\nPrisma attendance_parent 테이블의 id 컬럼으로, 모든 자식, 알림 채널, 접근 로그 등 다양한 참조에서 사용되는 PK입니다. 이 필드는 시스템 전반에서 보호자 관련 조회, 연동, 감사 이벤트 추적 등에 참조되며, UUID 형식을 강제합니다."
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "인증 계정(auth_account) FK입니다. 이 값은 소셜/로컬 로그인 연결 및 보호자의 로그인 인증 식별자 매핑에 사용됩니다.\n\nPrisma attendance_parent.auth_account_id는 반드시 attendance_auth_account와 1:1대응되는 값을 가지며, 유니크 제약이 있습니다."
          },
          "name": {
            "type": "string",
            "description": "학부모 이름입니다. 개인정보 보호정책에 따라 반드시 atomic(개별 필드)으로 관리되며, 실제 출결 알림, 시스템 접근 로그 등 주요 데이터의 표시에 활용됩니다.\n\n실무 사례에서는 입력값의 정합성(2-50자 사이, 한글/영문 지원) 규칙이 보통 적용됩니다."
          },
          "email": {
            "type": "string",
            "description": "학부모의 이메일(알림 및 인증)입니다. Prisma 테이블에서 유니크 제약을 가지며, 알림 수신, 계정 인증, 비밀번호 찾기 등에서 사용됩니다."
          },
          "phone": {
            "type": "string",
            "description": "학부모의 휴대폰 번호입니다. 문자 알림, 2차 인증, 연락처 검증 용도로만 atomic하게 저장됩니다."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "회원 최초 생성일시(ISO8601, UTC)로, 감사 및 가입 내역 추적에 사용됩니다."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "회원정보 최근 수정일(ISO8601, UTC)로, 개인정보 변경 이력 감사 및 적시성 검증에 사용됩니다."
          }
        },
        "required": [
          "id",
          "auth_account_id",
          "name",
          "email",
          "phone",
          "created_at",
          "updated_at"
        ],
        "description": "attendance_parent 엔터티(학부모/보호자)의 메인 스키마입니다.\n\n- Prisma 모델의 모든 컬럼(id, auth_account_id, name, email, phone, created_at, updated_at)을 포함하며,\n- atomic(비집계, 비연산) 필드만 존재(학부모의 출결, 자녀매핑 등 외래 데이터는 참조로만 연결).\n- 개인정보 보호 및 감사 정책상 모든 접근 이력에 활용됩니다.\n- 본 엔티티는 학부모 서비스의 기본 회원 엔티티로 사용됩니다."
      },
      "IAttendanceParent.ICreate": {
        "type": "object",
        "properties": {
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "생성 시 필수. 인증계정(소셜/로컬) 고유 식별자 UUID입니다. Prisma attendance_auth_account와 1:1 참조합니다."
          },
          "name": {
            "type": "string",
            "description": "신규 학부모의 실명입니다. 실제 알림, 서비스 제공에 필수적으로 활용됩니다."
          },
          "email": {
            "type": "string",
            "description": "회원의 이메일 주소 입니다. 유니크(중복x) 제약을 준수합니다."
          },
          "phone": {
            "type": "string",
            "description": "회원의 연락처(핸드폰)입니다. 문자 알림 및 본인연락에 사용됩니다."
          }
        },
        "required": [
          "auth_account_id",
          "name",
          "email",
          "phone"
        ],
        "description": "신규 학부모(보호자) 회원 생성 요청 오브젝트. 시스템 내 학부모 등록시 사용.\n\n- 모든 필드는 atomic/필수이며, 참조 컬럼(auth_account_id) UUID.\n- 개인정보 유니크 제약(이메일 중복 불가) 반드시 준수.\n- Prisma attendance_parent 테이블 생성 요구조건 일치."
      },
      "IAttendanceParent.IUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "수정할 실명(이름)."
          },
          "email": {
            "type": "string",
            "description": "수정할 이메일(고유값)"
          },
          "phone": {
            "type": "string",
            "description": "수정할 휴대폰번호(연락처)"
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "수정시 연결 인증 계정(소셜/로컬) UUID."
          }
        },
        "description": "attendance_parent(보호자)의 정보 수정 요청 오브젝트\n\n- 일부/전체 컬럼(이름/email/phone/auth_account_id) 값 변경용\n- 모든 값은 atomic\n- Prisma 유니크 제약, FK조건은 반드시 준수.\n- 수정 대상 PK(id)는 path/route param에서 입력.",
        "required": []
      },
      "IAttendanceAdmin.IRequest": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "조회/검색 대상 소속 학교 UUID(PK). Prisma attendance_admin.school_id 참조.\n\n특정 학교 소속 관리자만 추출시 사용. 상위기관/최상위 관리자는 null 또는 전체 가능."
          },
          "name": {
            "type": "string",
            "description": "검색 필드 - 관리자 이름. 부분검색 지원."
          },
          "email": {
            "type": "string",
            "description": "검색 필드 - 관리자 이메일(로그인/연락용, 부분검색 허용)."
          },
          "created_after": {
            "type": "string",
            "format": "date-time",
            "description": "조회 대상 가입일(생성일) 시작(이후) ISO8601 datetime."
          },
          "created_before": {
            "type": "string",
            "format": "date-time",
            "description": "조회 대상 가입일(생성일) 종료(이전) ISO8601 datetime."
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "description": "1페이지 결과 개수 제한(기본 50, 1~1000사이)"
          }
        },
        "description": "attendance_admin 관리자 검색/목록 조회조건 오브젝트\n\n- school_id: 소속 필터\n- name/email: 텍스트 검색\n- created_after/before: 가입일 기간\n- limit: 페이지 결과 수 설정(기본 50)",
        "required": []
      },
      "IPageIAttendanceAdmin": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceAdmin"
            }
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이징된 관리자(Admin) 리스트 반환 오브젝트\n\n- pagination: 페이지 메타 정보(현재/합계/페이지수 등)\n- data: 관리자(Admin) 요약 배열\n\n반환 구조 예시(프론트엔드 및 API 정의 표준)"
      },
      "IAttendanceAdmin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "관리자 엔티티 고유 식별자(UUID)."
          },
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "관리자 소속 학교 PK(UUID). 상위관리자(교육청 등)일 경우 null 허용."
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "연결 인증계정(소셜/로컬) UUID. attendance_auth_account의 FK."
          },
          "name": {
            "type": "string",
            "description": "관리자 성명(실명). atomic, 개인정보 보호 기준에 따라 별도 관리됨."
          },
          "email": {
            "type": "string",
            "description": "관리자 이메일(연락/로그인용, 유니크 조건 적용)."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "최초 생성일시 (가입일) ISO8601 datetime."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "수정/갱신일시 ISO8601 datetime."
          }
        },
        "required": [
          "id",
          "auth_account_id",
          "name",
          "email",
          "created_at",
          "updated_at"
        ],
        "description": "attendance_admin(관리자/감독관) 메인 오브젝트\n\n- 모든 atomic 정보(id/school_id/auth_account_id/name/email/created_at/updated_at) 제공\n- school_id는 null 가능(최상위 관리자)\n- 참조 컬럼 등 Prisma 테이블 description 정확히 반영."
      },
      "IAttendanceAdmin.ICreate": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "신규 관리자 소속 학교 UUID(PK). null 가능(최상위 관리자)"
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "연결 인증계정(UUID, attendance_auth_account FK)"
          },
          "name": {
            "type": "string",
            "description": "신규 관리자 실명"
          },
          "email": {
            "type": "string",
            "description": "신규 관리자 이메일(유니크, 로그인/연락용)"
          }
        },
        "required": [
          "auth_account_id",
          "name",
          "email"
        ],
        "description": "attendance_admin 신규 등록 요청 오브젝트\n\n- school_id: 소속학교(최상위권한시 null)\n- auth_account_id: 인증계정\n- name/email 필수\n- email중복 등 유니크 조건 반드시 체크"
      },
      "IAttendanceAdmin.IUpdate": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "설정 변경시 소속 학교 UUID"
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "연결된 인증 계정 UUID"
          },
          "name": {
            "type": "string",
            "description": "실명 수정 필드"
          },
          "email": {
            "type": "string",
            "description": "이메일(유니크, 로그인)"
          }
        },
        "description": "attendance_admin 정보 수정 요청 오브젝트\n\n- school_id, auth_account_id, name, email 중 일부/전체 수정\n- 유니크, FK제약 등 Prisma description 적용",
        "required": []
      },
      "IAttendanceSchool.IRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "학교명 검색/필터 값"
          },
          "address": {
            "type": "string",
            "description": "학교 주소 검색/필터"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "description": "1페이지 결과 수(기본 50/최대 1000)"
          }
        },
        "description": "학교(attendance_school) 검색/조회 조건 오브젝트\n\n- name/address: 검색-필터 지원\n- limit: 결과값 개수 제한(기본50)",
        "required": []
      },
      "IPageIAttendanceSchool": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceSchool"
            }
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "학교 리스트(검색/페이징) 반환 오브젝트\n\n- pagination: 페이지정보\n- data: IAttendanceSchool 요약 오브젝트 배열"
      },
      "IAttendanceSchool": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "학교 고유 식별자(UUID). entire attendance 시스템 내 anchor PK로 활용됨."
          },
          "name": {
            "type": "string",
            "description": "학교 이름(검색, 표기, 관리에서 원본명 그대로 사용)"
          },
          "address": {
            "type": "string",
            "description": "학교 전체주소(지번/도로명 등 전체 주소 필요)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "최초 생성일(가입/등록일시), ISO8601 형식"
          }
        },
        "required": [
          "id",
          "name",
          "address",
          "created_at"
        ],
        "description": "attendance_school 엔티티(학교) 메인 스키마\n\n- 모든 atomic 컬럼(id, name, address, created_at) 명확히 구현\n- 참조 관계 없이 anchor/레이블용 테이블"
      },
      "IAttendanceSchool.ICreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "신규 등록 학교명(유니크, 필수)"
          },
          "address": {
            "type": "string",
            "description": "학교 주소정보(도로명+지번 등) atomic 필드"
          }
        },
        "required": [
          "name",
          "address"
        ],
        "description": "학교 신규 등록(생성) 요청 오브젝트\n\n- name: 학교명(중복X, 필수)\n- address: 주소(필수)"
      },
      "IPage.IPagination": {
        "type": "object",
        "properties": {
          "current": {
            "type": "integer",
            "description": "현재 페이지 번호 (1부터 시작)."
          },
          "limit": {
            "type": "integer",
            "description": "페이지 당 데이터 갯수(최소 1)"
          },
          "records": {
            "type": "integer",
            "description": "전체 레코드 개수"
          },
          "pages": {
            "type": "integer",
            "description": "전체 페이지 수 (총 레코드수 / 페이지당 개수, 올림)"
          }
        },
        "required": [
          "current",
          "limit",
          "records",
          "pages"
        ],
        "description": "페이지네이션 메타데이터. 현재 페이지/페이지당 데이터수/전체레코드수/총페이지수 등 포함."
      },
      "IAttendanceSchool.IUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "학교의 이름입니다. 이 값은 attendance_school 테이블의 name 컬럼과 매핑되며, 학교를 식별하고 검색할 때 활용됩니다. 반드시 원자적이고 의미 있는 이름이어야 하며, 동일 이름과 주소의 중복을 피해야 합니다.\n\n- 학교명 변경 시 교육청/관리자의 확인 절차가 필요할 수 있습니다.\n- 예: '서울중앙초등학교', '부산국제고등학교' 등"
          },
          "address": {
            "type": "string",
            "description": "학교의 주소입니다. attendance_school 테이블의 address 컬럼에 매핑되며, 학교의 물리적 위치를 명확하게 기술하는 문자열입니다.\n\n- 상세, 시/군/구 단위까지 정확히 입력되어야 하며, 데이터 중복·주소오류를 방지합니다.\n- 예: '서울특별시 중구 서소문로 123', '부산광역시 해운대구 마린시티2로 45'"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "학교 레코드 생성일시입니다. ISO 8601 형식의 시각이며, 시스템에서 자동 기록됩니다.\n\n- 사용자가 직접 입력하지 않으며, 시스템 관리자가 변경 불가.\n- 감사 및 레코드 변동 이력 확인용.\n- 예시: '2025-07-09T15:25:39Z'"
          }
        },
        "required": [
          "name",
          "address"
        ],
        "description": "학교 정보 수정용 DTO.\n\nattendance_school 테이블의 이름 및 주소를 포함하고, 생성일은 단순 참고용입니다. 이 타입은 학교 정보 변경(이름/주소 교체 등)을 위해 사용됩니다.\n\n모든 필드는 원자적이며, 실제 수정시 각 프로퍼티의 유효성(중복, 형식, 실존성 등) 검증이 반드시 수행되어야 합니다.\n\nPrisma 스키마 주석 및 학교 관리 정책을 참고하여 설계되었습니다."
      },
      "IDeleteResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "삭제(탈퇴, 비활성 등) 작업이 정상 완료됐는지 여부를 나타내는 불리언 값입니다.\n\n- true: 삭제 성공\n- false: 삭제 실패(예: FK 연관 데이터, 권한, 내부 오류 등)"
          },
          "message": {
            "type": "string",
            "description": "삭제 결과에 대한 상세 설명 또는 오류 메시지입니다. 사용자 피드백, 시스템 기록용으로 사용됩니다.\n\n- 성공 시: '삭제 완료', '삭제가 정상적으로 처리되었습니다.'\n- 실패 시: 구체적인 오류 사유 예시('자식 데이터가 존재하여 삭제 불가', '권한 부족', '삭제 중 시스템 오류 발생' 등)\n- null인 경우도 허용"
          }
        },
        "required": [
          "success"
        ],
        "description": "삭제(탈퇴, 비활성 등) API의 표준 응답 구조입니다.\n\nsuccess 플래그와 메시지(message, 옵션)를 포함하며, 실제 삭제 유형에 따라 추가 필드가 확장될 수 있습니다.\n\n각 엔드포인트의 삭제 결과 정상/오류 반환을 표준화하는 목적에 최적화되어 있습니다."
      },
      "IAttendanceClassroom.IRequest": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "검색 대상 학교의 UUID. attendance_classroom.school_id와 매핑됩니다. 특정 학교 소속 반(Classroom)만 조회할 때 사용합니다.\n\n- 예시: 'fcb7ab29-6ca8-43e7-b4ea-ccfbc32f734a'\n- null 또는 미입력 시 전체 학교의 반 목록을 검색할 수 있습니다."
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "담임/담당 교사(teacher)의 UUID. 특정 선생님이 담당한 반만 조회할 때 지정합니다.\n\n- 예시: 'dae3ffe8-351c-446d-af60-b202da0b7f1d'\n- null 또는 미입력 시 전체 교사의 반을 검색할 수 있습니다."
          },
          "grade_level": {
            "type": "integer",
            "description": "학년 정보(정수값). 예: 1학년, 2학년, 3학년 등. 특정 학년별 반만 필터링할 때 사용합니다.\n\n- 미입력 시 특정 grade 필터 없음\n- 1,2,3 등 양수 정수"
          },
          "name": {
            "type": "string",
            "description": "반 이름(문자열). 특정 이름의 반만 검색할 때 활용합니다. 부분 일치, 키워드 검색 등에서 활용 가능.\n\n- 예: '1-1', '창의융합반', '국제교류'\n- 키워드 검색 지원 시 일부 문자열로도 조회"
          },
          "page": {
            "type": "integer",
            "description": "페이징을 위한 페이지 번호(1부터 시작). 기본=1 또는 프론트 요청값 사용.\n\n- 예: 1, 2, 3\n- null/미입력 시 첫 페이지(1)"
          },
          "limit": {
            "type": "integer",
            "description": "1페이지당 반환할 레코드(반) 개수. 기본 = 20 또는 50 등 시스템 표준\n\n- 미입력/0/null 시 시스템 기본값(예: 20)\n- 페이징 미사용 또는 모든 레코드 반환은 비권장"
          },
          "sort": {
            "type": "string",
            "description": "정렬 기준 컬럼명. 예: 'created_at', 'name', 'grade_level', 'updated_at' 등\n\n- 기본: 'created_at' 오름차순 또는 시스템 표준 값"
          },
          "order": {
            "oneOf": [
              {
                "const": "asc",
                "description": "정렬 방향(asc=오름차순, desc=내림차순)\n\n- 기본: asc(오름차순)\n- desc는 최근 순/내림차순 조회"
              },
              {
                "const": "desc",
                "description": "정렬 방향(asc=오름차순, desc=내림차순)\n\n- 기본: asc(오름차순)\n- desc는 최근 순/내림차순 조회"
              }
            ],
            "description": "정렬 방향(asc=오름차순, desc=내림차순)\n\n- 기본: asc(오름차순)\n- desc는 최근 순/내림차순 조회"
          }
        },
        "description": "반 목록(검색/필터/페이징)용 요청 파라미터 오브젝트.\n\nattendance_classroom 테이블의 검색/필터/페이징/정렬 파라미터들을 집약한 구조입니다.\n\n학교, 담당교사, 학년, 이름, 페이징/정렬 등 주요 필드를 명확화하였습니다.",
        "required": []
      },
      "IPageIAttendanceClassroom": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceClassroom"
            },
            "description": "반(IAttendanceClassroom) 엔티티 개별 레코드 배열.\n\n목록 결과로 반환되는 단일 or 다수 Classroom 데이터의 집합."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "반 Class 목록형 응답 페이징 타입이며, IPage<IClassroom>에 해당합니다.\n\n페이징 정보(pagination)와 해당페이지의 레코드 배열(data)이 반드시 포함됩니다."
      },
      "IAttendanceClassroom": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "반(클래스)의 고유 UUID(PK).\n\nattendance_classroom.id에 해당.\n\n시스템 전체에서 반을 식별하는 유일 식별자이다."
          },
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "이 반이 소속된 학교의 UUID(FK). attendance_school.id 참조.\n\n통계/필터에서 학교별로 그룹핑 시 활용, 외부 조인에서도 활용."
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "담임/담당 교사의 UUID(FK). attendance_teacher.id 참조.\n\n교사별 반 목록, 대시보드 등에서 활용"
          },
          "name": {
            "type": "string",
            "description": "반 또는 학급명(문자열). 예: '1-1', '창의융합반' 등.\n\n학년 구분, 관리 대시보드 등 다양한 뷰에서 활용."
          },
          "grade_level": {
            "type": "integer",
            "description": "반의 학년입니다. 예: 1학년, 2학년 등. 정수 범위만 허용."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "생성일시. 반이 처음 등록된 UTC 시각(ISO8601)."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "최종정보 수정일시(변경이 있을 때마다 갱신, UTC ISO8601)."
          }
        },
        "required": [
          "id",
          "school_id",
          "teacher_id",
          "name",
          "grade_level",
          "created_at",
          "updated_at"
        ],
        "description": "반(클래스) 정보 엔티티. attendance_classroom 개별 레코드.\n\n학교, 교사, 학년, 이름, 생성/수정일 등 모든 필수 필드와 참조 관계 명시."
      },
      "IAttendanceClassroom.ICreate": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "신규 반 생성 시 소속 학교 UUID(FK).\n\nattendance_school.id와 일치해야 하며, 유효성 필수."
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "담임 교사(teacher) UUID(FK).\n\n반 생성 시 지정(필수)."
          },
          "name": {
            "type": "string",
            "description": "반 이름 또는 학급명(예: '1-1', '창의융합반').\n\n정확한 식별 및 관리 필요(필수)."
          },
          "grade_level": {
            "type": "integer",
            "description": "반의 학년(정수, 예: 1,2,3,6 등). 신규 학급 생성시 필수."
          }
        },
        "required": [
          "school_id",
          "teacher_id",
          "name",
          "grade_level"
        ],
        "description": "반(클래스) 신규 생성용 요청 오브젝트. 필수 필드는 모두 원자적으로 입력되어야 함.\n\n중복 방지 및 참조키 유효성을 엄격히 검증.\n\n예: 새학기 반 생성, 교사 인사발령, 학년 추가 상황 등."
      },
      "IAttendanceClassroom.IUpdate": {
        "type": "object",
        "properties": {
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "수정 대상 반 클래스가 속한 학교의 UUID(FK). 변경 시 참조무결성 유효성 검사 필요.\n\n기존 school_id에서 새로운 UUID로 변경되는 경우 참고."
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "수정할 담임/담당 교사의 UUID. 교사 인사 이동 등에서 활용."
          },
          "name": {
            "type": "string",
            "description": "반 또는 학급명. 수정시 새 이름으로 입력(부분/전체수정)."
          },
          "grade_level": {
            "type": "integer",
            "description": "반의 학년(정수). 학년변경시 활용."
          }
        },
        "required": [
          "school_id",
          "teacher_id",
          "name",
          "grade_level"
        ],
        "description": "반(클래스) 정보 전체 수정(교체/PUT)용 요청 오브젝트.\n\n모든 필드는 필수로 입력되어야 하며, 기존 데이터의 완전 대체/등록 방식을 따름."
      },
      "IAttendanceAuthAccount.IRequest": {
        "type": "object",
        "properties": {
          "email": {
            "oneOf": [
              {
                "type": "string",
                "format": "email",
                "description": "검색할 인증계정 이메일(옵션). attendance_auth_account.email과 매핑됨.\n\n- 키워드 검색, 정확 일치 또는 부분 검색 모두 지원 가능.\n- null, 미입력 시 전체 검색."
              },
              {
                "type": "null",
                "format": "email",
                "description": "검색할 인증계정 이메일(옵션). attendance_auth_account.email과 매핑됨.\n\n- 키워드 검색, 정확 일치 또는 부분 검색 모두 지원 가능.\n- null, 미입력 시 전체 검색."
              }
            ],
            "description": "검색할 인증계정 이메일(옵션). attendance_auth_account.email과 매핑됨.\n\n- 키워드 검색, 정확 일치 또는 부분 검색 모두 지원 가능.\n- null, 미입력 시 전체 검색."
          },
          "created_at_from": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "계정 생성 시작일시(필터, ISO8601)\n\n- 미입력 시 제한없음."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "계정 생성 시작일시(필터, ISO8601)\n\n- 미입력 시 제한없음."
              }
            ],
            "description": "계정 생성 시작일시(필터, ISO8601)\n\n- 미입력 시 제한없음."
          },
          "created_at_to": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "계정 생성 종료일시(필터, ISO8601)\n- 미입력 시 제한없음."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "계정 생성 종료일시(필터, ISO8601)\n- 미입력 시 제한없음."
              }
            ],
            "description": "계정 생성 종료일시(필터, ISO8601)\n- 미입력 시 제한없음."
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean",
                "description": "논리 삭제 여부 플래그.\n- true: 삭제(비활성) 계정만\n- false: 미삭제(활성) 계정만\n- null: 전체(구분 없이)"
              },
              {
                "type": "null",
                "description": "논리 삭제 여부 플래그.\n- true: 삭제(비활성) 계정만\n- false: 미삭제(활성) 계정만\n- null: 전체(구분 없이)"
              }
            ],
            "description": "논리 삭제 여부 플래그.\n- true: 삭제(비활성) 계정만\n- false: 미삭제(활성) 계정만\n- null: 전체(구분 없이)"
          },
          "page": {
            "type": "integer",
            "description": "페이지 번호(1부터 시작). 미입력시 기본=1."
          },
          "limit": {
            "type": "integer",
            "description": "페이지당 최대 레코드 수. 미입력시 시스템 기본."
          },
          "sort": {
            "type": "string",
            "description": "정렬 기준 컬럼명. 예: 'created_at', 'email'. 기본은 created_at"
          },
          "order": {
            "oneOf": [
              {
                "const": "asc",
                "description": "정렬 방향. 오름차순(asc), 내림차순(desc)"
              },
              {
                "const": "desc",
                "description": "정렬 방향. 오름차순(asc), 내림차순(desc)"
              }
            ],
            "description": "정렬 방향. 오름차순(asc), 내림차순(desc)"
          }
        },
        "description": "인증계정(auth_account) 리스트/검색/필터/페이징용 요청 오브젝트.\n\n이메일, 생성일, 삭제여부 등 조건별 검색이 가능하고, 페이징/정렬도 지원합니다.",
        "required": []
      },
      "IPageIAttendanceAuthAccount": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceAuthAccount"
            },
            "description": "인증계정(IAttendanceAuthAccount) 배열."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "인증계정(auth_account) 목록형 페이징 결과입니다.\n\n페이지 정보와 해당 페이지의 계정 개별 레코드 배열(data)을 포함합니다."
      },
      "IAttendanceAuthAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "인증계정의 고유식별자(UUID). attendance_auth_account.id (PK). 모든 유저 결합의 기준값."
          },
          "email": {
            "oneOf": [
              {
                "type": "string",
                "format": "email",
                "description": "이메일(로그인/알림용). 옵션이며, socialOnly 회원일 경우 null.\n\n- attendance_auth_account.email에 해당.\n- 고유(Unique)값, 중복X."
              },
              {
                "type": "null",
                "format": "email",
                "description": "이메일(로그인/알림용). 옵션이며, socialOnly 회원일 경우 null.\n\n- attendance_auth_account.email에 해당.\n- 고유(Unique)값, 중복X."
              }
            ],
            "description": "이메일(로그인/알림용). 옵션이며, socialOnly 회원일 경우 null.\n\n- attendance_auth_account.email에 해당.\n- 고유(Unique)값, 중복X."
          },
          "password_hash": {
            "oneOf": [
              {
                "type": "string",
                "description": "(Local login전용) 비밀번호 해시값. 소셜로그인-only시 null.\n실제 해시값만 저장, 평문 불가."
              },
              {
                "type": "null",
                "description": "(Local login전용) 비밀번호 해시값. 소셜로그인-only시 null.\n실제 해시값만 저장, 평문 불가."
              }
            ],
            "description": "(Local login전용) 비밀번호 해시값. 소셜로그인-only시 null.\n실제 해시값만 저장, 평문 불가."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "인증계정 생성일(UTC, ISO8601)."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "계정 정보 최종수정일시(변경/비밀번호 등) ISO8601."
          },
          "deleted_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "계정 삭제(비활성화) 시각. 삭제X(활성)인 경우 null."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "계정 삭제(비활성화) 시각. 삭제X(활성)인 경우 null."
              }
            ],
            "description": "계정 삭제(비활성화) 시각. 삭제X(활성)인 경우 null."
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at"
        ],
        "description": "인증계정(auth_account) 개별 엔터티 데이터(상세 정보 포함).\n\n이메일, 해시, 생성·수정·삭제일 등 atomic 필드 전수 포함.\n\n동일 PK로 Parent, Teacher 등 타 테이블과 1:1 매핑합니다."
      },
      "IAttendanceAuthAccount.ICreate": {
        "type": "object",
        "properties": {
          "email": {
            "oneOf": [
              {
                "type": "string",
                "format": "email",
                "description": "등록할 인증계정 이메일(로컬/소셜 공용).\n\n- null인 경우 소셜 연동회원만 해당."
              },
              {
                "type": "null",
                "format": "email",
                "description": "등록할 인증계정 이메일(로컬/소셜 공용).\n\n- null인 경우 소셜 연동회원만 해당."
              }
            ],
            "description": "등록할 인증계정 이메일(로컬/소셜 공용).\n\n- null인 경우 소셜 연동회원만 해당."
          },
          "password_hash": {
            "oneOf": [
              {
                "type": "string",
                "description": "비밀번호 해시값(로컬계정 전용). 소셜전용은 null."
              },
              {
                "type": "null",
                "description": "비밀번호 해시값(로컬계정 전용). 소셜전용은 null."
              }
            ],
            "description": "비밀번호 해시값(로컬계정 전용). 소셜전용은 null."
          }
        },
        "description": "인증계정 신규 생성용 요청 오브젝트. 이메일/패스워드 해시를 옵션으로 받음.\n\n실제 role/회원 연결은 별도 API에서 처리.",
        "required": []
      },
      "IAttendanceAuthAccount.IUpdate": {
        "type": "object",
        "properties": {
          "email": {
            "oneOf": [
              {
                "type": "string",
                "format": "email",
                "description": "수정할 인증계정 이메일(Unique, null 허용: socialOnly 회원). 변경시 중복불가, 유효성필수."
              },
              {
                "type": "null",
                "format": "email",
                "description": "수정할 인증계정 이메일(Unique, null 허용: socialOnly 회원). 변경시 중복불가, 유효성필수."
              }
            ],
            "description": "수정할 인증계정 이메일(Unique, null 허용: socialOnly 회원). 변경시 중복불가, 유효성필수."
          },
          "password_hash": {
            "oneOf": [
              {
                "type": "string",
                "description": "새 비밀번호 해시(plain X). 미수정/null시 기존값 유지."
              },
              {
                "type": "null",
                "description": "새 비밀번호 해시(plain X). 미수정/null시 기존값 유지."
              }
            ],
            "description": "새 비밀번호 해시(plain X). 미수정/null시 기존값 유지."
          },
          "deleted_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "계정(논리)삭제/비활성 일시. 활성인 경우 null."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "계정(논리)삭제/비활성 일시. 활성인 경우 null."
              }
            ],
            "description": "계정(논리)삭제/비활성 일시. 활성인 경우 null."
          }
        },
        "description": "인증계정 전체/일부 수정 요청 오브젝트. 이메일·비번·삭제일 등 atomic 필드만 허용. null인 경우 미수정.",
        "required": []
      },
      "IAttendanceSocialAccount.IRequest": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "연동된 소셜 로그인 공급자의 타입입니다. 'google', 'naver', 'kakao' 등 외부 OAuth2 제공자 Key 문자열을 저장합니다.\n\n이 필드는 외부 인증 연동 및 계정 매핑 API에서 소셜 계정 검색·필터링 대상으로 사용됩니다."
          },
          "social_id": {
            "type": "string",
            "description": "외부 소셜 서비스 제공자로부터 발급된 고유 사용자 식별자입니다. 일반적으로 OAuth2 플랫폼에서 제공하는 유저ID입니다.\n\n예: 구글 'sub', 네이버 'id' 값 등. 소셜 계정조회 시 필터로 활용됩니다."
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "내부 시스템의 기준이 되는 인증 계정의 고유 식별자(UUID)입니다. attendance_auth_account 테이블의 id와 대응합니다.\n\n지정 시 소셜 계정 매핑 검색에 활용됩니다."
          },
          "page": {
            "type": "integer",
            "description": "페이지네이션 요청 시 반환 받을 페이지 번호입니다. 1부터 시작합니다.\n\n예: page=1은 첫 페이지, 2는 두 번째 페이지."
          },
          "limit": {
            "type": "integer",
            "description": "한 페이지당 포함할 레코드 개수(최대 100)\n\n기본값 미지정 시 시스템에서 설정한 기본값(보통 20~50)이 적용됩니다."
          }
        },
        "required": [],
        "description": "소셜 계정 매핑 리스트(검색/페이징) 조회 요청 객체.\n\nOAuth2 연동 계정 관리, 내부 인증계정과의 매핑 관계 등 조회 시 파라미터 필드 구성."
      },
      "IPageIAttendanceSocialAccount": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceSocialAccount"
            },
            "description": "소셜 계정 매핑 엔터티 복수개 배열"
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "소셜 계정 매핑 표준 페이지네이션 결과 구조. data=소셜계정 배열, pagination=메타데이터(전체건수, 현재페이지 등)"
      },
      "IAttendanceSocialAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "소셜 계정 매핑 Row의 고유 식별자(UUID)"
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "내부 인증(accound) 매핑기준 고유 id"
          },
          "provider": {
            "type": "string",
            "description": "소셜 로그인 공급자 타입(예: 'google', 'naver', 'kakao')"
          },
          "social_id": {
            "type": "string",
            "description": "외부 소셜 플랫폼에서 발급된 provider별 고유 사용자 식별자"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "연동(매핑) 최초 시각. ISO 8601/RFC3339 date-time"
          }
        },
        "required": [
          "id",
          "auth_account_id",
          "provider",
          "social_id",
          "created_at"
        ],
        "description": "소셜 계정과 내부 인증 계정의 매핑 레코드(단방향) 기본 스키마.\n\nOAuth2 연동 계정 관리 및 ID 연계 감사/인증용 엔터티."
      },
      "IAttendanceSocialAccount.ICreate": {
        "type": "object",
        "properties": {
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "내부 인증계정 고유 식별자(UUID)로, 소셜로그인 연동할 로컬 계정입니다."
          },
          "provider": {
            "type": "string",
            "description": "연동할 외부 소셜 플랫폼명. 예: google, naver, kakao"
          },
          "social_id": {
            "type": "string",
            "description": "외부 소셜 플랫폼 UQ id(예: Google sub, Naver id)"
          }
        },
        "required": [
          "auth_account_id",
          "provider",
          "social_id"
        ],
        "description": "새 소셜 계정 매핑 연결 시 생성 요청 오브젝트.\n\n외부 Oauth2 인증후 내부 인증계정과 연동 저장."
      },
      "IAttendanceSocialAccount.IUpdate": {
        "type": "object",
        "properties": {
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "변경할 내부 인증계정 UUID"
          },
          "provider": {
            "type": "string",
            "description": "변경 시, 새 연동외부 소셜 플랫폼명"
          },
          "social_id": {
            "type": "string",
            "description": "변경 시, 새 외부 유저 식별자"
          }
        },
        "required": [],
        "description": "소셜 계정 매핑(연동) 엔터티 수정 요청 DTO(부분/전체 갱신 지원, 모든 필드 optional)."
      },
      "IAttendanceAuthSession.IRequest": {
        "type": "object",
        "properties": {
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "인증세션 조회 대상 계정의 UUID(내부 인증 계정 ID)입니다."
          },
          "session_token": {
            "type": "string",
            "description": "특정 세션 토큰값으로 단일 또는 검색 조회할 때 사용"
          },
          "active_only": {
            "type": "boolean",
            "description": "true면 만료/취소(삭제)되지 않은 활성 세션만 반환하고, false/null이면 전체 반환"
          },
          "page": {
            "type": "integer",
            "description": "가져올 페이지 번호(1-base)."
          },
          "limit": {
            "type": "integer",
            "description": "페이지당 레코드 개수(최대100, 기본 20)"
          }
        },
        "required": [],
        "description": "인증세션 복수/리스트 검색·필터·페이징 요청 파라미터 타입.\n\n세션 토큰, 계정 UUID, 상태, page/limit 지원."
      },
      "IPageIAttendanceAuthSession": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceAuthSession"
            },
            "description": "인증 세션 엔터티(토큰) 복수 리스팅"
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "인증 세션(Token) 표준 페이지네이션 결과 구조. data=세션배열, pagination=페이지메타"
      },
      "IAttendanceAuthSession": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "인증 세션의 고유 식별자(UUID)"
          },
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "연결된 내부 인증계정 id"
          },
          "session_token": {
            "type": "string",
            "description": "실제 저장/관리되는 세션 토큰(opaque/jwt류)"
          },
          "issued_at": {
            "type": "string",
            "format": "date-time",
            "description": "세션 발급 일시(로그인시점)"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "해당 세션(토큰)의 만료 시각"
          },
          "revoked_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "만료/로그아웃/비정상종료 등으로 취소된 경우 실제 취소된 일시(없으면 null)"
              },
              {
                "type": "null"
              }
            ],
            "description": "만료/로그아웃/비정상종료 등으로 취소된 경우 실제 취소된 일시(없으면 null)"
          },
          "user_agent": {
            "oneOf": [
              {
                "type": "string",
                "description": "접속 디바이스의 user-agent(브라우저정보 문자열 등), 필수아님"
              },
              {
                "type": "null"
              }
            ],
            "description": "접속 디바이스의 user-agent(브라우저정보 문자열 등), 필수아님"
          },
          "ip_address": {
            "oneOf": [
              {
                "type": "string",
                "description": "접속 당시의 IP 주소(옵션, 저장시점)."
              },
              {
                "type": "null"
              }
            ],
            "description": "접속 당시의 IP 주소(옵션, 저장시점)."
          }
        },
        "required": [
          "id",
          "auth_account_id",
          "session_token",
          "issued_at",
          "expires_at"
        ],
        "description": "인증 세션(토큰발급, 로그인상태) 엔터티 표현.\n\n내부 사용자 인증·토큰발급 보안 감사에 사용. 세션 만료·해제 등 상태추적도 포함."
      },
      "IAttendanceAuthSession.ICreate": {
        "type": "object",
        "properties": {
          "auth_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "세션을 생성할 대상 인증계정 id"
          },
          "session_token": {
            "type": "string",
            "description": "발급할(생성되는) 세션 토큰 string"
          },
          "issued_at": {
            "type": "string",
            "format": "date-time",
            "description": "세션 발급일시"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "세션(토큰) 만료일시"
          },
          "user_agent": {
            "oneOf": [
              {
                "type": "string",
                "description": "접속 디바이스의 UA, 옵션"
              },
              {
                "type": "null"
              }
            ],
            "description": "접속 디바이스의 UA, 옵션"
          },
          "ip_address": {
            "oneOf": [
              {
                "type": "string",
                "description": "생성/접속 당시 IP, 옵션"
              },
              {
                "type": "null"
              }
            ],
            "description": "생성/접속 당시 IP, 옵션"
          }
        },
        "required": [
          "auth_account_id",
          "session_token",
          "issued_at",
          "expires_at"
        ],
        "description": "새 인증 세션(로그인) 발급 요청 Body.\n\nOAuth2/로컬 로그인에 사용, 토큰메타 내역 포함."
      },
      "IAttendanceAuthSession.IUpdate": {
        "type": "object",
        "properties": {
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "만료 시각 연장/조정"
          },
          "revoked_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "강제 만료/로그아웃 처리시 갱신되는 실제 취소 일시(널은 활성상태)"
              },
              {
                "type": "null"
              }
            ],
            "description": "강제 만료/로그아웃 처리시 갱신되는 실제 취소 일시(널은 활성상태)"
          },
          "user_agent": {
            "oneOf": [
              {
                "type": "string",
                "description": "변경할 User-Agent(옵션)"
              },
              {
                "type": "null"
              }
            ],
            "description": "변경할 User-Agent(옵션)"
          },
          "ip_address": {
            "oneOf": [
              {
                "type": "string",
                "description": "변경할/추가 IP"
              },
              {
                "type": "null"
              }
            ],
            "description": "변경할/추가 IP"
          }
        },
        "required": [],
        "description": "인증 세션(토큰) 엔터티의 수정/업데이트 요청 DTO.\n\n만료일 연장, 강제 해제 등 정책제어에 활용. optional-only."
      },
      "IAttendanceAttendanceRecord.IRequest": {
        "type": "object",
        "properties": {
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 이력 검색/조회할 학생 식별자(UUID)"
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 이력 조회 대상(반/강의실) UUID"
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "담당교사/출결 등록자 UUID, 검색옵션"
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "description": "출결 방식(UUID), code/manual 등 필터링 옵션"
          },
          "status": {
            "type": "string",
            "description": "출석 상태(present, absent, late, leave 등) - 문자열 상태"
          },
          "code_id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 코드별 필터(UUID, optional)"
          },
          "start_at": {
            "type": "string",
            "format": "date-time",
            "description": "조회시작시각(검색 기간시작, ISO8601)"
          },
          "end_at": {
            "type": "string",
            "format": "date-time",
            "description": "검색종료(기간 끝, ISO8601)"
          },
          "page": {
            "type": "integer",
            "description": "페이지번호(1-base, optional)"
          },
          "limit": {
            "type": "integer",
            "description": "페이지당 반환 건수(기본 20, 최대100)"
          },
          "sort": {
            "type": "string",
            "description": "정렬 필드/기준(checked_at 등)"
          },
          "order": {
            "type": "string",
            "description": "정렬순서 asc/desc"
          }
        },
        "required": [],
        "description": "출결 이력(복수) 검색·조회·페이징 요청 오브젝트 DTO.\n\n학생/반/교사/코드/기간/상태 등 다양한 필드 필터 조합 지원."
      },
      "IPageAttendanceAttendanceRecord": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceAttendanceRecord"
            },
            "description": "출결 이력 레코드의 배열"
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "출결 이력 리스트의 표준 페이징 구조(data 배열+pagination 메타)."
      },
      "IAttendanceAttendanceRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 기록의 고유 식별자입니다.\n\nPrisma: attendance_attendance_record.id. 각 출석 시도(출석, 지각, 결석, 조퇴 등)의 PK(UUID)로, 전체 출석·감사 이력의 기준이 됩니다. 시스템 내 유일하며 외부 참조도 사용됩니다."
          },
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 대상 학생의 ID입니다.\n\nPrisma: attendance_attendance_record.student_id. attendance_student.id를 참조하며, 출석 대시보드/부모-교사 알림 등에 사용됩니다."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "본 출석 레코드가 귀속되는 학급(반)의 ID입니다.\n\nPrisma: attendance_attendance_record.classroom_id. attendance_classroom.id 참조로 교사, 관리자 대시보드 집계, 자녀반/학급통계 등에 활용됩니다."
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "출석을 개시/관리한 교사 ID입니다.\n\nPrisma: attendance_attendance_record.teacher_id. attendance_teacher.id와 연결되어 출석 주체 확인, 감사지원, 통계/알림 송신 등에서 특징적으로 활용됩니다."
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 방식(코드/QR/수기 등) 정보를 담는 출석 방법의 ID입니다.\n\nPrisma: attendance_attendance_record.method_id. attendance_attendance_method.id를 참조하며, 방식별 통계/이상감지(수기/자동), 현장 정책에 활용됩니다."
          },
          "code_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "출석코드 기반 출석이면 입력되는 코드의 ID입니다. 미사용시 null.\n\nPrisma: attendance_attendance_record.code_id. attendance_attendance_code.id 참조, 부정출석 탐지/코드 감시/감사로그로 연결됩니다."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "출석코드 기반 출석이면 입력되는 코드의 ID입니다. 미사용시 null.\n\nPrisma: attendance_attendance_record.code_id. attendance_attendance_code.id 참조, 부정출석 탐지/코드 감시/감사로그로 연결됩니다."
              }
            ],
            "description": "출석코드 기반 출석이면 입력되는 코드의 ID입니다. 미사용시 null.\n\nPrisma: attendance_attendance_record.code_id. attendance_attendance_code.id 참조, 부정출석 탐지/코드 감시/감사로그로 연결됩니다."
          },
          "checked_at": {
            "type": "string",
            "format": "date-time",
            "description": "출석 입력 시각(로컬 타임존, ISO8601)입니다.\n\nPrisma: attendance_attendance_record.checked_at. 시간 감사, 지각 판정, 부모 알림 전송 등 서비스 핵심 기준이 됩니다."
          },
          "status": {
            "type": "string",
            "description": "출석 결과 상태(예: present, late, absent, leave 등)입니다.\n\nPrisma: attendance_attendance_record.status. 서비스는 비즈니스/어플리케이션 단에서 유효성(enum 등) 검사하며, 통계/이상징후 감지, 알림 메시지에도 사용됩니다."
          },
          "exception_reason": {
            "oneOf": [
              {
                "type": "string",
                "description": "지각, 결석 등 정상상태가 아닐 때의 사유(메모, 예외사항)입니다.\n\nPrisma: attendance_attendance_record.exception_reason. 교사 입력, 부모 소명, 시스템 자동기록 등 예외상황 이력 용도입니다."
              },
              {
                "type": "null",
                "description": "지각, 결석 등 정상상태가 아닐 때의 사유(메모, 예외사항)입니다.\n\nPrisma: attendance_attendance_record.exception_reason. 교사 입력, 부모 소명, 시스템 자동기록 등 예외상황 이력 용도입니다."
              }
            ],
            "description": "지각, 결석 등 정상상태가 아닐 때의 사유(메모, 예외사항)입니다.\n\nPrisma: attendance_attendance_record.exception_reason. 교사 입력, 부모 소명, 시스템 자동기록 등 예외상황 이력 용도입니다."
          }
        },
        "required": [
          "id",
          "student_id",
          "classroom_id",
          "teacher_id",
          "method_id",
          "checked_at",
          "status"
        ],
        "description": "개별 학생의 출석 기록을 나타내는 엔터티입니다.\n\nPrisma 테이블 attendance_attendance_record와 1:1 매핑. 학생별 출석 현황, 대시보드 제공 및 통계, 출석/결석 통보(알림), 이상 탐지, 추가 감사 로그 등 모든 핵심 출석 이벤트 레코드의 기준이 됩니다. 각 컬럼은 atomic하며, 타 테이블(PK, FK)과의 연결을 통해 교사/반/코드 기반 상세 조회가 가능합니다. 다수의 이력, 상태변경, 연관 알림이 별도로 붙을 수 있습니다.\n\n실시간 출결대시보드, 부모/교사/관리자 알림, 추심/이상징후 감지, 통계 대시보드·레포트 등 다양한 서비스 시나리오에 연동됩니다."
      },
      "IAttendanceAttendanceRecord.ICreate": {
        "type": "object",
        "properties": {
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 대상 학생의 ID. attendance_student.id로 연결."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "해당 출석 기록의 학급(반) ID. attendance_classroom.id 참조."
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "해당 출석을 기록한(개시한) 교사 ID. attendance_teacher.id."
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 입력 방식의 ID. attendance_attendance_method.id 참조."
          },
          "code_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "코드 기반 출석일 경우의 출석코드 ID. null 허용."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "코드 기반 출석일 경우의 출석코드 ID. null 허용."
              }
            ],
            "description": "코드 기반 출석일 경우의 출석코드 ID. null 허용."
          },
          "checked_at": {
            "type": "string",
            "format": "date-time",
            "description": "출석 입력 타임스탬프(ISO8601)."
          },
          "status": {
            "type": "string",
            "description": "출석 결과 상태(enum/비즈니스 validation 대상, 예: present, late, absent 등)."
          },
          "exception_reason": {
            "oneOf": [
              {
                "type": "string",
                "description": "예외 발생시(지각/결석 사유 등) free text."
              },
              {
                "type": "null",
                "description": "예외 발생시(지각/결석 사유 등) free text."
              }
            ],
            "description": "예외 발생시(지각/결석 사유 등) free text."
          }
        },
        "required": [
          "student_id",
          "classroom_id",
          "teacher_id",
          "method_id",
          "checked_at",
          "status"
        ],
        "description": "출석(출결) 레코드 신규 등록 요청 타입입니다.\n\nPrisma attendance_attendance_record 신규생성에 필요한 필수 atomic 값만 포함하며, 출결코드, 방식, 시간, 상태, 예외사유 입력까지 지원합니다.\n\n비즈니스 규칙: (student, class, checked_at) 조합은 유니크, status는 정합성(enum/from FE validation)이 요구됩니다."
      },
      "IAttendanceAttendanceRecord.IUpdate": {
        "type": "object",
        "properties": {
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 대상 학생의 ID. attendance_student.id로 연결."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "해당 출석 기록의 학급(반) ID. attendance_classroom.id 참조."
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "해당 출석을 기록한(개시한) 교사 ID. attendance_teacher.id."
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 입력 방식의 ID. attendance_attendance_method.id 참조."
          },
          "code_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "코드 기반 출석일 경우의 출석코드 ID. null 허용."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "코드 기반 출석일 경우의 출석코드 ID. null 허용."
              }
            ],
            "description": "코드 기반 출석일 경우의 출석코드 ID. null 허용."
          },
          "checked_at": {
            "type": "string",
            "format": "date-time",
            "description": "출석 입력 타임스탬프(ISO8601)."
          },
          "status": {
            "type": "string",
            "description": "출석 결과 상태(enum/비즈니스 validation 대상, 예: present, late, absent 등)."
          },
          "exception_reason": {
            "oneOf": [
              {
                "type": "string",
                "description": "예외 발생시(지각/결석 사유 등) free text."
              },
              {
                "type": "null",
                "description": "예외 발생시(지각/결석 사유 등) free text."
              }
            ],
            "description": "예외 발생시(지각/결석 사유 등) free text."
          }
        },
        "required": [
          "student_id",
          "classroom_id",
          "teacher_id",
          "method_id",
          "checked_at",
          "status"
        ],
        "description": "기존 출석 레코드(atomic 1개 단위)의 전체 수정/갱신용 요청 타입입니다.\n\nPrisma attendance_attendance_record 테이블의 full 정보 중 수정 가능한 항목만 포함. (PK/id는 path-param) status, time, 예외사유, 방식 등도 대체 가능합니다.\n\nSoft delete가 아니라 전체 교체형입니다."
      },
      "IAttendanceAttendanceCode.IRequest": {
        "type": "object",
        "properties": {
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "코드를 발급/소유한 교사의 ID로 필터하거나 전체 코드 중 소유자 기준 대시보드 조회합니다.\n\nPrisma: attendance_attendance_code.teacher_id"
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "코드가 속한 학급(반) ID, attendance_classroom.id 기준입니다.\n\nPrisma: attendance_attendance_code.classroom_id"
          },
          "is_active": {
            "type": "boolean",
            "description": "현재 사용중(활성)인 코드만 조회 여부입니다.\n\nPrisma: attendance_attendance_code.is_active = true/false."
          },
          "issued_from": {
            "type": "string",
            "format": "date-time",
            "description": "코드 발급(시작) 시간 범위 검색용.\n\nPrisma: attendance_attendance_code.issued_at >= issued_from"
          },
          "issued_to": {
            "type": "string",
            "format": "date-time",
            "description": "코드 발급(종료) 시간 범위 검색용.\n\nPrisma: attendance_attendance_code.issued_at <= issued_to"
          },
          "expires_from": {
            "type": "string",
            "format": "date-time",
            "description": "유효기간(시작) 기준 검색용\n\nPrisma: attendance_attendance_code.expires_at >= expires_from"
          },
          "expires_to": {
            "type": "string",
            "format": "date-time",
            "description": "유효기간(종료) 기준 검색용\n\nPrisma: attendance_attendance_code.expires_at <= expires_to"
          },
          "page": {
            "type": "integer",
            "description": "페이지네이션: 몇 번째 페이지를 조회할지(1-base index).\n\ndefault = 1, 0이면 전체조회"
          },
          "limit": {
            "type": "integer",
            "description": "페이지 당 최대 결과 개수.\n\ndefault = 100, 0이면 전체 출력"
          },
          "sort": {
            "type": "string",
            "description": "정렬 기준(column명: issued_at, expires_at, is_active 등)\n\ndefault = issued_at desc"
          }
        },
        "required": [],
        "description": "출석코드(teacher가 발급한 6자리 등) 리스트를 대시보드·검색·감사용으로 조회할 때 사용하는 검색/페이징/정렬 파라미터 타입.\n\nPrisma attendance_attendance_code의 주요 atomic 필드에 기반해 설계했으며, 교사/관리자 대시보드, 출석코드생성 UI, 이상감지/감사 등에서 다양하게 활용됩니다.\n\nis_active=true/false, 기간(issued/expires), 소유자 필터(teacher_id) 등 다중 조건 복합 검색 가능."
      },
      "IPageAttendanceAttendanceCode": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "description": "페이지네이션 정보"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceAttendanceCode"
            },
            "description": "출석코드 개별 데이터 배열"
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "출석코드 리스트 응답 페이징 컨테이너.\n\n페이지네이션 정보와 출석코드 목록 배열을 포함하여 대시보드 리스트, 검색결과, UI바인딩 등에 직접 사용됩니다.\n\nPagination은 공통 타입(IPage.IPagination) 참고."
      },
      "IAttendanceAttendanceCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "출석코드 개별 Row의 PK(UUID)\n\nPrisma: attendance_attendance_code.id"
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "코드가 귀속된 반(클래스) ID(PK)\n\nPrisma: attendance_attendance_code.classroom_id"
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "코드를 발급한 교사 ID\n\nPrisma: attendance_attendance_code.teacher_id"
          },
          "code_value": {
            "type": "string",
            "description": "실제 출석코드(6자리 알파넘)\n\nPrisma: attendance_attendance_code.code_value. 중복, 유니크, 케이스 등 서버단 검사"
          },
          "issued_at": {
            "type": "string",
            "format": "date-time",
            "description": "코드 발급 시각(생성 시점)\n\nPrisma: attendance_attendance_code.issued_at"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "코드 만료 시각\n\nPrisma: attendance_attendance_code.expires_at"
          },
          "is_active": {
            "type": "boolean",
            "description": "현재 코드의 유효 여부 (true/false)\n\nPrisma: attendance_attendance_code.is_active"
          }
        },
        "required": [
          "id",
          "classroom_id",
          "teacher_id",
          "code_value",
          "issued_at",
          "expires_at",
          "is_active"
        ],
        "description": "출석코드 개별 엔터티 타입입니다.\n\nPrisma attendance_attendance_code에 매핑되며, 코드 기반 출석 이벤트, 대시보드 정보, 만료 관리, 이상 탐지 등 다양한 서비스 영역에서 활용됩니다.\n\n각 필드는 atomic, 대시보드/감사·보안 이력에 활용할 핵심 정보만을 포함합니다."
      },
      "IAttendanceAttendanceCode.ICreate": {
        "type": "object",
        "properties": {
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "코드가 귀속될 학급(반) UUID\n\nPrisma: attendance_attendance_code.classroom_id"
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "코드를 발급하는 교사 UUID\n\nPrisma: attendance_attendance_code.teacher_id"
          },
          "code_value": {
            "type": "string",
            "description": "실제 학생이 사용할 출석코드(6자, 대문자/숫자)\n\nPrisma: attendance_attendance_code.code_value"
          },
          "issued_at": {
            "type": "string",
            "format": "date-time",
            "description": "코드 발급 시각\n\nPrisma: attendance_attendance_code.issued_at"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "코드 만료 시각\n\nPrisma: attendance_attendance_code.expires_at"
          },
          "is_active": {
            "type": "boolean",
            "description": "발급 즉시 활성화 여부(true/false)\n\nPrisma: attendance_attendance_code.is_active"
          }
        },
        "required": [
          "classroom_id",
          "teacher_id",
          "code_value",
          "issued_at",
          "expires_at",
          "is_active"
        ],
        "description": "출석코드 신규 생성 요청 타입입니다.\n\nPrisma attendance_attendance_code의 atomic 필드 구성을 따라 코드발급(교사), 유효기간/활성여부 등을 제어하는 신규입력 컨트롤입니다.\n\n코드값(code_value) 검증(중복, 규칙 등)은 서버단 검증 필요."
      },
      "IAttendanceAttendanceCode.IUpdate": {
        "type": "object",
        "properties": {
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "코드가 귀속될 학급(반) UUID\n\nPrisma: attendance_attendance_code.classroom_id"
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "코드를 발급하는 교사 UUID\n\nPrisma: attendance_attendance_code.teacher_id"
          },
          "code_value": {
            "type": "string",
            "description": "실제 학생이 사용할 출석코드(6자, 대문자/숫자)\n\nPrisma: attendance_attendance_code.code_value"
          },
          "issued_at": {
            "type": "string",
            "format": "date-time",
            "description": "코드 발급 시점 변경 등\n\nPrisma: attendance_attendance_code.issued_at"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "코드 만료 시점 조정\n\nPrisma: attendance_attendance_code.expires_at"
          },
          "is_active": {
            "type": "boolean",
            "description": "코드의 활성/비활성 전환(상태)\n\nPrisma: attendance_attendance_code.is_active"
          }
        },
        "required": [
          "classroom_id",
          "teacher_id",
          "code_value",
          "issued_at",
          "expires_at",
          "is_active"
        ],
        "description": "출석코드(출석 인증, 코드 관리 등) 기존 Row의 전체 수정/갱신 요청 타입입니다.\n\nPrisma attendance_attendance_code의 atomic 정보 중 교체 가능한 항목 전체 포함(코드값, 시간정보, 활성여부 등)."
      },
      "IAttendanceAttendanceCodeLog.IRequest": {
        "type": "object",
        "properties": {
          "code_id": {
            "type": "string",
            "format": "uuid",
            "description": "로그를 검색할 출석코드 PK(uuid)\n\nPrisma: attendance_attendance_code_log.code_id"
          },
          "event_type": {
            "type": "string",
            "description": "이벤트 구분(issued/used/expired/revoked 등)\n\nPrisma: attendance_attendance_code_log.event_type"
          },
          "actor_type": {
            "type": "string",
            "description": "행위 주체(teacher, student, admin, system 등 정규화)\n\nPrisma: attendance_attendance_code_log.actor_type"
          },
          "event_from": {
            "type": "string",
            "format": "date-time",
            "description": "이벤트 발생 시점(시작) 범위(YYYY-MM-DD 등)\n\nPrisma: attendance_attendance_code_log.event_time >= event_from"
          },
          "event_to": {
            "type": "string",
            "format": "date-time",
            "description": "이벤트 발생 시점(끝) 범위(YYYY-MM-DD)\n\nPrisma: attendance_attendance_code_log.event_time <= event_to"
          },
          "page": {
            "type": "integer",
            "description": "페이징-조회할 페이지 인덱스(1-base)\n\n기본=1"
          },
          "limit": {
            "type": "integer",
            "description": "페이지 당 개수"
          },
          "sort": {
            "type": "string",
            "description": "정렬(Column명/기본 event_time desc 등)"
          }
        },
        "required": [],
        "description": "출석 코드 Log 이력 리스트 검색/페이징용 요청 타입.\n\n코드별 등 복합검색, 이벤트별(issued/used/expired…) 구분, 기간/주체·종류 필터 등 dashboard, 감사, 보안이력 등 다양한 실무에 대응."
      },
      "IPageAttendanceAttendanceCodeLog": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "description": "페이지네이션 블록"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceAttendanceCodeLog"
            },
            "description": "코드 로그 이력 상세 리스트"
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "출석 코드 Log 이력 리스트 페이징 컨테이너 타입.\n\ndashboard, 감사, 보안 등 모든 코드 history 조회의 results 컨테이너입니다."
      },
      "IAttendanceAttendanceCodeLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "PK, 출석 코드 로그 레코드의 식별자\n\nPrisma: attendance_attendance_code_log.id"
          },
          "code_id": {
            "type": "string",
            "format": "uuid",
            "description": "로그가 귀속된 출석코드 ID\n\nPrisma: attendance_attendance_code_log.code_id"
          },
          "event_type": {
            "type": "string",
            "description": "이벤트 구분(issued/used/expired/revoked 등 정규화식 설명)\n\nPrisma: attendance_attendance_code_log.event_type"
          },
          "event_time": {
            "type": "string",
            "format": "date-time",
            "description": "실제 이벤트 발생 시점(ISO8601)\n\nPrisma: attendance_attendance_code_log.event_time"
          },
          "actor_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "행위 주체(교사, 학생, 관리자, 시스템 등)의 UUID(정규화/연관없을 시 null)\n\nPrisma: attendance_attendance_code_log.actor_id"
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "행위 주체(교사, 학생, 관리자, 시스템 등)의 UUID(정규화/연관없을 시 null)\n\nPrisma: attendance_attendance_code_log.actor_id"
              }
            ],
            "description": "행위 주체(교사, 학생, 관리자, 시스템 등)의 UUID(정규화/연관없을 시 null)\n\nPrisma: attendance_attendance_code_log.actor_id"
          },
          "actor_type": {
            "type": "string",
            "description": "행위 주체 분류(teacher/student/admin/system 등)\n\nPrisma: attendance_attendance_code_log.actor_type"
          },
          "details": {
            "oneOf": [
              {
                "type": "string",
                "description": "이벤트 상세/비고(자유서술식/오류 상세 등)\n\nPrisma: attendance_attendance_code_log.details"
              },
              {
                "type": "null",
                "description": "이벤트 상세/비고(자유서술식/오류 상세 등)\n\nPrisma: attendance_attendance_code_log.details"
              }
            ],
            "description": "이벤트 상세/비고(자유서술식/오류 상세 등)\n\nPrisma: attendance_attendance_code_log.details"
          }
        },
        "required": [
          "id",
          "code_id",
          "event_type",
          "event_time",
          "actor_type"
        ],
        "description": "출석 코드 이벤트 로그 개별 데이터 타입\n\n복수의 issued, used, expired 등 이벤트, 주체별 상세기록(teacher, student, admin, system 구분) 및 에러 상세 등 감사, 보안, 이상 탐지 등 다양한 현장 수요에 대응"
      },
      "IAttendanceAttendanceCodeLog.ICreate": {
        "type": "object",
        "properties": {
          "code_id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 코드 로그를 생성할 때 참조되는 attendance_attendance_code 테이블의 고유 식별자(UUID).\n\n해당 필드는 로그의 소속 출석 코드(출결 체크용 1회성 코드)를 명확하게 지정하며, 모든 로그(발급/사용/만료/실패 등)는 반드시 어떤 코드에 귀속되어야 합니다. FK 제약 필수.\n\n예시: '44c6e79d-f379-4323-bef3-cc8579eb5b60'."
          },
          "event_type": {
            "type": "string",
            "description": "특정 출석 코드 로그 이벤트의 타입. 예) 'issued'(발급), 'used'(사용), 'expired'(만료), 'revoked'(폐기), 'failure'(실패). 원자값만 허용하며 케이스 센서티브. 소프트상 enum 관리(문자열)이며, 시스템/감사용으로 확장 가능.\n\n각 이벤트별로 실업무상 의미가 상이하므로, 입력 시 반드시 올바른 비즈니스 컨텍스트(예: 사용 시 'used', 만료 시 'expired' 등)를 준수해야 함.\n\n예시: 'used'."
          },
          "event_time": {
            "type": "string",
            "format": "date-time",
            "description": "이 로그 이벤트가 실제로 발생한 타임스탬프(ISO8601/RFC3339).\n\n정확한 시각(예: 실제 발급/사용/만료 등) 기록을 위해 사용하는 표준 시각 필드. 업무상 절대 변경되지 않으며, UTC+시간대 정책을 준수해야 함. 이력이 있는 이벤트의 경우 시스템에서는 이 시각을 기준으로 감사/통계 등을 집계함.\n\n예시: '2025-07-09T15:40:00+09:00'."
          },
          "actor_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "이 출석코드 로그 이벤트를 유발한 주체의 UUID. 교사/학생/관리자/시스템 등 다양한 역할 주체와 연결 가능. Nullable(이벤트에 따라 시스템 프로세스 등 비사용자일 수 있음).\n\n폴리모픽 관계(교사, 학생, 관리자, 시스템 등)에 따라 다양한 케이스 허용. 실제 FK 제약은 역할별로 다르게 처리됨(앱상 트래킹을 위함). 예시: 교사 발급 시 교사 id, 학생이 사용 시 학생 id 등. 시스템 자동발급/만료 등 경우에는 null."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "이 출석코드 로그 이벤트를 유발한 주체의 UUID. 교사/학생/관리자/시스템 등 다양한 역할 주체와 연결 가능. Nullable(이벤트에 따라 시스템 프로세스 등 비사용자일 수 있음).\n\n폴리모픽 관계(교사, 학생, 관리자, 시스템 등)에 따라 다양한 케이스 허용. 실제 FK 제약은 역할별로 다르게 처리됨(앱상 트래킹을 위함). 예시: 교사 발급 시 교사 id, 학생이 사용 시 학생 id 등. 시스템 자동발급/만료 등 경우에는 null."
              }
            ],
            "description": "이 출석코드 로그 이벤트를 유발한 주체의 UUID. 교사/학생/관리자/시스템 등 다양한 역할 주체와 연결 가능. Nullable(이벤트에 따라 시스템 프로세스 등 비사용자일 수 있음).\n\n폴리모픽 관계(교사, 학생, 관리자, 시스템 등)에 따라 다양한 케이스 허용. 실제 FK 제약은 역할별로 다르게 처리됨(앱상 트래킹을 위함). 예시: 교사 발급 시 교사 id, 학생이 사용 시 학생 id 등. 시스템 자동발급/만료 등 경우에는 null."
          },
          "actor_type": {
            "type": "string",
            "description": "event_type을 발생시킨 주체의 역할/타입(teacher, student, admin, system).\n\n폴리모픽 행위자 판별과 접근권한 추적을 위함. DB상 atomic string이며, 호출 시점의 역할, 보안 감시, 후행 감사 업무에서 활용함. 예시: 'teacher', 'student', 'admin', 'system'."
          },
          "details": {
            "oneOf": [
              {
                "type": "string",
                "description": "해당 코드 이벤트 로그에 대한 부가설명, 사유, 기술적 에러, 클라이언트/디바이스/기기/IP 등 자유 텍스트. 예: 오류발생, 특정 경고, device info, 추가 설명 등. nullable(특별한 설명 없을 시 null).\n\n이 필드는 모든 상세설명, 네트워크 정보, 오류 메시지, 시스템 에러 트레이스 등 관리자가 참고할 만한 모든 추가 정보 기록용. 민감하지 않은 부가정보 기록 허용."
              },
              {
                "type": "null",
                "description": "해당 코드 이벤트 로그에 대한 부가설명, 사유, 기술적 에러, 클라이언트/디바이스/기기/IP 등 자유 텍스트. 예: 오류발생, 특정 경고, device info, 추가 설명 등. nullable(특별한 설명 없을 시 null).\n\n이 필드는 모든 상세설명, 네트워크 정보, 오류 메시지, 시스템 에러 트레이스 등 관리자가 참고할 만한 모든 추가 정보 기록용. 민감하지 않은 부가정보 기록 허용."
              }
            ],
            "description": "해당 코드 이벤트 로그에 대한 부가설명, 사유, 기술적 에러, 클라이언트/디바이스/기기/IP 등 자유 텍스트. 예: 오류발생, 특정 경고, device info, 추가 설명 등. nullable(특별한 설명 없을 시 null).\n\n이 필드는 모든 상세설명, 네트워크 정보, 오류 메시지, 시스템 에러 트레이스 등 관리자가 참고할 만한 모든 추가 정보 기록용. 민감하지 않은 부가정보 기록 허용."
          }
        },
        "required": [
          "code_id",
          "event_type",
          "event_time",
          "actor_type"
        ],
        "description": "출석 코드 로그(attendance_attendance_code_log) 신규 이벤트 생성(저장)용 요청 DTO.\n\n이 스키마는 새 코드 이벤트 발생(발급/사용/만료/실패 등)시 시스템·교사·학생 등에서 로그 이력을 기록하기 위한 데이터 구조를 명확히 정의합니다. 필수 필드는 FK(코드), 이벤트타입, 시간, 행위자유형(actor_type) 네 가지입니다. 각 필드는 Prisma DB 주석에 기반해 상세한 설명/제약조건을 갖추고 있으며, 참조 무결성(코드), 역할별 상황 구분(행위자), 시각적·감사적 정확성(타임스탬프) 보장이 특징입니다.\n\nnullable 속성(actor_id, details)도 엄밀히 반영하였으며, 실제 실무에서는 업무 정책 또는 시스템 아키텍처에 따라 actor_id=null 시 주로 시스템 자동 이벤트 또는 외부 트리거로 구분하여 감사지표를 구분합니다.\n\n실제 사용 예시는 출석 코드가 최초 발급될 때(event_type='issued'), 학생이 입력해 사용 시(event_type='used'), 자동 만료 시(event_type='expired'), 부정한 사용/오류 시(event_type='failure') 등 업무 프로세스 전 영역을 포괄합니다."
      },
      "IAttendanceAttendanceCodeLog.IUpdate": {
        "type": "object",
        "properties": {
          "code_id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 코드 로그가 참조하는 대상 코드의 UUID입니다.\n\n이 값은 attendance_attendance_code 테이블의 id 필드와 연결되어, 어떤 출석 코드에 대한 이벤트 로그인지 명확히 식별할 수 있습니다.\n수정 API에서 잘못된 코드 매핑 수정이 필요할 때 활용됩니다."
          },
          "event_type": {
            "type": "string",
            "description": "코드 로그 이벤트의 종류를 지정합니다.\n\n예시 값으로는 'issued', 'used', 'expired', 'revoked', 'failure' 등이 있습니다.\n비즈니스 정책 및 감사 목적에 따라 세부 구분값을 관리하며, 이벤트 실제 목적에 맞게 정확히 기술해야 합니다."
          },
          "event_time": {
            "type": "string",
            "format": "date-time",
            "description": "해당 이벤트가 발생한 정확한 UTC 타임스탬프를 명시합니다.\n\n수정 시에도 정확한 변경/적용 시간 부여가 중요합니다.\n즉, event_time은 발생 시각의 ISO8601 문자열이어야 하며, 예: 2025-07-09T15:55:00+09:00 등입니다."
          },
          "actor_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "해당 출석 코드 이벤트를 발생시킨 주체의 UUID 식별자입니다.\n\n교사/학생/관리자/시스템 등 여러 객체(다형성)와 매핑될 수 있으며, 실제 값은 context에 따라 다릅니다.\nnullable로, 수정시 시나리오에 따라 변경할 수 있습니다."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "해당 출석 코드 이벤트를 발생시킨 주체의 UUID 식별자입니다.\n\n교사/학생/관리자/시스템 등 여러 객체(다형성)와 매핑될 수 있으며, 실제 값은 context에 따라 다릅니다.\nnullable로, 수정시 시나리오에 따라 변경할 수 있습니다."
              }
            ],
            "description": "해당 출석 코드 이벤트를 발생시킨 주체의 UUID 식별자입니다.\n\n교사/학생/관리자/시스템 등 여러 객체(다형성)와 매핑될 수 있으며, 실제 값은 context에 따라 다릅니다.\nnullable로, 수정시 시나리오에 따라 변경할 수 있습니다."
          },
          "actor_type": {
            "type": "string",
            "description": "이벤트 주체 유형을 명확히 구분하는 값입니다.\n\n예: 'teacher', 'student', 'admin', 'system' 등 고정값을 사용해야 하며, 프론트엔드에서 액터 표시/로그 연동시 활용됩니다.\n테스트, 노출용, 감사용으로 반드시 명확한 구분값 사용 필요."
          },
          "details": {
            "oneOf": [
              {
                "type": "string",
                "description": "해당 이벤트 발생에 대한 상세 비고, 메모 또는 추가 정보 입력란입니다.\n\n이 값은 자유 텍스트(예: IP, 디바이스, 오류 코드 등)로, 보완 설명이나 시스템 트러블슈팅/감사 분석에 주요한 역할을 합니다.\n기본적으로 nullable 필드로, 값이 없는 경우 null 처리합니다."
              },
              {
                "type": "null",
                "description": "해당 이벤트 발생에 대한 상세 비고, 메모 또는 추가 정보 입력란입니다.\n\n이 값은 자유 텍스트(예: IP, 디바이스, 오류 코드 등)로, 보완 설명이나 시스템 트러블슈팅/감사 분석에 주요한 역할을 합니다.\n기본적으로 nullable 필드로, 값이 없는 경우 null 처리합니다."
              }
            ],
            "description": "해당 이벤트 발생에 대한 상세 비고, 메모 또는 추가 정보 입력란입니다.\n\n이 값은 자유 텍스트(예: IP, 디바이스, 오류 코드 등)로, 보완 설명이나 시스템 트러블슈팅/감사 분석에 주요한 역할을 합니다.\n기본적으로 nullable 필드로, 값이 없는 경우 null 처리합니다."
          }
        },
        "required": [
          "code_id",
          "event_type",
          "event_time",
          "actor_type"
        ],
        "description": "출석 코드 로그(이벤트 기록) 수정(update) 요청 오브젝트\n\n출석 코드 라이프사이클 이벤트(발급, 사용, 만료, 오류 등) 수정에 사용됩니다.\n참조되는 코드 식별자(code_id), 이벤트 타입(event_type), 발생시간(event_time), 액터 정보 등 올바른 event 기록 정상화 및 감사 목적에 필수적입니다."
      },
      "null": {
        "type": "object",
        "description": "이 타입은 비어있는 응답이나 삭제 등에서 사용되며, 내용이 없는(Null) 응답을 나타냅니다.\n\n일부 OpenAPI에서 명확한 응답 타입을 지정하지 않을 때, 혹은 삭제 API의 '204 No Content' 연관 응답에 활용할 수 있습니다.",
        "properties": {},
        "required": []
      },
      "IAttendanceAttendanceMethod.IRequest": {
        "type": "object",
        "properties": {
          "method_name": {
            "oneOf": [
              {
                "type": "string",
                "description": "출석 방식에 대해 method_name(예: 'CODE', 'QR') 텍스트 검색 수행 시 사용합니다.\nnullable로 부분 정확 검색 시 활용 가능합니다."
              },
              {
                "type": "null",
                "description": "출석 방식에 대해 method_name(예: 'CODE', 'QR') 텍스트 검색 수행 시 사용합니다.\nnullable로 부분 정확 검색 시 활용 가능합니다."
              }
            ],
            "description": "출석 방식에 대해 method_name(예: 'CODE', 'QR') 텍스트 검색 수행 시 사용합니다.\nnullable로 부분 정확 검색 시 활용 가능합니다."
          },
          "description": {
            "oneOf": [
              {
                "type": "string",
                "description": "방식 설명(description) 키워드 페이징/검색 시 사용하며, 상세조건(예: '블루투스', 'NFC' 키워드 등) 지정에 활용됩니다."
              },
              {
                "type": "null",
                "description": "방식 설명(description) 키워드 페이징/검색 시 사용하며, 상세조건(예: '블루투스', 'NFC' 키워드 등) 지정에 활용됩니다."
              }
            ],
            "description": "방식 설명(description) 키워드 페이징/검색 시 사용하며, 상세조건(예: '블루투스', 'NFC' 키워드 등) 지정에 활용됩니다."
          },
          "page": {
            "oneOf": [
              {
                "type": "number",
                "description": "페이지 번호입니다.\n\n기본값은 1(혹은 시스템 정책에 따라 정해짐)이며, null일 경우 1페이지로 간주합니다."
              },
              {
                "type": "null",
                "description": "페이지 번호입니다.\n\n기본값은 1(혹은 시스템 정책에 따라 정해짐)이며, null일 경우 1페이지로 간주합니다."
              }
            ],
            "description": "페이지 번호입니다.\n\n기본값은 1(혹은 시스템 정책에 따라 정해짐)이며, null일 경우 1페이지로 간주합니다."
          },
          "limit": {
            "oneOf": [
              {
                "type": "number",
                "description": "페이지당 최대 레코드 수입니다.\n\n기본값 100 등으로 제한되며, null 입력 시 기본값 적용됩니다."
              },
              {
                "type": "null",
                "description": "페이지당 최대 레코드 수입니다.\n\n기본값 100 등으로 제한되며, null 입력 시 기본값 적용됩니다."
              }
            ],
            "description": "페이지당 최대 레코드 수입니다.\n\n기본값 100 등으로 제한되며, null 입력 시 기본값 적용됩니다."
          }
        },
        "description": "출석 방식(AttendanceMethod) 리스트 조회 패치 요청 타입\n\n방식명, 설명 등 키워드별 검색, 페이징(page, limit) 등 주요 파라미터를 담는 요청 오브젝트입니다.\n사용자는 method_name(부분검색), description(부분검색), page, limit 등을 전달할 수 있습니다.",
        "required": []
      },
      "IPageAttendanceAttendanceMethod": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceAttendanceMethod"
            },
            "description": "해당 페이지에 해당하는 출석 방식(AttendanceAttendanceMethod) 배열입니다.\n각 방식 엔트리에는 PK, method_name, description 등의 정보가 포함됩니다."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "출석 방식 페이징+목록 응답 타입\n\npagination(페이징 정보)와 data(출석 방식 엔트리 배열)로 구성되어, 검색/조회 결과의 구조적 전달에 사용합니다.\nIPage 표준 구조에 맞춤형으로 출석 방식 데이터(IAttendanceAttendanceMethod) 즉, 한 페이지의 모든 레코드가 포함됩니다."
      },
      "IAttendanceAttendanceMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "출석 방식 고유 식별자(UUID)\n\n프라이머리 키, 시스템 내부/프론트 모두 참조용으로 활용됩니다. 절대 중복되지 않는 값이 보장됩니다."
          },
          "method_name": {
            "type": "string",
            "description": "출석 방식명(예: 'CODE', 'QR', 'MANUAL')\n\n실제 UI 표기, 대시보드, 설정 등에서 방식 선택의 기준 키 값으로 사용합니다. 반드시 유니크 및 표준화된 값만 허용해야 합니다."
          },
          "description": {
            "type": "string",
            "description": "출석 방식의 상세 설명입니다.\n\n프론트 UI마다 부가 설명, 관리자 설명서 표기 등에 활용됩니다. 예: '6자리 임의코드 입력', '교사 QR스캔', 'NFC 등 신기술 방식 등'."
          }
        },
        "required": [
          "id",
          "method_name",
          "description"
        ],
        "description": "출석 방식(AttendanceAttendanceMethod) 단일 엔티티 스키마\n\nPrisma 테이블 attendance_attendance_method의 atomic 필드 전체 포함.\n각 방식마다 id(고유값), method_name(방식명), description(설명) 필수입니다."
      },
      "IAttendanceAttendanceMethod.ICreate": {
        "type": "object",
        "properties": {
          "method_name": {
            "type": "string",
            "description": "출석 방식명(예: 'CODE', 'QR', 'MANUAL 등')\n\n유니크(중복불가)하고, 시스템 정책상의 표준화된 명칭만 허용됩니다."
          },
          "description": {
            "type": "string",
            "description": "해당 출석 방식에 대한 상세 설명 텍스트입니다.\n\n예시: '학생이 직접 임의코드 입력', '교사가 QR코드를 보여주면 스캔', '관리자 직접입력 등'."
          }
        },
        "required": [
          "method_name",
          "description"
        ],
        "description": "출석 방식 생성 요청 타입(AttendanceAttendanceMethod)\n\n신규 방식 추가 시 필수로 들어가는 핵심 필드(method_name, description)만 포함하여, PK는 서버에서 자동 생성됨. 입력값은 모두 atomic이어야 함."
      },
      "IAttendanceAttendanceMethod.IUpdate": {
        "type": "object",
        "properties": {
          "method_name": {
            "type": "string",
            "description": "수정할 출석 방식명(예: 'CODE', 'QR', ...)\n\n중복되지 않아야 하며, 실제 정책상 허용된 명칭만 입력해야 합니다."
          },
          "description": {
            "type": "string",
            "description": "수정할 출석 방식의 상세 설명입니다.\n\n기존 방식(예: NFC, QR) 설명 일부 교체 또는 추가 설명 목적입니다."
          }
        },
        "description": "출석 방식(AttendanceAttendanceMethod) 수정(전체변경/put) 요청 타입\n\nPK(id)는 Path param으로 별도 전달\n수정 가능 필드는 method_name, description 필드이며, 입력 값은 atomic해야 합니다.\n필수 여부는 상황에 따라 다르지만, 대개 필요 시 부분(null값/누락)은 입력하지 않고, 변경 필드만 전달합니다.",
        "required": []
      },
      "IAttendanceNotification.IRequest": {
        "type": "object",
        "properties": {
          "student_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "알림 검색에서 특정 학생(자녀) 기준 조회시 사용되는 UUID.\n\nattendance_student.id 참조, 없으면 null 또는 미입력. 부모·교사·관리자별 자녀/관할학생 조건조회에 활용."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "알림 검색에서 특정 학생(자녀) 기준 조회시 사용되는 UUID.\n\nattendance_student.id 참조, 없으면 null 또는 미입력. 부모·교사·관리자별 자녀/관할학생 조건조회에 활용."
              }
            ],
            "description": "알림 검색에서 특정 학생(자녀) 기준 조회시 사용되는 UUID.\n\nattendance_student.id 참조, 없으면 null 또는 미입력. 부모·교사·관리자별 자녀/관할학생 조건조회에 활용."
          },
          "classroom_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "알림 검색에서 특정 학급/classroom 기준 조회시 사용되는 UUID.\n\nattendance_classroom.id 참조. 미입력/null이면 필터링 없음."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "알림 검색에서 특정 학급/classroom 기준 조회시 사용되는 UUID.\n\nattendance_classroom.id 참조. 미입력/null이면 필터링 없음."
              }
            ],
            "description": "알림 검색에서 특정 학급/classroom 기준 조회시 사용되는 UUID.\n\nattendance_classroom.id 참조. 미입력/null이면 필터링 없음."
          },
          "event_type": {
            "oneOf": [
              {
                "type": "string",
                "description": "알림 이벤트 유형별(part/전체) 검색을 위한 필드.\n\n'present', 'late', 'absent', 'leave' 등 고정 문자열 값 사용. null은 전체/제외조건 검색."
              },
              {
                "type": "null",
                "description": "알림 이벤트 유형별(part/전체) 검색을 위한 필드.\n\n'present', 'late', 'absent', 'leave' 등 고정 문자열 값 사용. null은 전체/제외조건 검색."
              }
            ],
            "description": "알림 이벤트 유형별(part/전체) 검색을 위한 필드.\n\n'present', 'late', 'absent', 'leave' 등 고정 문자열 값 사용. null은 전체/제외조건 검색."
          },
          "triggered_from": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "알림 생성 시간 시작 범위(검색조건). ISO8601 date-time 문자열.\n\n기간검색, 기간 대시보드 등에 활용. null/미입력은 필터없음."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "알림 생성 시간 시작 범위(검색조건). ISO8601 date-time 문자열.\n\n기간검색, 기간 대시보드 등에 활용. null/미입력은 필터없음."
              }
            ],
            "description": "알림 생성 시간 시작 범위(검색조건). ISO8601 date-time 문자열.\n\n기간검색, 기간 대시보드 등에 활용. null/미입력은 필터없음."
          },
          "triggered_to": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "알림 생성 시간 끝 범위(검색조건). ISO8601 date-time 문자열.\n\ntriggered_from와 쌍으로 기간검색시 사용, null/미입력은 제약없음."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "알림 생성 시간 끝 범위(검색조건). ISO8601 date-time 문자열.\n\ntriggered_from와 쌍으로 기간검색시 사용, null/미입력은 제약없음."
              }
            ],
            "description": "알림 생성 시간 끝 범위(검색조건). ISO8601 date-time 문자열.\n\ntriggered_from와 쌍으로 기간검색시 사용, null/미입력은 제약없음."
          },
          "page": {
            "oneOf": [
              {
                "type": "number",
                "description": "페이지 번호. 기본값 1, 0/미입력/null시 시스템 기본 반영."
              },
              {
                "type": "null",
                "description": "페이지 번호. 기본값 1, 0/미입력/null시 시스템 기본 반영."
              }
            ],
            "description": "페이지 번호. 기본값 1, 0/미입력/null시 시스템 기본 반영."
          },
          "limit": {
            "oneOf": [
              {
                "type": "number",
                "description": "페이지 당 최대 레코드 수. 미입력/null 시 기본값(보통 100 내외) 적용."
              },
              {
                "type": "null",
                "description": "페이지 당 최대 레코드 수. 미입력/null 시 기본값(보통 100 내외) 적용."
              }
            ],
            "description": "페이지 당 최대 레코드 수. 미입력/null 시 기본값(보통 100 내외) 적용."
          }
        },
        "description": "알림 이벤트 마스터(AttendanceNotification) 검색, 리스트 패치 요청용 오브젝트\n\n학생/클래스/이벤트타입/생성일자 기간조건별 페이징+검색에 활용됩니다.",
        "required": []
      },
      "IPageAttendanceNotification": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceNotification"
            },
            "description": "전체 페이징된 알림 마스터(AttendanceNotification) 레코드 배열\n\n각각의 오브젝트는 이벤트, 학생, 반, 타입, 시간, 메시지 등의 정보를 포함합니다."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "알림 마스터(AttendanceNotification) 페이징+리스트 응답 타입\n\n페이징 정보(pagination)와 데이터(AttendanceNotification 배열)로 구성됩니다."
      },
      "IAttendanceNotification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "알림 마스터 고유 식별자(UUID, PK)\n\n모든 연관 관계 및 조회/정보수정/감사로그레퍼런스에 활용됩니다."
          },
          "attendance_record_id": {
            "type": "string",
            "format": "uuid",
            "description": "본 알림의 트리거가 된 attendance_attendance_record(출석 이벤트) UUID\n\n반드시 FK로 정확한 출석 이벤트에 연결되어야 하며, 트랜잭션 추적에 사용됩니다."
          },
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "해당 알림이 참조하는 학생(자녀) UUID.\n\nparent notification 시스템에서는 이 값을 기준으로 수신대상 매핑이 동작합니다. 정합성 보증 필수."
          },
          "teacher_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "이벤트 생성 주체(교사)의 UUID (nullable)\n\n예: 자동 발송 이벤트는 null, 교사 수동발송·수정시만 실값 입력."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "이벤트 생성 주체(교사)의 UUID (nullable)\n\n예: 자동 발송 이벤트는 null, 교사 수동발송·수정시만 실값 입력."
              }
            ],
            "description": "이벤트 생성 주체(교사)의 UUID (nullable)\n\n예: 자동 발송 이벤트는 null, 교사 수동발송·수정시만 실값 입력."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "해당 알림이 속한 학급 UUID.\n\n학생+시간+이벤트 타입 조합에서 클래스별 집계·검색·뷰 구현에 사용."
          },
          "event_type": {
            "type": "string",
            "description": "알림 이벤트 유형(고정값): 'present', 'late', 'absent', 'leave' 등\n\n오타/정책 위반 값 불가. 대시보드·지표 등 통계 필터 기준으로 사용."
          },
          "triggered_at": {
            "type": "string",
            "format": "date-time",
            "description": "알림이 트리거된 UTC 시간.\n\n정확한 발생시점, 순번정렬, 기간 통계 등에 필수 key 역할을 합니다."
          },
          "message_template": {
            "type": "string",
            "description": "알림 발송 시 사용된 템플릿 문자열(가공 전 메시지)\n\n개별 발송 로그의 실제 메시지 내용은 이 템플릿을 기반으로 가공/기록됨. 템플릿 형식, 변수필드 등 주의."
          }
        },
        "required": [
          "id",
          "attendance_record_id",
          "student_id",
          "classroom_id",
          "event_type",
          "triggered_at",
          "message_template"
        ],
        "description": "알림 이벤트 마스터 엔터티(AttendanceNotification)\n\nPrisma attendance_notification 테이블의 모든 atomic 필드 포괄. 출석 이벤트 연동, 학생(자녀), 교사(옵션), 반 정보 모두 FK 참조. message_template은 실제 통지 송신이력에서 베이스가 됨."
      },
      "IAttendanceNotification.ICreate": {
        "type": "object",
        "properties": {
          "attendance_record_id": {
            "type": "string",
            "format": "uuid",
            "description": "본 알림 트리거의 실제 출석 이벤트(primary key, attendance_attendance_record PK)\n\n연관 출석 이벤트가 반드시 존재/정합성 참조되어야 하며, null 되지 않습니다."
          },
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "알림 발생대상 학생(자녀) UUID 값\n\nattendance_student FK, 반드시 null이 아닌 값이 필요합니다."
          },
          "teacher_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "해당 알림을 수동/직접 생성한 교사 UUID\n\n없거나 시스템 자동이라면 null, 교사 직접일 경우 실 PK."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "해당 알림을 수동/직접 생성한 교사 UUID\n\n없거나 시스템 자동이라면 null, 교사 직접일 경우 실 PK."
              }
            ],
            "description": "해당 알림을 수동/직접 생성한 교사 UUID\n\n없거나 시스템 자동이라면 null, 교사 직접일 경우 실 PK."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "알림 트리거 소속 학급 UUID\n\n실제 학생/반/이벤트 코드 모두 올바른 FK가 필요합니다."
          },
          "event_type": {
            "type": "string",
            "description": "알림 이벤트 주요 타입 고정값(예: 'present', 'late', 'absent', 'leave' 등)\n\n이벤트 발송 목적에 따라 시스템 정책에 등재된 값만 허용."
          },
          "triggered_at": {
            "type": "string",
            "format": "date-time",
            "description": "알림 트리거 발생 UTC 시각(ISO8601)\n\n이벤트 기준시각 기록, 반드시 실존 시점 지정 필요."
          },
          "message_template": {
            "type": "string",
            "description": "실제 알림 메시지 발송 전 템플릿 본문 스트링\n\n알림내용 일관성, 변수치환 등 시스템 구현에 반드시 필요."
          }
        },
        "required": [
          "attendance_record_id",
          "student_id",
          "classroom_id",
          "event_type",
          "triggered_at",
          "message_template"
        ],
        "description": "알림 이벤트 마스터(AttendanceNotification) 신규 등록 요청 오브젝트\n\n등록시, 모든 FK/relation이 null일 수 없으며, 교사 직접 생성/관리자 수정 등은 teacher_id에 실존 PK값을 줌. 자동/시스템생성 등은 null."
      },
      "IAttendanceNotification.IUpdate": {
        "type": "object",
        "properties": {
          "attendance_record_id": {
            "type": "string",
            "format": "uuid",
            "description": "수정할 트리거 출석 이벤트 UUID\n\nattendance_record와의 FK 참조를 갱신/오정정할 때 입력합니다."
          },
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "수정 대상 알림 마스터의 학생(자녀) UUID\n\nFK 일관성 위반 방지/정합성 보장을 위한 필드입니다."
          },
          "teacher_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "알림 생성/수정 주체 교사 UUID(옵션)\n\n교사 직접관리로 null/변경가능한 값."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "알림 생성/수정 주체 교사 UUID(옵션)\n\n교사 직접관리로 null/변경가능한 값."
              }
            ],
            "description": "알림 생성/수정 주체 교사 UUID(옵션)\n\n교사 직접관리로 null/변경가능한 값."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "수정 대상 알림 마스터의 학급 UUID\n\nFK 변경 시 필요한 필드."
          },
          "event_type": {
            "type": "string",
            "description": "알림 이벤트 타입(예: 'present', 'absent', ...)\n\n기존 이벤트 오기록/정정 등 수정현장 검증."
          },
          "triggered_at": {
            "type": "string",
            "format": "date-time",
            "description": "알림 이벤트 트리거 시각(UTC, ISO8601)\n\n수정시점 동기화, 데이터 일관성을 위해 반드시 일치해야 함."
          },
          "message_template": {
            "type": "string",
            "description": "알림 메시지 템플릿 텍스트\n\n오타/수정/포맷 변경 등 커뮤니케이션 목적의 필드."
          }
        },
        "description": "알림 마스터(AttendanceNotification) 수정(전체/부분)에 사용하는 오브젝트 타입\n\n교사, 관리자만이 접근 가능하며, PK(id)는 URL/path로, 수정가능 필드 중 변경치만 전달. null 허용필드는 빈값 처리 불가/null만 명확히.",
        "required": []
      },
      "IAttendanceNotificationChannel.IRequest": {
        "type": "object",
        "properties": {
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "알림 채널이 설정된 학생의 고유 식별자입니다. Prisma attendance_notification_channel 테이블의 student_id 컬럼과 매핑되며, 페이징/검색 API에서 학생별 채널 설정을 조회/검색할 때 사용됩니다. NULL이 아닌 경우 해당 학생의 채널만 필터링합니다.\n\n고등학생/초등학생 등 모든 학년/학급에 대해 원자적이며, 부모가 여러 자녀를 관리하는 경우 각 자녀별 student_id로 분리됩니다."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "해당 알림 채널이 연결된 보호자(학부모)의 UUID입니다. attendance_notification_channel 테이블의 parent_id와 매핑되며, NULL일 경우 부모 미지정 혹은 학생 본인 설정을 의미합니다. 부모/자녀 매핑 및 보호자-학생별 알림 설정 관리에 활용됩니다."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "해당 알림 채널이 연결된 보호자(학부모)의 UUID입니다. attendance_notification_channel 테이블의 parent_id와 매핑되며, NULL일 경우 부모 미지정 혹은 학생 본인 설정을 의미합니다. 부모/자녀 매핑 및 보호자-학생별 알림 설정 관리에 활용됩니다."
              }
            ],
            "description": "해당 알림 채널이 연결된 보호자(학부모)의 UUID입니다. attendance_notification_channel 테이블의 parent_id와 매핑되며, NULL일 경우 부모 미지정 혹은 학생 본인 설정을 의미합니다. 부모/자녀 매핑 및 보호자-학생별 알림 설정 관리에 활용됩니다."
          },
          "channel_type": {
            "oneOf": [
              {
                "type": "string",
                "description": "알림 채널의 타입(앱푸시, SMS, 이메일 등)입니다. attendance_notification_channel 테이블 column: channel_type과 매핑되며, 'app_push', 'sms', 'email' 등 문자열로 구분합니다. 특정 채널만 조회할 때 값 지정, 전체 검색시 NULL 허용.\n\n기업 내 정책/설정 메뉴에서 각 타입별 활성/비활성 상태 조정에 사용됩니다."
              },
              {
                "type": "null",
                "description": "알림 채널의 타입(앱푸시, SMS, 이메일 등)입니다. attendance_notification_channel 테이블 column: channel_type과 매핑되며, 'app_push', 'sms', 'email' 등 문자열로 구분합니다. 특정 채널만 조회할 때 값 지정, 전체 검색시 NULL 허용.\n\n기업 내 정책/설정 메뉴에서 각 타입별 활성/비활성 상태 조정에 사용됩니다."
              }
            ],
            "description": "알림 채널의 타입(앱푸시, SMS, 이메일 등)입니다. attendance_notification_channel 테이블 column: channel_type과 매핑되며, 'app_push', 'sms', 'email' 등 문자열로 구분합니다. 특정 채널만 조회할 때 값 지정, 전체 검색시 NULL 허용.\n\n기업 내 정책/설정 메뉴에서 각 타입별 활성/비활성 상태 조정에 사용됩니다."
          },
          "is_enabled": {
            "oneOf": [
              {
                "type": "boolean",
                "description": "해당 알림 채널이 현재 활성(true)/비활성(false) 상태인지 여부입니다. attendance_notification_channel 컬럼 is_enabled와 매핑되며, NULL시 전체(활성/비활성) 모두 검색 대상에 포함됩니다.\n\n부모/학생이 직접 앱에서 채널 사용 여부(수신 거부 등) 변경 시 update용으로도 활용됩니다."
              },
              {
                "type": "null",
                "description": "해당 알림 채널이 현재 활성(true)/비활성(false) 상태인지 여부입니다. attendance_notification_channel 컬럼 is_enabled와 매핑되며, NULL시 전체(활성/비활성) 모두 검색 대상에 포함됩니다.\n\n부모/학생이 직접 앱에서 채널 사용 여부(수신 거부 등) 변경 시 update용으로도 활용됩니다."
              }
            ],
            "description": "해당 알림 채널이 현재 활성(true)/비활성(false) 상태인지 여부입니다. attendance_notification_channel 컬럼 is_enabled와 매핑되며, NULL시 전체(활성/비활성) 모두 검색 대상에 포함됩니다.\n\n부모/학생이 직접 앱에서 채널 사용 여부(수신 거부 등) 변경 시 update용으로도 활용됩니다."
          },
          "preference_order": {
            "oneOf": [
              {
                "type": "integer",
                "description": "알림 채널 우선순위(작을수록 높은 순위)입니다. Prisma 테이블의 preference_order 필드와 매핑되며, NULL시 전체/우선순위 무관 검색, int 지정시 해당 값만 필터링합니다.\n\n예: 앱푸시>SMS>이메일 순 자동전환·우선순위 정책에 활용."
              },
              {
                "type": "null",
                "description": "알림 채널 우선순위(작을수록 높은 순위)입니다. Prisma 테이블의 preference_order 필드와 매핑되며, NULL시 전체/우선순위 무관 검색, int 지정시 해당 값만 필터링합니다.\n\n예: 앱푸시>SMS>이메일 순 자동전환·우선순위 정책에 활용."
              }
            ],
            "description": "알림 채널 우선순위(작을수록 높은 순위)입니다. Prisma 테이블의 preference_order 필드와 매핑되며, NULL시 전체/우선순위 무관 검색, int 지정시 해당 값만 필터링합니다.\n\n예: 앱푸시>SMS>이메일 순 자동전환·우선순위 정책에 활용."
          },
          "page": {
            "oneOf": [
              {
                "type": "integer",
                "description": "검색 결과 페이징의 현재 페이지 번호 (기본:1, 0~N 양수).\n\n공통 IPage 구조와 호환되며, API response에서 data와 pagination을 분리/연동합니다."
              },
              {
                "type": "null",
                "description": "검색 결과 페이징의 현재 페이지 번호 (기본:1, 0~N 양수).\n\n공통 IPage 구조와 호환되며, API response에서 data와 pagination을 분리/연동합니다."
              }
            ],
            "description": "검색 결과 페이징의 현재 페이지 번호 (기본:1, 0~N 양수).\n\n공통 IPage 구조와 호환되며, API response에서 data와 pagination을 분리/연동합니다."
          },
          "limit": {
            "oneOf": [
              {
                "type": "integer",
                "description": "한 페이지당 반환할 데이터 개수(기본값 20~100 권장, 최소 1). 페이지네이션 및 대용량 데이터 응답 최적화를 위한 옵션입니다. 전체 row 수는 response의 pagination에서 제공.\n\n페이징 쿼리 또는 대시보드 UI 반영시 활용."
              },
              {
                "type": "null",
                "description": "한 페이지당 반환할 데이터 개수(기본값 20~100 권장, 최소 1). 페이지네이션 및 대용량 데이터 응답 최적화를 위한 옵션입니다. 전체 row 수는 response의 pagination에서 제공.\n\n페이징 쿼리 또는 대시보드 UI 반영시 활용."
              }
            ],
            "description": "한 페이지당 반환할 데이터 개수(기본값 20~100 권장, 최소 1). 페이지네이션 및 대용량 데이터 응답 최적화를 위한 옵션입니다. 전체 row 수는 response의 pagination에서 제공.\n\n페이징 쿼리 또는 대시보드 UI 반영시 활용."
          },
          "sort_by": {
            "oneOf": [
              {
                "type": "string",
                "description": "정렬 기준 컬럼 지정 값입니다. (예: 'created_at', 'preference_order'). 지정하지 않으면 기본값(생성일 또는 PK)으로 자동 정렬됩니다."
              },
              {
                "type": "null",
                "description": "정렬 기준 컬럼 지정 값입니다. (예: 'created_at', 'preference_order'). 지정하지 않으면 기본값(생성일 또는 PK)으로 자동 정렬됩니다."
              }
            ],
            "description": "정렬 기준 컬럼 지정 값입니다. (예: 'created_at', 'preference_order'). 지정하지 않으면 기본값(생성일 또는 PK)으로 자동 정렬됩니다."
          },
          "sort_order": {
            "oneOf": [
              {
                "type": "string",
                "description": "오름차순('asc')/내림차순('desc') 등 정렬 방향 설정 옵션입니다. response의 data 순서 제어에 활용, NULL시 기본 정렬 사용."
              },
              {
                "type": "null",
                "description": "오름차순('asc')/내림차순('desc') 등 정렬 방향 설정 옵션입니다. response의 data 순서 제어에 활용, NULL시 기본 정렬 사용."
              }
            ],
            "description": "오름차순('asc')/내림차순('desc') 등 정렬 방향 설정 옵션입니다. response의 data 순서 제어에 활용, NULL시 기본 정렬 사용."
          }
        },
        "required": [],
        "description": "attendance_notification_channel 알림 채널 리스트 검색/조회, 대시보드/설정용 필터.\n\n학생/학부모/관리자 각 역할/권한별로 접근 가능한 채널 설정을 다양한 기준으로 조회할 수 있도록 설계되어 있습니다. 페이징, 정렬, 조건 필터 등 실무 UI/업무 요구에 부응하며, 반환되는 데이터(IPageIAttendanceNotificationChannel)는 필터 조건에 맞는 채널 배열 및 페이징 메타 정보를 포함합니다."
      },
      "IPageIAttendanceNotificationChannel": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceNotificationChannel"
            },
            "description": "검색 조건/필터에 부합하는 알림 채널 결과 레코드 목록. 각 항목은 IAttendanceNotificationChannel 오브젝트로, 알림 채널의 특성 정보를 모두 내포합니다."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "attendance_notification_channel 다수결과 페이징 배열+메타데이터 반환 구조.\n\n페이징 블록(IPage.IPagination) + 데이터 배열을 반환하는 IPage 표준 구조로, 채널 설정 대시보드, 통합조회 등에서 사용됩니다. 총 row, 페이지수, 현재 페이지, 실제 데이터 전체를 통합 제공하여 확장성과 데이터 품질을 보장합니다."
      },
      "IAttendanceNotificationChannel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "알림 채널 PK. attendance_notification_channel의 고유 식별자.\n\n학생(자녀), 보호자(부모), 알림 경로를 1:N:N으로 식별/매핑 가능하게 하는 원자적 id입니다."
          },
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "채널이 연결된 학생(user) UUID. attendance_student의 PK와 참조관계를 가짐.\n\n학생별로 여러 보호자와 다양한 채널(app/SMS/email)을 설정할 수 있습니다."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "알림 채널이 연결된 부모(학부모) UUID. NULL이면 보호자 미지정(=학생 자체 설정)의 의미입니다. attendance_parent의 PK 참조.\n\n1명의 부모가 여러 자녀의 채널을 가질 수 있으나, 단일 채널은 1:1:1 구조(학생/부모/채널) 유지."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "알림 채널이 연결된 부모(학부모) UUID. NULL이면 보호자 미지정(=학생 자체 설정)의 의미입니다. attendance_parent의 PK 참조.\n\n1명의 부모가 여러 자녀의 채널을 가질 수 있으나, 단일 채널은 1:1:1 구조(학생/부모/채널) 유지."
              }
            ],
            "description": "알림 채널이 연결된 부모(학부모) UUID. NULL이면 보호자 미지정(=학생 자체 설정)의 의미입니다. attendance_parent의 PK 참조.\n\n1명의 부모가 여러 자녀의 채널을 가질 수 있으나, 단일 채널은 1:1:1 구조(학생/부모/채널) 유지."
          },
          "channel_type": {
            "type": "string",
            "description": "알림 경로 유형(app_push|sms|email 등).\n\n채널 방식 정책 추가시 자유 확장, 시스템은 문자열로 처리. 예: 'app_push', 'sms', 'email' 등."
          },
          "is_enabled": {
            "type": "boolean",
            "description": "해당 채널의 현재 활성/비활성 상태. 수신 거부, 앱 이용 해지 등 사용자가 직접 변경할 수 있음.\n\n부모/관리자/학생이 알림사용/미사용 UI 구현에 활용."
          },
          "preference_order": {
            "type": "integer",
            "description": "본인/가족/학생별 알림수신 우선순위 설정. 낮을수록 우선/자동 선택됨.\n\n정책상 동일 student 내에서 중복 우선순위 불가."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "채널 설정(생성) 일시. 감사, 정책 변동 추적 등 시각적 기준.\n\nISO8601 date-time 표준으로 서버 자동 저장."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "알림 채널 정보 갱신/변경시 수정 시각(UTC). 모든 변경 이력 확인 및 동기화 관리.\n\n감사/변경 로그 연동/개인정보보호 정책 준수."
          }
        },
        "required": [
          "id",
          "student_id",
          "channel_type",
          "is_enabled",
          "preference_order",
          "created_at",
          "updated_at"
        ],
        "description": "attendance_notification_channel 알림 수신 채널 단건 레코드.\n\n학생/부모/알림 타입/활성화/우선순위/생성일 등 모든 필드는 atomic 하게 개별적으로 관리되며, 실제 알림 이력(History)나 이벤트 통계와 join시 Key로 사용합니다. 신규 채널 생성, 수정, 삭제 등 전체 사이클에 활용됩니다."
      },
      "IAttendanceNotificationChannel.ICreate": {
        "type": "object",
        "properties": {
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "채널을 등록할 대상 학생 UUID (attendance_student PK). NULL 불가. 자녀별로 중복 없이 관리함."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "해당 채널을 관리할 부모/보호자 UUID (attendance_parent PK). 학생 개별 관리 시 NULL 허용. 실제 가족관계/권한 정책에 따라 활용."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "해당 채널을 관리할 부모/보호자 UUID (attendance_parent PK). 학생 개별 관리 시 NULL 허용. 실제 가족관계/권한 정책에 따라 활용."
              }
            ],
            "description": "해당 채널을 관리할 부모/보호자 UUID (attendance_parent PK). 학생 개별 관리 시 NULL 허용. 실제 가족관계/권한 정책에 따라 활용."
          },
          "channel_type": {
            "type": "string",
            "description": "등록할 알림 채널 유형(app_push|sms|email 등 문자열, ENUM 미고정). 반드시 채널명 표준화(소문자)로 실무 적용. 예: 'sms', 'app_push', 'email'. 신규 확장 허용."
          },
          "is_enabled": {
            "type": "boolean",
            "description": "채널 활성화 상태(True=알림수신, False=수신거부/비활성화). 앱내/설정페이지에서 부모/학생이 직접 설정 가능."
          },
          "preference_order": {
            "type": "integer",
            "description": "알림 우선순위(1=최우선, 숫자가 커질수록 후순위). 각 student/channel_type 조합 내 고유값 보장해야 함."
          }
        },
        "required": [
          "student_id",
          "channel_type",
          "is_enabled",
          "preference_order"
        ],
        "description": "알림 채널 신규등록 요청 오브젝트.\n\n학생/부모/채널유형/활성화/우선순위 등 모든 필드 필수, NULL 허용되는 항목만 parent_id. 관리자/학부모/학생 권한별 등록 API 활용."
      },
      "IAttendanceNotificationChannel.IUpdate": {
        "type": "object",
        "properties": {
          "student_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "변경할 대상 학생 UUID(pk). NULL은 미수정, 지정시 업데이트. 학생 및 가족/보호자 간 이동(관리자 기능) 또는 부모/학생이 직접 설정 시 사용."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "변경할 대상 학생 UUID(pk). NULL은 미수정, 지정시 업데이트. 학생 및 가족/보호자 간 이동(관리자 기능) 또는 부모/학생이 직접 설정 시 사용."
              }
            ],
            "description": "변경할 대상 학생 UUID(pk). NULL은 미수정, 지정시 업데이트. 학생 및 가족/보호자 간 이동(관리자 기능) 또는 부모/학생이 직접 설정 시 사용."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "부모 UUID. 가족구성, 권한 변경에 따른 보호자 연결 정보 수정에만 사용."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "부모 UUID. 가족구성, 권한 변경에 따른 보호자 연결 정보 수정에만 사용."
              }
            ],
            "description": "부모 UUID. 가족구성, 권한 변경에 따른 보호자 연결 정보 수정에만 사용."
          },
          "channel_type": {
            "oneOf": [
              {
                "type": "string",
                "description": "업데이트할 채널 타입(app_push|sms|email등), NULL시 기존값 유지; 실무상 채널 자체Type 변경보단 활성화/비활성 트리거 용도로 사용."
              },
              {
                "type": "null",
                "description": "업데이트할 채널 타입(app_push|sms|email등), NULL시 기존값 유지; 실무상 채널 자체Type 변경보단 활성화/비활성 트리거 용도로 사용."
              }
            ],
            "description": "업데이트할 채널 타입(app_push|sms|email등), NULL시 기존값 유지; 실무상 채널 자체Type 변경보단 활성화/비활성 트리거 용도로 사용."
          },
          "is_enabled": {
            "oneOf": [
              {
                "type": "boolean",
                "description": "채널 활성/비활성 업데이트. true=수신, false=알림 무시/중지. NULL이면 현재 상태 유지."
              },
              {
                "type": "null",
                "description": "채널 활성/비활성 업데이트. true=수신, false=알림 무시/중지. NULL이면 현재 상태 유지."
              }
            ],
            "description": "채널 활성/비활성 업데이트. true=수신, false=알림 무시/중지. NULL이면 현재 상태 유지."
          },
          "preference_order": {
            "oneOf": [
              {
                "type": "integer",
                "description": "알림 채널 우선순위 변경 시 지정. NULL시 미변경, int 지정시 우선순위 갱신."
              },
              {
                "type": "null",
                "description": "알림 채널 우선순위 변경 시 지정. NULL시 미변경, int 지정시 우선순위 갱신."
              }
            ],
            "description": "알림 채널 우선순위 변경 시 지정. NULL시 미변경, int 지정시 우선순위 갱신."
          }
        },
        "required": [],
        "description": "알림 채널 단건(PK) 업데이트 API용 오브젝트.\n\n업데이트 시 수정 원하는 필드만 선택적으로 포함, 미포함(NULL) 시 기존값 유지. 주로 부모/학생이 채널 우선순위/활성화/비활성화 등 실무 설정을 변경하는 use case에서 사용."
      },
      "IAttendanceNotificationChannel.IDeleteResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "삭제 성공(true)/실패(false) 여부 플래그.\n\n실제 삭제/비활성화 정책에 따라 true(성공) 또는 false(오류, 미삭제)를 API에서 전송."
          },
          "deleted_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "실제 삭제된(또는 논리적 비활성화) 채널 UUID. 정상 처리시 해당 id, 실패시 null. 정책상 hard/soft delete 모두 대응."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "실제 삭제된(또는 논리적 비활성화) 채널 UUID. 정상 처리시 해당 id, 실패시 null. 정책상 hard/soft delete 모두 대응."
              }
            ],
            "description": "실제 삭제된(또는 논리적 비활성화) 채널 UUID. 정상 처리시 해당 id, 실패시 null. 정책상 hard/soft delete 모두 대응."
          }
        },
        "required": [
          "success"
        ],
        "description": "알림 채널 단건 삭제 API 응답 오브젝트.\n\n성공 플래그(success), 삭제된 채널 UUID(deleted_id)로 status를 명확히 구분하여 반환. 비활성화/물리삭제/오류 등 모든 결과에 대한 일관된 응답 제공."
      },
      "IAttendanceNotificationHistory.IRequest": {
        "type": "object",
        "properties": {
          "notification_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "검색 대상 attendance_notification(알림 이벤트 마스터) UUID. 단일/복수 알림 이력 탐색시 활용."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "검색 대상 attendance_notification(알림 이벤트 마스터) UUID. 단일/복수 알림 이력 탐색시 활용."
              }
            ],
            "description": "검색 대상 attendance_notification(알림 이벤트 마스터) UUID. 단일/복수 알림 이력 탐색시 활용."
          },
          "channel_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "검색할 채널의 UUID (attendance_notification_channel PK). notification_id와 OR/AND 조건으로 사용 가능."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "검색할 채널의 UUID (attendance_notification_channel PK). notification_id와 OR/AND 조건으로 사용 가능."
              }
            ],
            "description": "검색할 채널의 UUID (attendance_notification_channel PK). notification_id와 OR/AND 조건으로 사용 가능."
          },
          "status": {
            "oneOf": [
              {
                "type": "string",
                "description": "알림 발송 시도 상태값(pending, delivered, failed, retried 등). Prisma의 status 컬럼 참조, 문자열 비교. 다중/OR 조건 허용 시 상태 필터링에 활용."
              },
              {
                "type": "null",
                "description": "알림 발송 시도 상태값(pending, delivered, failed, retried 등). Prisma의 status 컬럼 참조, 문자열 비교. 다중/OR 조건 허용 시 상태 필터링에 활용."
              }
            ],
            "description": "알림 발송 시도 상태값(pending, delivered, failed, retried 등). Prisma의 status 컬럼 참조, 문자열 비교. 다중/OR 조건 허용 시 상태 필터링에 활용."
          },
          "sent_after": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "검색/조회 시작 시각(발송 시점 기준 ISO8601). sent_at 컬럼 기준, 필터링 범위/통계 목적 사용."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "검색/조회 시작 시각(발송 시점 기준 ISO8601). sent_at 컬럼 기준, 필터링 범위/통계 목적 사용."
              }
            ],
            "description": "검색/조회 시작 시각(발송 시점 기준 ISO8601). sent_at 컬럼 기준, 필터링 범위/통계 목적 사용."
          },
          "sent_before": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "검색/조회 종료 시각(발송 시점 기준 ISO8601). sent_at 컬럼 기준, 필터링 범위/통계 목적 사용."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "검색/조회 종료 시각(발송 시점 기준 ISO8601). sent_at 컬럼 기준, 필터링 범위/통계 목적 사용."
              }
            ],
            "description": "검색/조회 종료 시각(발송 시점 기준 ISO8601). sent_at 컬럼 기준, 필터링 범위/통계 목적 사용."
          },
          "page": {
            "oneOf": [
              {
                "type": "integer",
                "description": "페이징 요청 page 번호, default 1(최소 1~). IPage 표준과 일관."
              },
              {
                "type": "null",
                "description": "페이징 요청 page 번호, default 1(최소 1~). IPage 표준과 일관."
              }
            ],
            "description": "페이징 요청 page 번호, default 1(최소 1~). IPage 표준과 일관."
          },
          "limit": {
            "oneOf": [
              {
                "type": "integer",
                "description": "한 페이지 반환 데이터 갯수(기본값: 20-100 범위 권장)."
              },
              {
                "type": "null",
                "description": "한 페이지 반환 데이터 갯수(기본값: 20-100 범위 권장)."
              }
            ],
            "description": "한 페이지 반환 데이터 갯수(기본값: 20-100 범위 권장)."
          }
        },
        "required": [],
        "description": "attendance_notification_history(알림 전송 이력) 리스트 검색/필터링/페이징 요청 오브젝트.\n\n알림 마스터/채널별 delivery 결과, 상태(h/pending/done), 기간별 집계 통계 등에 맞춘 자유로운 검색 API용 파라미터. 모든 컬럼은 옵셔널, 해당 조건 주어질 때만 필터링."
      },
      "IPageIAttendanceNotificationHistory": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceNotificationHistory"
            }
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "attendance_notification_history(알림 이력) 다수결과 페이징 배열+메타데이터 반환 구조.\n\nIPage 표준에 기반하며, 대시보드/관리조회/통계 등에서 알림 전송 결과 집계 및 상세 UI 연동에 사용."
      },
      "IAttendanceNotificationHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "알림 이력(History) PK. attendance_notification_history UUID."
          },
          "notification_id": {
            "type": "string",
            "format": "uuid",
            "description": "이 이력이 속한 알림 이벤트(mater)의 UUID. attendance_notification PK 참조.\n\n각 delivery 별로 1:N 관계를 가짐."
          },
          "channel_id": {
            "type": "string",
            "format": "uuid",
            "description": "해당 전송이 시도된 채널(UUID). attendance_notification_channel PK 참조.\n\n이력은 알림(이벤트)별·채널별 모두 다르게 관리/저장됨."
          },
          "sent_at": {
            "type": "string",
            "format": "date-time",
            "description": "발송 시도 일시(ISO8601 UTC). 발송 요청 즉시 기록, 통계·대시보드 등 시간단위 집계에 활용."
          },
          "delivered_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "알림 실제 수신 처리된 시각(즉시/지연 발송 등 구분). 성공시만 기록, 미전달/실패시 NULL."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "알림 실제 수신 처리된 시각(즉시/지연 발송 등 구분). 성공시만 기록, 미전달/실패시 NULL."
              }
            ],
            "description": "알림 실제 수신 처리된 시각(즉시/지연 발송 등 구분). 성공시만 기록, 미전달/실패시 NULL."
          },
          "status": {
            "type": "string",
            "description": "알림 발송 상태(pending, delivered, failed, retried 등 상태 문자열). 대시보드 및 발송 성공/실패 통계용으로 활용."
          },
          "error_message": {
            "oneOf": [
              {
                "type": "string",
                "description": "알림 전송 실패시 반환된 상세 에러 메시지(서버/외부프로바이더 응답 등). 성공시/정상전달시엔 NULL."
              },
              {
                "type": "null",
                "description": "알림 전송 실패시 반환된 상세 에러 메시지(서버/외부프로바이더 응답 등). 성공시/정상전달시엔 NULL."
              }
            ],
            "description": "알림 전송 실패시 반환된 상세 에러 메시지(서버/외부프로바이더 응답 등). 성공시/정상전달시엔 NULL."
          }
        },
        "required": [
          "id",
          "notification_id",
          "channel_id",
          "sent_at",
          "status"
        ],
        "description": "attendance_notification_history(알림 전송 이력/로깅 단건 객체).\n\n알림 이벤트별 채널, 발송시각(요청/성공), 상태, 에러메시지 등 모든 중요 이벤트를 atomic하게 기록. 대시보드 오류/이상 알림 이력 확인, 통계·감사 분석 UI의 테이블 단위로 주로 활용."
      },
      "IAttendanceNotificationHistory.ICreate": {
        "type": "object",
        "properties": {
          "notification_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 알림 이벤트(마스터) UUID (attendance_notification PK 참조). NULL 불가."
          },
          "channel_id": {
            "type": "string",
            "format": "uuid",
            "description": "알림을 전송할 채널 UUID (attendance_notification_channel PK 참조). NULL 불가."
          },
          "sent_at": {
            "type": "string",
            "format": "date-time",
            "description": "알림 발송 요청 시각(UTC ISO8601 기록). 실제 요청(시도/서버→provider)과 동기화 필요."
          },
          "delivered_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "실제 수신(전달 성공) 처리 일시(없으면 NULL)."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "실제 수신(전달 성공) 처리 일시(없으면 NULL)."
              }
            ],
            "description": "실제 수신(전달 성공) 처리 일시(없으면 NULL)."
          },
          "status": {
            "type": "string",
            "description": "전송 상태(pending, delivered, failed, retried 등). 전송 시도 때 기본값 'pending' 혹은 즉시 성공 시 'delivered' 입력."
          },
          "error_message": {
            "oneOf": [
              {
                "type": "string",
                "description": "전송 실패시의 provider/system 에러 상세 메시지. 정상(성공시) NULL; 실패/오류 발생시 여기 기록."
              },
              {
                "type": "null",
                "description": "전송 실패시의 provider/system 에러 상세 메시지. 정상(성공시) NULL; 실패/오류 발생시 여기 기록."
              }
            ],
            "description": "전송 실패시의 provider/system 에러 상세 메시지. 정상(성공시) NULL; 실패/오류 발생시 여기 기록."
          }
        },
        "required": [
          "notification_id",
          "channel_id",
          "sent_at",
          "status"
        ],
        "description": "알림 이력(attendance_notification_history) 신규 생성 API용 오브젝트.\n\n알림이 발송 시도되는 모든 이벤트별로 채널, 상태, 발송 일시, 실패시 에러 메시지(log) 등 원자 단위로 저장됨. 대시보드 실시간 모니터링/실패/재시도 관리에서 자동 활용."
      },
      "IAttendanceNotificationHistory.IUpdate": {
        "type": "object",
        "properties": {
          "sent_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "발송 시점(수정). 보정, 오류 수정시만 업데이트."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "발송 시점(수정). 보정, 오류 수정시만 업데이트."
              }
            ],
            "description": "발송 시점(수정). 보정, 오류 수정시만 업데이트."
          },
          "delivered_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "실도달/수신완료 시각. 오류 수정/데이터 보정 등 미/성공시점 변경."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "실도달/수신완료 시각. 오류 수정/데이터 보정 등 미/성공시점 변경."
              }
            ],
            "description": "실도달/수신완료 시각. 오류 수정/데이터 보정 등 미/성공시점 변경."
          },
          "status": {
            "oneOf": [
              {
                "type": "string",
                "description": "알림 전송 상태 문자열(pending|delivered|failed 등). 요청 body 내 미포함(NULL)시 원본값 유지. 상태 오류보정, 재시도 트리거, 수동 처리 등에서 변경."
              },
              {
                "type": "null",
                "description": "알림 전송 상태 문자열(pending|delivered|failed 등). 요청 body 내 미포함(NULL)시 원본값 유지. 상태 오류보정, 재시도 트리거, 수동 처리 등에서 변경."
              }
            ],
            "description": "알림 전송 상태 문자열(pending|delivered|failed 등). 요청 body 내 미포함(NULL)시 원본값 유지. 상태 오류보정, 재시도 트리거, 수동 처리 등에서 변경."
          },
          "error_message": {
            "oneOf": [
              {
                "type": "string",
                "description": "알림 전송 실패/오류시 에러메시지(서버/Provider). NULL이면 성공, 값 입력시 오류 상태."
              },
              {
                "type": "null",
                "description": "알림 전송 실패/오류시 에러메시지(서버/Provider). NULL이면 성공, 값 입력시 오류 상태."
              }
            ],
            "description": "알림 전송 실패/오류시 에러메시지(서버/Provider). NULL이면 성공, 값 입력시 오류 상태."
          }
        },
        "required": [],
        "description": "알림 전송 이력(단건) 정보 업데이트/보정 API용 오브젝트.\n\n상태/에러/시각 정보 등 실제 전달결과를 실시간 반영, 대시보드/오류 모니터링/수동처리 및 감차케이스에 활용됨."
      },
      "IAttendanceNotification.IDeleteResponse": {
        "type": "object",
        "description": "attendance_notification 엔터티 삭제(알림 삭제) API의 응답 타입입니다. 본 타입은 삭제가 성공적으로 수행되었을 때 클라이언트에 반환하는 데이터 구조로, 실제 정책 및 로직에 따라 삭제 완료 플래그(예: success: true), 삭제된 알림의 식별자, 혹은 audit log/metadata 등의 정보를 포함할 수 있습니다.\n\n표준적 활용 예시:\n- 알림 삭제 성공 시 응답: { \"success\": true, \"deletedId\": \"...uuid...\" }\n- 삭제 실패/이미 삭제된 경우: HTTP 상태코드 및 예외 메시지가 별도 처리됨(이 타입에는 포함 X)\n\n업무 정책상, 응답 본문이 비어있거나 삭제된 알림의 최소 식별자만 제공되어도 무관함. 시스템에 따라 소프트 삭제/하드 삭제 정책이 다를 수 있으니 프론트 연동 시 정책 안내 필요.\n\n기본 필드 설명:\n- success: 삭제 성공 여부(boolean, true/false).\n- deletedId: 실제 삭제 처리된 attendance_notification의 id(UUID).",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "알림 삭제(탈퇴)가 정상적으로 처리됐는지 여부. true면 삭제 성공, false면 실패(단, 실패 응답 시에는 보통 전체 응답이 에러구조/별도 처리됨).\n\n예시: true"
          },
          "deletedId": {
            "type": "string",
            "format": "uuid",
            "description": "삭제된(소프트 또는 하드 삭제) attendance_notification 엔터티의 PK(uuid)값.\n\n예시: \"0d5030c8-3ff4-4a93-8231-6a4c7e987fed\""
          }
        },
        "required": [
          "success",
          "deletedId"
        ]
      },
      "IAttendanceStatsDaily.IRequest": {
        "type": "object",
        "description": "일별 출석 통계(IAttendanceStatsDaily) 조회 및 검색을 위한 조건 객체입니다. 통계 대시보드, 관리자/교사용 조회, 기간별 필터 기능 등에서 사용되는 요청 파라미터 구조입니다.\n\nschoolId, classroomId, day, 기간, 카운트, 페이징·정렬 옵션 필드 및 통합 검색 기능을 지원합니다. 반드시 일자/학교/반 식별(또는 조합)으로 필터가 가능합니다.",
        "properties": {
          "schoolId": {
            "type": "string",
            "format": "uuid",
            "description": "대상 학교 식별자(UUID). attendance_school.id. 해당 학교에 속한 일별 통계만 조회/검색할 때 사용합니다."
          },
          "classroomId": {
            "type": "string",
            "format": "uuid",
            "description": "기준 학급의 식별자(UUID). attendance_classroom.id. 주어진 반(학급)에 대한 일별 출석통계만 조회할 때 사용합니다."
          },
          "fromDay": {
            "type": "string",
            "description": "검색 시작일자(YYYY-MM-DD, ISO포맷 문자열). 기간 조회 시 검색 범위 시작일입니다."
          },
          "toDay": {
            "type": "string",
            "description": "검색 종료일자(YYYY-MM-DD, ISO포맷 문자열). 기간 조회 시 검색 범위 마지막 날짜입니다."
          },
          "minPresentCount": {
            "type": "integer",
            "description": "출석 인원이 최소 minPresentCount명 이상인 기록만 검색합니다.",
            "minimum": 0
          },
          "minLateCount": {
            "type": "integer",
            "description": "지각 인원이 최소 minLateCount명 이상 등 하한 옵션입니다.",
            "minimum": 0
          },
          "minAbsentCount": {
            "type": "integer",
            "description": "결석 인원 하한 필터(해당 값 이상일 때만 표시).",
            "minimum": 0
          },
          "minEarlyLeaveCount": {
            "type": "integer",
            "description": "조퇴 인원 하한 필터(해당 값 이상만 검색).",
            "minimum": 0
          },
          "sortBy": {
            "oneOf": [
              {
                "const": "day",
                "description": "정렬 기준 필드명입니다. day, presentCount 등만 지정 가능합니다."
              },
              {
                "const": "presentCount",
                "description": "정렬 기준 필드명입니다. day, presentCount 등만 지정 가능합니다."
              },
              {
                "const": "lateCount",
                "description": "정렬 기준 필드명입니다. day, presentCount 등만 지정 가능합니다."
              },
              {
                "const": "absentCount",
                "description": "정렬 기준 필드명입니다. day, presentCount 등만 지정 가능합니다."
              },
              {
                "const": "earlyLeaveCount",
                "description": "정렬 기준 필드명입니다. day, presentCount 등만 지정 가능합니다."
              }
            ],
            "description": "정렬 기준 필드명입니다. day, presentCount 등만 지정 가능합니다."
          },
          "sortOrder": {
            "oneOf": [
              {
                "const": "asc",
                "description": "오름차순(asc), 내림차순(desc) 중 선택."
              },
              {
                "const": "desc",
                "description": "오름차순(asc), 내림차순(desc) 중 선택."
              }
            ],
            "description": "오름차순(asc), 내림차순(desc) 중 선택."
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "description": "요청 페이지 번호(1 이상)."
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "description": "한 페이지당 최대 반환 항목 수(기본값 100, 1~200 사이)."
          },
          "search": {
            "type": "string",
            "description": "통합 키워드 검색(학교명/학급명/일자 등 자유 검색 필드, 대시보드 텍스트 검색에 사용)."
          }
        },
        "required": []
      },
      "IPageIAttendanceStatsDaily": {
        "type": "object",
        "description": "일별 출석 통계 리스트 + 페이지네이션 정보 컨테이너입니다. 대시보드 통합 조회 및 기간별/반별 통계 집계 화면에 사용됩니다.\n\n응답 data에는 IAttendanceStatsDaily 객체 배열, pagination에는 meta 정보(page, limit, total, pages 등)가 포함됩니다.",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceStatsDaily"
            },
            "description": "일별 출석 통계 레코드 배열."
          }
        },
        "required": []
      },
      "IAttendanceStatsDaily": {
        "type": "object",
        "description": "일별 출석 통계(대시보드/집계테이블) 단일 레코드 타입입니다. Prisma attendance_stats_daily 스키마 기준.\n\n특정 일, 학급(classroom), 학교(school)에 대한 출석률, 결석/지각/조퇴 건수, 생성/수정일 등 atomic 데이터로 구성됩니다.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "PK(ID, UUID). 일별 통계 단일 식별자. 시스템 전역에서 유일."
          },
          "classroomId": {
            "type": "string",
            "format": "uuid",
            "description": "대상 학급(반)의 식별자(Prisma attendance_classroom.id)."
          },
          "schoolId": {
            "type": "string",
            "format": "uuid",
            "description": "대상 학교 식별자(Prisma attendance_school.id)."
          },
          "day": {
            "type": "string",
            "description": "통계 대상 일자. YYYY-MM-DD 포맷 문자열."
          },
          "presentCount": {
            "type": "integer",
            "description": "출석 인원. 해당 일자/학급의 출석 처리 인원수(정규수업 기준).",
            "minimum": 0
          },
          "lateCount": {
            "type": "integer",
            "description": "지각 인원 수. 해당 일자/학급(반) 기준."
          },
          "absentCount": {
            "type": "integer",
            "description": "결석 인원. 기준 일/학급."
          },
          "earlyLeaveCount": {
            "type": "integer",
            "description": "조퇴 인원(정해진 시간 전 퇴실 학생수)."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "레코드의 생성 일시(ISO8601 DateTime, UTC)."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 최종수정일시(ISO8601 DateTime, UTC)."
          }
        },
        "required": [
          "id",
          "classroomId",
          "schoolId",
          "day",
          "presentCount",
          "lateCount",
          "absentCount",
          "earlyLeaveCount",
          "createdAt",
          "updatedAt"
        ]
      },
      "IAttendanceStatsDaily.ICreate": {
        "type": "object",
        "description": "일별 출석통계 신규 생성시(관리자/배치 작업 등), 등록 요청 바디 객체입니다. attendance_stats_daily 테이블 구조를 따릅니다.\n\nPK는 서버에서 직접 생성하며 요청 시에는 미포함(응답 시 반환).",
        "properties": {
          "classroomId": {
            "type": "string",
            "format": "uuid",
            "description": "등록할 일별 통계의 대상 학급(반) ID"
          },
          "schoolId": {
            "type": "string",
            "format": "uuid",
            "description": "등록할 출석통계의 대상 학교 ID"
          },
          "day": {
            "type": "string",
            "description": "신규 통계의 적용 일자. YYYY-MM-DD 포맷 문자열."
          },
          "presentCount": {
            "type": "integer",
            "description": "출석 인원 수. 0 이상의 값."
          },
          "lateCount": {
            "type": "integer",
            "description": "지각 인원수."
          },
          "absentCount": {
            "type": "integer",
            "description": "결석 인원 수."
          },
          "earlyLeaveCount": {
            "type": "integer",
            "description": "조퇴 인원 수."
          }
        },
        "required": [
          "classroomId",
          "schoolId",
          "day",
          "presentCount",
          "lateCount",
          "absentCount",
          "earlyLeaveCount"
        ]
      },
      "IAttendanceStatsDaily.IUpdate": {
        "type": "object",
        "description": "일별 출석통계 정보 수정용(Update) 요청 객체입니다. attendance_stats_daily PK(id)는 path param으로 전달, 요청 body에는 수정 대상 필드만 포함됩니다.\n\n모든 값은 atomic(단일 값)이며, null 허용 불가.",
        "properties": {
          "classroomId": {
            "type": "string",
            "format": "uuid",
            "description": "대상 학급 ID."
          },
          "schoolId": {
            "type": "string",
            "format": "uuid",
            "description": "대상 학교 ID."
          },
          "day": {
            "type": "string",
            "description": "적용 일자. YYYY-MM-DD."
          },
          "presentCount": {
            "type": "integer",
            "description": "출석 인원(수정시)."
          },
          "lateCount": {
            "type": "integer",
            "description": "지각 인원."
          },
          "absentCount": {
            "type": "integer",
            "description": "결석 인원."
          },
          "earlyLeaveCount": {
            "type": "integer",
            "description": "조퇴 인원."
          }
        },
        "required": []
      },
      "IAttendanceStatsStudentSummary.IRequest": {
        "type": "object",
        "description": "학생별 기간요약 통계 대시보드, 위험학생 탐지, 진도/출석 비교, 페이징·검색 API 요청 조건\n\n학생id, 반id, 기간(from~to), 카운트 조건, 검색/정렬/페이징 필드 포함 가능\n\nPrisma attendance_stats_student_summary 구조 활용.\n",
        "properties": {
          "studentId": {
            "type": "string",
            "format": "uuid",
            "description": "대상 학생 UUID(attendance_student.id). 단일 학생 요약만 필터할때 사용."
          },
          "classroomId": {
            "type": "string",
            "format": "uuid",
            "description": "대상 학급 UUID. 반별 서머리, 집계 보기용."
          },
          "fromPeriod": {
            "type": "string",
            "description": "검색 시작 기간(YYYY-MM-DD). 기간 필터에서 시작일자(semester, month, custom period 지원)."
          },
          "toPeriod": {
            "type": "string",
            "description": "검색 종료 기간(YYYY-MM-DD). 기간 조회 마지막 일자 지정시."
          },
          "sortBy": {
            "oneOf": [
              {
                "const": "periodStart",
                "description": "정렬 기준 필드명. 기간, 출석수, 지각수 등 지원."
              },
              {
                "const": "periodEnd",
                "description": "정렬 기준 필드명. 기간, 출석수, 지각수 등 지원."
              },
              {
                "const": "totalPresent",
                "description": "정렬 기준 필드명. 기간, 출석수, 지각수 등 지원."
              },
              {
                "const": "totalLate",
                "description": "정렬 기준 필드명. 기간, 출석수, 지각수 등 지원."
              },
              {
                "const": "totalAbsent",
                "description": "정렬 기준 필드명. 기간, 출석수, 지각수 등 지원."
              },
              {
                "const": "totalEarlyLeave",
                "description": "정렬 기준 필드명. 기간, 출석수, 지각수 등 지원."
              }
            ],
            "description": "정렬 기준 필드명. 기간, 출석수, 지각수 등 지원."
          },
          "sortOrder": {
            "oneOf": [
              {
                "const": "asc",
                "description": "정렬 방향(asc:오름차순, desc:내림차순)"
              },
              {
                "const": "desc",
                "description": "정렬 방향(asc:오름차순, desc:내림차순)"
              }
            ],
            "description": "정렬 방향(asc:오름차순, desc:내림차순)"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "description": "페이지 번호(1base: 1,2,3…)."
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "description": "한 페이지 반환 개수(최대 200, 기본 100)."
          },
          "search": {
            "type": "string",
            "description": "학생명, 클래스/학급명, 기간 기타 통합 텍스트 검색 필드"
          }
        },
        "required": []
      },
      "IPageIAttendanceStatsStudentSummary": {
        "type": "object",
        "description": "학생별 기간집계 통계 목록 페이지네이션 구조. 대시보드, 진도 집계, 위험학생 Analytics, 진도/출석 관리 등 용도에 사용.\n\ndata(key)는 IAttendanceStatsStudentSummary 배열, pagination은 IPage.IPagination 참조(현재페이지, 개수, 전체카운트, 전체페이지).",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceStatsStudentSummary"
            },
            "description": "학생별 기간요약 통계 배열."
          }
        },
        "required": []
      },
      "IAttendanceStatsStudentSummary": {
        "type": "object",
        "description": "학생별 기간집계 통계(semester/month/custom 기간별). Prisma attendance_stats_student_summary 기준.\n\n특정 학생 · 반 · 기간 별로 출석/지각/결석/조퇴 합계, 요약 정보 저장. ",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "PK(UUID). 해당 기간/stats서머리 단일 식별자"
          },
          "studentId": {
            "type": "string",
            "format": "uuid",
            "description": "대상 학생 UUID. attendance_student.id"
          },
          "classroomId": {
            "type": "string",
            "format": "uuid",
            "description": "소속 학급 UUID. attendance_classroom.id"
          },
          "periodStart": {
            "type": "string",
            "description": "요약집계 시작일자(YYYY-MM-DD)."
          },
          "periodEnd": {
            "type": "string",
            "description": "집계 종료일자(YYYY-MM-DD)."
          },
          "totalPresent": {
            "type": "integer",
            "description": "총 출석일수(합계)"
          },
          "totalLate": {
            "type": "integer",
            "description": "총 지각일수"
          },
          "totalAbsent": {
            "type": "integer",
            "description": "총 결석일수"
          },
          "totalEarlyLeave": {
            "type": "integer",
            "description": "총 조퇴일수(합계)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 생성일(UTC, ISO8601)"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 최종 수정일(UTC, ISO8601)"
          }
        },
        "required": [
          "id",
          "studentId",
          "classroomId",
          "periodStart",
          "periodEnd",
          "totalPresent",
          "totalLate",
          "totalAbsent",
          "totalEarlyLeave",
          "createdAt",
          "updatedAt"
        ]
      },
      "IAttendanceStatsStudentSummary.ICreate": {
        "type": "object",
        "description": "학생별 기간집계 통계 신규생성(관리자, 집계배치 등)용 바디 객체. attendance_stats_student_summary 테이블 insert시 사용.\n\nPK(id)는 API 서버에서 생성, 요청에는 시작/종료일, 대상(학생/학급) UUID, 합계 필드 필요.",
        "properties": {
          "studentId": {
            "type": "string",
            "format": "uuid",
            "description": "대상 학생 UUID."
          },
          "classroomId": {
            "type": "string",
            "format": "uuid",
            "description": "소속 클래스 UUID."
          },
          "periodStart": {
            "type": "string",
            "description": "집계 기간/시작일자(YYYY-MM-DD)."
          },
          "periodEnd": {
            "type": "string",
            "description": "집계 기간/마지막 일자(YYYY-MM-DD)."
          },
          "totalPresent": {
            "type": "integer",
            "description": "출석 합계(필수)"
          },
          "totalLate": {
            "type": "integer",
            "description": "지각 합계(필수)"
          },
          "totalAbsent": {
            "type": "integer",
            "description": "결석 합계(필수)"
          },
          "totalEarlyLeave": {
            "type": "integer",
            "description": "조퇴 합계(필수)"
          }
        },
        "required": [
          "studentId",
          "classroomId",
          "periodStart",
          "periodEnd",
          "totalPresent",
          "totalLate",
          "totalAbsent",
          "totalEarlyLeave"
        ]
      },
      "IAttendanceStatsStudentSummary.IUpdate": {
        "type": "object",
        "description": "학생별 기간요약 통계 정보 수정 API 용도 바디 스키마입니다. path param으로 id 지정, body에는 변경 필드만 노출.\n\n원본은 attendance_stats_student_summary 기준이며, atomic 수정 only/nullable 불가.\n",
        "properties": {
          "studentId": {
            "type": "string",
            "format": "uuid",
            "description": "대상 학생 UUID."
          },
          "classroomId": {
            "type": "string",
            "format": "uuid",
            "description": "소속 클래스 UUID."
          },
          "periodStart": {
            "type": "string",
            "description": "집계 시작일(YYYY-MM-DD)."
          },
          "periodEnd": {
            "type": "string",
            "description": "집계 종료일(YYYY-MM-DD)."
          },
          "totalPresent": {
            "type": "integer",
            "description": "출석 합계(수정값)"
          },
          "totalLate": {
            "type": "integer",
            "description": "지각 합계(수정값)"
          },
          "totalAbsent": {
            "type": "integer",
            "description": "결석 합계(수정값)"
          },
          "totalEarlyLeave": {
            "type": "integer",
            "description": "조퇴 합계(수정값)"
          }
        },
        "required": []
      },
      "IAttendanceStatsClassroomSummary.IRequest": {
        "type": "object",
        "description": "학급별 기간집계 통계 대시보드, 행정/통계 관리자/교사용 조회 등에서 사용하는 학급(반) 요약 통계 검색조건 객체.\n\nclassroomId, schoolId, 기간 범위, 정렬/검색/페이징 필드 포함.\nPrisma attendance_stats_classroom_summary 구조 참조.\n",
        "properties": {
          "classroomId": {
            "type": "string",
            "format": "uuid",
            "description": "대상 학급/반 UUID(attendance_classroom.id)"
          },
          "schoolId": {
            "type": "string",
            "format": "uuid",
            "description": "대상 학교 UUID(attendance_school.id)"
          },
          "fromPeriod": {
            "type": "string",
            "description": "검색 기간 시작일자(YYYY-MM-DD)"
          },
          "toPeriod": {
            "type": "string",
            "description": "검색 기간 마지막 일자(YYYY-MM-DD)"
          },
          "sortBy": {
            "oneOf": [
              {
                "const": "periodStart",
                "description": "정렬 기준 필드명(집계 시작/종료일, 합계 값 등)"
              },
              {
                "const": "periodEnd",
                "description": "정렬 기준 필드명(집계 시작/종료일, 합계 값 등)"
              },
              {
                "const": "totalPresent",
                "description": "정렬 기준 필드명(집계 시작/종료일, 합계 값 등)"
              },
              {
                "const": "totalLate",
                "description": "정렬 기준 필드명(집계 시작/종료일, 합계 값 등)"
              },
              {
                "const": "totalAbsent",
                "description": "정렬 기준 필드명(집계 시작/종료일, 합계 값 등)"
              },
              {
                "const": "totalEarlyLeave",
                "description": "정렬 기준 필드명(집계 시작/종료일, 합계 값 등)"
              }
            ],
            "description": "정렬 기준 필드명(집계 시작/종료일, 합계 값 등)"
          },
          "sortOrder": {
            "oneOf": [
              {
                "const": "asc",
                "description": "정렬 방향(오름, 내림차순)"
              },
              {
                "const": "desc",
                "description": "정렬 방향(오름, 내림차순)"
              }
            ],
            "description": "정렬 방향(오름, 내림차순)"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "description": "요청 페이지 번호(1 base)"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "description": "한 페이지 최대 반환 항목(최대 200, 기본 100)"
          },
          "search": {
            "type": "string",
            "description": "학급명, 기간 등 통합 텍스트 검색"
          }
        },
        "required": []
      },
      "IPageIAttendanceStatsClassroomSummary": {
        "type": "object",
        "description": "반(학급)별 기간집계 통계 리스트 페이지네이션+데이터 컨테이너.\n결과 data에 IAttendanceStatsClassroomSummary 배열, pagination에 IPage.IPagination 정보 포함.\n",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceStatsClassroomSummary"
            },
            "description": "반별 요약 통계 데이터 배열"
          }
        },
        "required": []
      },
      "IAttendanceStatsClassroomSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID(PK) 값. 하나의 반(학급)-기간 요약 요약의 고유 식별자입니다. 모든 참조, 삭제/수정 작업에서 사용됩니다.\n\nPrisma attendance_stats_classroom_summary.id와 직접 1:1 매핑되며, 시스템 전체에서 중복이 없는 값입니다."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "attendance_classroom UUID(FK).\n\n어떤 반(학급)에 대한 요약인지 명시합니다. FK 제약조건에 따라 반드시 유효한 반이 존재해야만 하며, 통계 대시보드, 기간별 통계 화면의 필터로도 사용됩니다."
          },
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "attendace_school UUID(FK).\n\n이 요약이 속한 학교/기관. 클래스와 별도로 학교 단위의 집계를 위해 반드시 구분해서 저장됩니다. 데이터의 상위 집계, 관리자 권한 필터에도 활용됩니다."
          },
          "period_start": {
            "type": "string",
            "description": "집계 시작일(YYYY-MM-DD형식, ISO8601). 기간통계의 시작 지점을 명확히 구분하기 위한 필수 필드입니다.\n\n예: \"2025-03-02\"\n매 집계별로 중복되면 안되며, 기간필터, 관리자 대시보드 등에 사용됩니다."
          },
          "period_end": {
            "type": "string",
            "description": "집계 종료일(YYYY-MM-DD형식, ISO8601). 한 기간 집계의 종료 지점입니다.\n\n집계/통계를 위한 고정 구간(월간/주간/학기별 등)에 따라 달라지며, 시작/종료 조합에 따라 유일성 제약이 있습니다."
          },
          "total_present": {
            "type": "integer",
            "description": "해당 기간(classroom, period)에 출석한 학생 일수의 총합입니다.\n\n교육 당국/교사 대시보드 집계에 사용되며, 학생별 일별 합산에 기반합니다."
          },
          "total_late": {
            "type": "integer",
            "description": "해당 기간(classroom, period)에 지각한 합계(학생 일수).\n\n출결 이상징후 분석, 월별 대시보드에서 하이라이트/랭킹 산정 등에 활용됩니다."
          },
          "total_absent": {
            "type": "integer",
            "description": "해당 기간(classroom, period)의 결석 횟수(학생 일수 기준 통계).\n\n관리자/교사/학부모 통계 및 트렌드 분석에 사용됩니다."
          },
          "total_early_leave": {
            "type": "integer",
            "description": "해당 기간(classroom, period)에 조퇴한 총 횟수(학생 일수 기준).\n\n내역 통계, 조퇴 랭킹, 이상징후 모니터링 등에 포함됩니다."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 생성 시각. ISO8601 UTC 시계열.\n\nPrisma 스키마의 created_at과 1:1. 대시보드 신규 생성/관리 시 레퍼런스로 활용."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "마지막 수정 시각. ISO8601 UTC 시계열.\n\nPrisma updated_at 필드와 1:1. 누적 통계 갱신, 변동 기록 관리에 반드시 활용됩니다."
          }
        },
        "required": [
          "id",
          "classroom_id",
          "school_id",
          "period_start",
          "period_end",
          "total_present",
          "total_late",
          "total_absent",
          "total_early_leave",
          "created_at",
          "updated_at"
        ],
        "description": "출석 통계 요약(반/학급+기간별) 정보를 담는 메인 오브젝트. 각 필드는 attendance_stats_classroom_summary 테이블 직접 매핑.\n\n- 교사·관리자 통계 대시보드/기간별 집계에서 집계 단위별 모든 필드가 필요.\n- 학생단위/기간단위 집계 통계 결과 반환에 사용.\n- 모든 속성은 Prisma 주석과 파라미터 정책을 따름."
      },
      "IAttendanceStatsClassroomSummary.ICreate": {
        "type": "object",
        "properties": {
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "신규 요약을 생성할 반(학급)의 UUID. FK 제약 강제."
          },
          "school_id": {
            "type": "string",
            "format": "uuid",
            "description": "소속 학교(기관)의 UUID. 필수 FK."
          },
          "period_start": {
            "type": "string",
            "description": "집계 시작일(YYYY-MM-DD, ISO8601)."
          },
          "period_end": {
            "type": "string",
            "description": "집계 종료일(YYYY-MM-DD, ISO8601)."
          },
          "total_present": {
            "type": "integer",
            "description": "기간 내 출석 합계."
          },
          "total_late": {
            "type": "integer",
            "description": "기간 내 지각 합계."
          },
          "total_absent": {
            "type": "integer",
            "description": "기간 내 결석 합계."
          },
          "total_early_leave": {
            "type": "integer",
            "description": "기간 내 조퇴 합계."
          }
        },
        "required": [
          "classroom_id",
          "school_id",
          "period_start",
          "period_end",
          "total_present",
          "total_late",
          "total_absent",
          "total_early_leave"
        ],
        "description": "통계 요약 레코드 신규 등록용(required field only). Prisma attendance_stats_classroom_summary의 생성(등록) 필드 정의에 따라 설계."
      },
      "IAttendanceStatsClassroomSummary.IUpdate": {
        "type": "object",
        "properties": {
          "period_start": {
            "type": "string",
            "description": "수정할 집계 시작일(YYYY-MM-DD, ISO8601)"
          },
          "period_end": {
            "type": "string",
            "description": "수정할 집계 종료일(YYYY-MM-DD, ISO8601)"
          },
          "total_present": {
            "type": "integer",
            "description": "수정할 출석 합계"
          },
          "total_late": {
            "type": "integer",
            "description": "수정할 지각 합계"
          },
          "total_absent": {
            "type": "integer",
            "description": "수정할 결석 합계"
          },
          "total_early_leave": {
            "type": "integer",
            "description": "수정할 조퇴 합계"
          }
        },
        "required": [
          "period_start",
          "period_end",
          "total_present",
          "total_late",
          "total_absent",
          "total_early_leave"
        ],
        "description": "집계 요약 레코드(반+기간)의 수정/갱신 용도 오브젝트. 값 변경만 허용, FK는 PK 체계에 의해 수정 제한."
      },
      "IAttendanceStatsAbnormalLog.IRequest": {
        "type": "object",
        "properties": {
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "특정 학생(혹은 전체)으로 필터링할 때 사용. attendance_student FK."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "특정 반(학급) 기준 검색에 사용. attendance_classroom FK."
          },
          "anomaly_type": {
            "type": "string",
            "description": "이상 유형(중복출결, 코드오류, 위치불일치 등)으로 필터링."
          },
          "anomaly_rule": {
            "type": "string",
            "description": "탐지 규칙/내부 알고리즘별로 조건검색(예:location_mismatch, code_invalid 등)"
          },
          "status": {
            "type": "string",
            "description": "open/closed/in_review 등 상태별 검색."
          },
          "period_start": {
            "type": "string",
            "description": "조회 시작일(YYYY-MM-DD)"
          },
          "period_end": {
            "type": "string",
            "description": "조회 종료일(YYYY-MM-DD)"
          },
          "page": {
            "type": "integer",
            "description": "페이지 넘버"
          },
          "limit": {
            "type": "integer",
            "description": "한 페이지 크기"
          }
        },
        "description": "이상출결 로그의 패치(검색/리스트) 조건 오브젝트. status/기간/유형/반/학생 등 주요 필터링을 지원함. Prisma attendance_stats_abnormal_log 컬럼 정책에 따름.",
        "required": []
      },
      "IPageIAttendanceStatsAbnormalLog": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceStatsAbnormalLog"
            }
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "이상출결 로그 페이징 결과 오브젝트. data는 로그 배열, pagination은 페이징/카운트 메타."
      },
      "IAttendanceStatsAbnormalLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "PK(UUID). attendance_stats_abnormal_log.id. 각 이상 징후(이벤트)의 고유 식별자입니다."
          },
          "attendance_record_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 attendance_attendance_record의 FK(UUID). 어떤 출결 기록에 연결된 이상 로그인지 직접 매핑. 3NF"
          },
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "학생 FK(UUID). 해당 이상 행동의 주체. attendance_student.id와 매핑."
          },
          "admin_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "처리한 관리자(처리자) FK(UUID), 없으면 null. Prisma admin_id 컬럼."
              },
              {
                "type": "null"
              }
            ],
            "description": "처리한 관리자(처리자) FK(UUID), 없으면 null. Prisma admin_id 컬럼."
          },
          "anomaly_type": {
            "type": "string",
            "description": "이상 유형(ex: duplicate, location_mismatch, code_invalid 등). 시스템/교사/관리자가 지정."
          },
          "anomaly_rule": {
            "type": "string",
            "description": "감지 적용된 정책/규칙 태그값. open/close 트리거에도 활용."
          },
          "status": {
            "type": "string",
            "description": "상태값(open/closed/in_review 등). 관리 대시보드, 미처리/처리완료 구분 UI에도 필수."
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "description": "이상 감지 발생 시각(UTC). Prisma occurred_at."
          },
          "resolved_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "이상 징후 처리/해결 시각(UTC, null일 수 있음). Prisma resolved_at."
              },
              {
                "type": "null"
              }
            ],
            "description": "이상 징후 처리/해결 시각(UTC, null일 수 있음). Prisma resolved_at."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "로그 생성 시각. Prisma created_at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "로그 변경/갱신 시각. Prisma updated_at."
          }
        },
        "required": [
          "id",
          "attendance_record_id",
          "student_id",
          "anomaly_type",
          "anomaly_rule",
          "status",
          "occurred_at",
          "created_at",
          "updated_at"
        ],
        "description": "이상 출결(비정상 출석) 탐지/처리 기록 엔터티.\n- 각 필드는 attendance_stats_abnormal_log 테이블 3NF 필수 컬럼에 정확하게 대응.\n- 관리/교사용 대시보드, 이상 탐지, 감사 사례별 내역 상세 조회에 사용.\n- 처리자(admin_id), resolved_at 등은 handling이 없는 경우 null 허용."
      },
      "IAttendanceStatsAbnormalLog.ICreate": {
        "type": "object",
        "properties": {
          "attendance_record_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 출결기록(attendance_attendance_record)의 UUID(FK)."
          },
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "주체 학생(attendance_student)의 UUID(FK)."
          },
          "anomaly_type": {
            "type": "string",
            "description": "이상 유형 코드. example: 'duplicate', 'proxy', 'late', 'location_mismatch' 등."
          },
          "anomaly_rule": {
            "type": "string",
            "description": "적용된 감지 규칙 코드(정책별 하드/소프트 구분링 등)."
          },
          "status": {
            "type": "string",
            "description": "초기 이상 상태. open, in_review, closed 등."
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "description": "이상 감지 이벤트 시각(UTC)"
          }
        },
        "required": [
          "attendance_record_id",
          "student_id",
          "anomaly_type",
          "anomaly_rule",
          "status",
          "occurred_at"
        ],
        "description": "이상출결 로그 신규 등록용 Create DTO. Prisma attendance_stats_abnormal_log의 생성규칙/컬럼 사용."
      },
      "IAttendanceStatsAbnormalLog.IUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "수정할 상태(open/closed/in_review 등)."
          },
          "admin_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "처리 관리자 UUID/PK, 없다면 null."
              },
              {
                "type": "null"
              }
            ],
            "description": "처리 관리자 UUID/PK, 없다면 null."
          },
          "resolved_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "해결시각(UTC, 해제시 null 허용)"
              },
              {
                "type": "null"
              }
            ],
            "description": "해결시각(UTC, 해제시 null 허용)"
          }
        },
        "description": "이상출결 로그 상태변경(처리/해제/완료 등) 업데이트에 사용되는 VO. 상태·관리자·해결일/해제로 제한. Prisma attendance_stats_abnormal_log 정책과 1:1 대응.",
        "required": []
      },
      "IAttendanceAccessLog.IRequest": {
        "type": "object",
        "properties": {
          "teacher_id": {
            "type": "string",
            "format": "uuid",
            "description": "필터링용 교사 FK(UUID), 출결시스템 접근 행위 교사구분."
          },
          "student_id": {
            "type": "string",
            "format": "uuid",
            "description": "필터링용 학생 FK(UUID), 학생 사용자별 접근 이벤트 분류."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "description": "필터링용 학부모(보호자) FK(UUID), 보호자별 접근로그 범위."
          },
          "admin_id": {
            "type": "string",
            "format": "uuid",
            "description": "필터링용 관리자(official) FK(UUID), 행정/교육청 등 구분관리용."
          },
          "classroom_id": {
            "type": "string",
            "format": "uuid",
            "description": "특정 반(학급) 기준 로그 필터링."
          },
          "ip_address": {
            "type": "string",
            "description": "IP주소 기반 행위탐지, 접근 필터링, 이상 IP 추적 등."
          },
          "user_agent": {
            "type": "string",
            "description": "사용자 에이전트 기반 분석, 디바이스별 통계 등."
          },
          "accessed_at_start": {
            "type": "string",
            "format": "date-time",
            "description": "조회 시작일(UTC)."
          },
          "accessed_at_end": {
            "type": "string",
            "format": "date-time",
            "description": "조회 종료일(UTC)."
          },
          "page": {
            "type": "integer",
            "description": "페이징-페이지 번호"
          },
          "limit": {
            "type": "integer",
            "description": "페이징-페이지 당 크기"
          }
        },
        "description": "access log(접속기록) 검색/필터용 리퀘스트 오브젝트. Prisma attendance_access_log 주요 컬럼 필터와 대시보드 요구에 따라 정의.",
        "required": []
      },
      "IPageIAttendanceAccessLog": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceAccessLog"
            }
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "접속 로그(AttendanceAccessLog) 페이징 결과 오브젝트. 리스트+페이징 메타 포함."
      },
      "IAttendanceAccessLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "PK(UUID). attendance_access_log.id. 접근이벤트의 고유 식별자."
          },
          "teacher_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "접속자-교사 FK, 없는 경우 null."
              },
              {
                "type": "null"
              }
            ],
            "description": "접속자-교사 FK, 없는 경우 null."
          },
          "student_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "접속자-학생 FK, 없는 경우 null."
              },
              {
                "type": "null"
              }
            ],
            "description": "접속자-학생 FK, 없는 경우 null."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "접속자-학부모(보호자) FK, 없는 경우 null."
              },
              {
                "type": "null"
              }
            ],
            "description": "접속자-학부모(보호자) FK, 없는 경우 null."
          },
          "admin_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "접속자-관리자(공무원 등) FK, 없는 경우 null."
              },
              {
                "type": "null"
              }
            ],
            "description": "접속자-관리자(공무원 등) FK, 없는 경우 null."
          },
          "classroom_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "반(학급) FK, 없는 경우 null."
              },
              {
                "type": "null"
              }
            ],
            "description": "반(학급) FK, 없는 경우 null."
          },
          "ip_address": {
            "type": "string",
            "description": "실제 접속 시점의 IP."
          },
          "user_agent": {
            "type": "string",
            "description": "접속 디바이스/브라우저 정보."
          },
          "device_id": {
            "oneOf": [
              {
                "type": "string",
                "description": "디바이스 ID/프린트/식별자 정보, 없는 경우 null."
              },
              {
                "type": "null"
              }
            ],
            "description": "디바이스 ID/프린트/식별자 정보, 없는 경우 null."
          },
          "accessed_at": {
            "type": "string",
            "format": "date-time",
            "description": "접근 행위 타임스탬프(UTC) - Prisma accessed_at"
          }
        },
        "required": [
          "id",
          "ip_address",
          "user_agent",
          "accessed_at"
        ],
        "description": "출결 시스템의 접속(액세스) 로그 단일 레코드.\n- 교사, 학생, 학부모, 관리자, 클래스 등 다양한 FK정규화 필드와 접속장치, IP, 타임스탬프를 모두 포함.\n- 실시간 모니터링, 감사, 이상탐지, 규정위반 추적 등에서 활용.\n- 모든 속성 Prisma attendance_access_log 컬럼 정의에 1:1 대응."
      },
      "IAttendanceAccessLog.ICreate": {
        "type": "object",
        "properties": {
          "teacher_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "접속자 교사-외래키(optional)"
              },
              {
                "type": "null"
              }
            ],
            "description": "접속자 교사-외래키(optional)"
          },
          "student_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "접속자 학생-외래키(optional)"
              },
              {
                "type": "null"
              }
            ],
            "description": "접속자 학생-외래키(optional)"
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "접속자 학부모-외래키(optional)"
              },
              {
                "type": "null"
              }
            ],
            "description": "접속자 학부모-외래키(optional)"
          },
          "admin_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "접속자 관리자-외래키(optional)"
              },
              {
                "type": "null"
              }
            ],
            "description": "접속자 관리자-외래키(optional)"
          },
          "classroom_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "접속 클래스-외래키(optional)"
              },
              {
                "type": "null"
              }
            ],
            "description": "접속 클래스-외래키(optional)"
          },
          "ip_address": {
            "type": "string",
            "description": "접속시점의 원본 IP주소"
          },
          "user_agent": {
            "type": "string",
            "description": "접속한 디바이스/브라우저 정보"
          },
          "device_id": {
            "oneOf": [
              {
                "type": "string",
                "description": "디바이스 식별자(optional, null 허용)"
              },
              {
                "type": "null"
              }
            ],
            "description": "디바이스 식별자(optional, null 허용)"
          },
          "accessed_at": {
            "type": "string",
            "format": "date-time",
            "description": "로그 타임스탬프, UTC"
          }
        },
        "required": [
          "ip_address",
          "user_agent",
          "accessed_at"
        ],
        "description": "접근 로그 신규 생성(Create)용 오브젝트. 필수 정보(IP, 에이전트, 시각), FK는 optional(접근자 role별로 null 허용). 모든 Prisma attendance_access_log 정책을 따름."
      },
      "IAttendanceAccessLog.IUpdate": {
        "type": "object",
        "properties": {
          "teacher_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "접근 이벤트를 발생시킨 교사 ID(teacher_id). Prisma attendance_access_log 테이블의 FK 컬럼으로, 본 로그가 교사 계정에서 발생한 경우 사용됩니다.\n\n교사 계정이 아닌 경우 null 처리해야 하며, 이 필드가 업데이트될 때는 교사-클래스 접근, 감사 규칙에 대해 고민해야 합니다. 예시: 출석 대시보드 접근."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "접근 이벤트를 발생시킨 교사 ID(teacher_id). Prisma attendance_access_log 테이블의 FK 컬럼으로, 본 로그가 교사 계정에서 발생한 경우 사용됩니다.\n\n교사 계정이 아닌 경우 null 처리해야 하며, 이 필드가 업데이트될 때는 교사-클래스 접근, 감사 규칙에 대해 고민해야 합니다. 예시: 출석 대시보드 접근."
              }
            ],
            "description": "접근 이벤트를 발생시킨 교사 ID(teacher_id). Prisma attendance_access_log 테이블의 FK 컬럼으로, 본 로그가 교사 계정에서 발생한 경우 사용됩니다.\n\n교사 계정이 아닌 경우 null 처리해야 하며, 이 필드가 업데이트될 때는 교사-클래스 접근, 감사 규칙에 대해 고민해야 합니다. 예시: 출석 대시보드 접근."
          },
          "student_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "본 접근 이벤트를 발생시킨 학생 ID(student_id). Prisma attendance_access_log 테이블의 FK. 학생 계정의 접근 로그에만 입력하며, 그 외(교사/관리자/학부모)는 null 사용.\n\n학생의 출석 기록 또는 이력 조회와 연결하는 데 사용됩니다."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "본 접근 이벤트를 발생시킨 학생 ID(student_id). Prisma attendance_access_log 테이블의 FK. 학생 계정의 접근 로그에만 입력하며, 그 외(교사/관리자/학부모)는 null 사용.\n\n학생의 출석 기록 또는 이력 조회와 연결하는 데 사용됩니다."
              }
            ],
            "description": "본 접근 이벤트를 발생시킨 학생 ID(student_id). Prisma attendance_access_log 테이블의 FK. 학생 계정의 접근 로그에만 입력하며, 그 외(교사/관리자/학부모)는 null 사용.\n\n학생의 출석 기록 또는 이력 조회와 연결하는 데 사용됩니다."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "본 접근 이벤트를 발생시킨 학부모 ID(parent_id). Prisma 테이블의 FK. 학부모 계정의 접근 로그일 때만 입력하며, 그 외는 null 지정.\n\n학부모 대시보드/알림 내역 조회 등 기록과 연결."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "본 접근 이벤트를 발생시킨 학부모 ID(parent_id). Prisma 테이블의 FK. 학부모 계정의 접근 로그일 때만 입력하며, 그 외는 null 지정.\n\n학부모 대시보드/알림 내역 조회 등 기록과 연결."
              }
            ],
            "description": "본 접근 이벤트를 발생시킨 학부모 ID(parent_id). Prisma 테이블의 FK. 학부모 계정의 접근 로그일 때만 입력하며, 그 외는 null 지정.\n\n학부모 대시보드/알림 내역 조회 등 기록과 연결."
          },
          "admin_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "본 접근 이벤트 주체가 관리자(교육청, 경찰 등)일 경우의 고유 식별자(admin_id). Prisma attendance_access_log 테이블 FK.\n\n접근 주체 구분을 위한 필드로, 시스템/감사 화면 접근 등에서 활용."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "본 접근 이벤트 주체가 관리자(교육청, 경찰 등)일 경우의 고유 식별자(admin_id). Prisma attendance_access_log 테이블 FK.\n\n접근 주체 구분을 위한 필드로, 시스템/감사 화면 접근 등에서 활용."
              }
            ],
            "description": "본 접근 이벤트 주체가 관리자(교육청, 경찰 등)일 경우의 고유 식별자(admin_id). Prisma attendance_access_log 테이블 FK.\n\n접근 주체 구분을 위한 필드로, 시스템/감사 화면 접근 등에서 활용."
          },
          "classroom_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "해당 접근 이벤트가 특정 학급/반(view, list, 대시보드)에 한정되는 경우 classroom FK.\n\n해당 반(클래스)에 연관된 접근/조회 로그 추적이 필요할 때 사용. Null 가능.\n\n예: 학급 대시보드 진입, 학생 목록 조회 등."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "해당 접근 이벤트가 특정 학급/반(view, list, 대시보드)에 한정되는 경우 classroom FK.\n\n해당 반(클래스)에 연관된 접근/조회 로그 추적이 필요할 때 사용. Null 가능.\n\n예: 학급 대시보드 진입, 학생 목록 조회 등."
              }
            ],
            "description": "해당 접근 이벤트가 특정 학급/반(view, list, 대시보드)에 한정되는 경우 classroom FK.\n\n해당 반(클래스)에 연관된 접근/조회 로그 추적이 필요할 때 사용. Null 가능.\n\n예: 학급 대시보드 진입, 학생 목록 조회 등."
          },
          "ip_address": {
            "type": "string",
            "description": "실제 접근 요청의 원격 IP 주소(비식별화 목적/감사 추적용). \n\nPrisma 테이블에서 atomic string 컬럼, 절대 null/blank 불가. 예: 192.168.1.10 등. \n\n모든 접근 이벤트는 반드시 남겨야 하며, 실무적으로 이상 징후(접근 위치, 탈취 시도 등) 감지에도 활용."
          },
          "user_agent": {
            "type": "string",
            "description": "클라이언트 환경에서 전송된 user-agent string. ex) Mozilla/5.0... 등. \n\n장치/환경 특성 진단과 보안 감사 목적으로 저장됩니다. null/공란 불가.\n\n서버 로깅, 이상접속 감지에 활용됨."
          },
          "device_id": {
            "oneOf": [
              {
                "type": "string",
                "description": "접근 당시 사용 디바이스의 식별 정보/디바이스 지문. Prisma 테이블 상 atomic, nullable 컬럼.\n\n모든 기록에 강제는 아니나, 추적/보안 감사 시 필수."
              },
              {
                "type": "null",
                "description": "접근 당시 사용 디바이스의 식별 정보/디바이스 지문. Prisma 테이블 상 atomic, nullable 컬럼.\n\n모든 기록에 강제는 아니나, 추적/보안 감사 시 필수."
              }
            ],
            "description": "접근 당시 사용 디바이스의 식별 정보/디바이스 지문. Prisma 테이블 상 atomic, nullable 컬럼.\n\n모든 기록에 강제는 아니나, 추적/보안 감사 시 필수."
          },
          "accessed_at": {
            "type": "string",
            "format": "date-time",
            "description": "접근 이벤트가 발생한 UTC 타임스탬프. Prisma 스키마의 non-nullable, audit 용 컬럼. \n\n접근 일시 기록을 위해 절대 null 불가, RFC3339 포맷 강제."
          }
        },
        "description": "출결 시스템 접근 로그(access_log) 업데이트용 타입.\n\nPrisma attendance_access_log 테이블의 update 케이스 및 복구/감사용 메타데이터 일부 정정 시 사용. 각 컬럼/설명은 atomic, non-denormalized로 엄격하게 유지.\n\n필드값은 event(접근자 유형별: 교사, 학생, 학부모, 관리자) 및 실제 접속/환경정보, 접근시간 등 접근 감사 요건을 모두 반영하여 내용을 제공해야 함.\n\n잘못 기록된 device_id/ip/user_agent 등 수정 목적이나, 정책상 가능한 제한 범위 내에서만 사용을 권고.",
        "required": []
      },
      "IAttendanceAuditLog.IRequest": {
        "type": "object",
        "properties": {
          "event_type": {
            "oneOf": [
              {
                "type": "string",
                "description": "검색 또는 필터를 위한 action(이벤트) 타입: attendance_edit, policy_update, data_export 등 Prisma attendance_audit_log 스키마 내 event_type 컬럼 참고.\n\n특정 이벤트 타입만 조회하려면 해당 값을 지정. 예: 'data_export'."
              },
              {
                "type": "null",
                "description": "검색 또는 필터를 위한 action(이벤트) 타입: attendance_edit, policy_update, data_export 등 Prisma attendance_audit_log 스키마 내 event_type 컬럼 참고.\n\n특정 이벤트 타입만 조회하려면 해당 값을 지정. 예: 'data_export'."
              }
            ],
            "description": "검색 또는 필터를 위한 action(이벤트) 타입: attendance_edit, policy_update, data_export 등 Prisma attendance_audit_log 스키마 내 event_type 컬럼 참고.\n\n특정 이벤트 타입만 조회하려면 해당 값을 지정. 예: 'data_export'."
          },
          "actor_type": {
            "oneOf": [
              {
                "type": "string",
                "description": "행위자 유형(teacher, student, parent, admin) 등. Prisma 테이블에 직접 컬럼은 없으나, teacher_id, admin_id 등과 조합해 검색/필터링에 사용.\n\nadmin 등 복수 유형 필터 대응. 미지정/null이면 전체."
              },
              {
                "type": "null",
                "description": "행위자 유형(teacher, student, parent, admin) 등. Prisma 테이블에 직접 컬럼은 없으나, teacher_id, admin_id 등과 조합해 검색/필터링에 사용.\n\nadmin 등 복수 유형 필터 대응. 미지정/null이면 전체."
              }
            ],
            "description": "행위자 유형(teacher, student, parent, admin) 등. Prisma 테이블에 직접 컬럼은 없으나, teacher_id, admin_id 등과 조합해 검색/필터링에 사용.\n\nadmin 등 복수 유형 필터 대응. 미지정/null이면 전체."
          },
          "actor_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "행위자(유저) id: 교사/학생/학부모/관리자 uuid. Prisma attendance_audit_log에서 teacher_id, admin_id 등과 조합 사용.\n\n특정 사용자가 남긴 감사 로그만 필터링할 때 입력. 지정하지 않으면 전체 쿼리."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "행위자(유저) id: 교사/학생/학부모/관리자 uuid. Prisma attendance_audit_log에서 teacher_id, admin_id 등과 조합 사용.\n\n특정 사용자가 남긴 감사 로그만 필터링할 때 입력. 지정하지 않으면 전체 쿼리."
              }
            ],
            "description": "행위자(유저) id: 교사/학생/학부모/관리자 uuid. Prisma attendance_audit_log에서 teacher_id, admin_id 등과 조합 사용.\n\n특정 사용자가 남긴 감사 로그만 필터링할 때 입력. 지정하지 않으면 전체 쿼리."
          },
          "classroom_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "특정 교실(반) 또는 단위 업무대상에 대한 검색 필터. Prisma attendance_audit_log 의 classroom_id 컬럼 기반.\n\n특정 학급 단위의 정책 변경/출결 일괄 처리 등의 로그 조회시 사용. 전체 검색 시 null."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "특정 교실(반) 또는 단위 업무대상에 대한 검색 필터. Prisma attendance_audit_log 의 classroom_id 컬럼 기반.\n\n특정 학급 단위의 정책 변경/출결 일괄 처리 등의 로그 조회시 사용. 전체 검색 시 null."
              }
            ],
            "description": "특정 교실(반) 또는 단위 업무대상에 대한 검색 필터. Prisma attendance_audit_log 의 classroom_id 컬럼 기반.\n\n특정 학급 단위의 정책 변경/출결 일괄 처리 등의 로그 조회시 사용. 전체 검색 시 null."
          },
          "success": {
            "oneOf": [
              {
                "type": "boolean",
                "description": "감사 로그 결과/성공 여부. Prisma 스키마 success 컬럼. true=성공, false=실패, null=전체.\n\n예: export 성공/실패 감사 최종 보고서에서 활용."
              },
              {
                "type": "null",
                "description": "감사 로그 결과/성공 여부. Prisma 스키마 success 컬럼. true=성공, false=실패, null=전체.\n\n예: export 성공/실패 감사 최종 보고서에서 활용."
              }
            ],
            "description": "감사 로그 결과/성공 여부. Prisma 스키마 success 컬럼. true=성공, false=실패, null=전체.\n\n예: export 성공/실패 감사 최종 보고서에서 활용."
          },
          "date_from": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "검색 시작 일시 범위 (RFC3339 date-time, UTC). audited_at(감사일자) 기준.\n시작일 미지정시 null."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "검색 시작 일시 범위 (RFC3339 date-time, UTC). audited_at(감사일자) 기준.\n시작일 미지정시 null."
              }
            ],
            "description": "검색 시작 일시 범위 (RFC3339 date-time, UTC). audited_at(감사일자) 기준.\n시작일 미지정시 null."
          },
          "date_to": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "검색 종료 일시 범위 (RFC3339 date-time, UTC). audited_at(감사일자) 기준.\n종료일 미지정시 null."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "검색 종료 일시 범위 (RFC3339 date-time, UTC). audited_at(감사일자) 기준.\n종료일 미지정시 null."
              }
            ],
            "description": "검색 종료 일시 범위 (RFC3339 date-time, UTC). audited_at(감사일자) 기준.\n종료일 미지정시 null."
          },
          "keyword": {
            "oneOf": [
              {
                "type": "string",
                "description": "자유 텍스트 키워드 검색: action_details, event_type 등 복합적 동적 검색.\n\n예: 내용에 'export' 또는 'policy'가 포함된 감사 로그만 조회할 때 사용.\n\n공지사항 내용(자유 텍스트, Null 시 전체)"
              },
              {
                "type": "null",
                "description": "자유 텍스트 키워드 검색: action_details, event_type 등 복합적 동적 검색.\n\n예: 내용에 'export' 또는 'policy'가 포함된 감사 로그만 조회할 때 사용.\n\n공지사항 내용(자유 텍스트, Null 시 전체)"
              }
            ],
            "description": "자유 텍스트 키워드 검색: action_details, event_type 등 복합적 동적 검색.\n\n예: 내용에 'export' 또는 'policy'가 포함된 감사 로그만 조회할 때 사용.\n\n공지사항 내용(자유 텍스트, Null 시 전체)"
          },
          "page": {
            "oneOf": [
              {
                "type": "integer",
                "minimum": 1,
                "description": "페이지네이션: 현재 페이지 (1부터 시작, null=첫 번째 페이지)\n\n실제 전체 페이지/건수는 반환 IPageIAttendanceAuditLog 페이지 메타에서 확인."
              },
              {
                "type": "null",
                "minimum": 1,
                "description": "페이지네이션: 현재 페이지 (1부터 시작, null=첫 번째 페이지)\n\n실제 전체 페이지/건수는 반환 IPageIAttendanceAuditLog 페이지 메타에서 확인."
              }
            ],
            "description": "페이지네이션: 현재 페이지 (1부터 시작, null=첫 번째 페이지)\n\n실제 전체 페이지/건수는 반환 IPageIAttendanceAuditLog 페이지 메타에서 확인."
          },
          "limit": {
            "oneOf": [
              {
                "type": "integer",
                "minimum": 1,
                "description": "페이지네이션: 페이지 당 항목 수 지정. null 또는 미입력 시 시스템 기본값 사용. 최소 1 이상 권장."
              },
              {
                "type": "null",
                "minimum": 1,
                "description": "페이지네이션: 페이지 당 항목 수 지정. null 또는 미입력 시 시스템 기본값 사용. 최소 1 이상 권장."
              }
            ],
            "description": "페이지네이션: 페이지 당 항목 수 지정. null 또는 미입력 시 시스템 기본값 사용. 최소 1 이상 권장."
          },
          "sort": {
            "oneOf": [
              {
                "type": "string",
                "description": "정렬 기준 필드 지정. 예: 'audited_at' 또는 'event_type' 등. null이면 기본값(최신순) 적용."
              },
              {
                "type": "null",
                "description": "정렬 기준 필드 지정. 예: 'audited_at' 또는 'event_type' 등. null이면 기본값(최신순) 적용."
              }
            ],
            "description": "정렬 기준 필드 지정. 예: 'audited_at' 또는 'event_type' 등. null이면 기본값(최신순) 적용."
          },
          "order": {
            "oneOf": [
              {
                "const": "asc",
                "description": "정렬 방향(asc 오름차순, desc 내림차순, 또는 null=기본값)."
              },
              {
                "const": "desc",
                "description": "정렬 방향(asc 오름차순, desc 내림차순, 또는 null=기본값)."
              },
              {
                "type": "null",
                "enum": [
                  "asc",
                  "desc",
                  null
                ],
                "description": "정렬 방향(asc 오름차순, desc 내림차순, 또는 null=기본값)."
              }
            ],
            "description": "정렬 방향(asc 오름차순, desc 내림차순, 또는 null=기본값)."
          }
        },
        "description": "감사 로그 조회/검색용 요청 타입. attendance_audit_log 테이블의 다중조건 검색, 페이지네이션/정렬 등에 사용.\n\nevent_type/actor_type 등 복합 필터 및 기간, 키워드 텍스트 등 다양한 조회조건이 반영됨.\n\nactor_type/actor_id를 조합해 특정 유저의 감사 로그, event_type으로 함수별 감사 로그를 조회하며, 성공/실패, 기간 범위 등 실무적 검색 요건을 모두 지원.",
        "required": []
      },
      "IPageIAttendanceAuditLog": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttendanceAuditLog"
            }
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "감사 로그 페이지네이션 데이터 타입. IAttendanceAuditLog 레코드 배열과 페이지 정보(IPage.IPagination)가 포함.\n\n복합 검색/검색조건 페이징 결과 리턴에 활용. page/block 별 결과와 총 건수(구현에 따라)."
      },
      "IAttendanceAuditLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "감사 로그의 고유 식별자(PK). attendance_audit_log 테이블의 id 컬럼."
          },
          "teacher_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "해당 감사 이벤트의 교사 FK. teacher 계정의 행위시만 기록, 나머지는 null 처리. Prisma audit_log teacher_id 컬럼 기반."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "해당 감사 이벤트의 교사 FK. teacher 계정의 행위시만 기록, 나머지는 null 처리. Prisma audit_log teacher_id 컬럼 기반."
              }
            ],
            "description": "해당 감사 이벤트의 교사 FK. teacher 계정의 행위시만 기록, 나머지는 null 처리. Prisma audit_log teacher_id 컬럼 기반."
          },
          "student_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "학생 계정 관련 감사 이벤트라면 그 유저의 uuid, 아닐 경우 null."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "학생 계정 관련 감사 이벤트라면 그 유저의 uuid, 아닐 경우 null."
              }
            ],
            "description": "학생 계정 관련 감사 이벤트라면 그 유저의 uuid, 아닐 경우 null."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "학부모가 관련된 감사 이벤트라면 그의 uuid, 아니면 null."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "학부모가 관련된 감사 이벤트라면 그의 uuid, 아니면 null."
              }
            ],
            "description": "학부모가 관련된 감사 이벤트라면 그의 uuid, 아니면 null."
          },
          "admin_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "관리자 계정 감사 이벤트에 해당시 FK, 애매할 땐 null. Prisma audit_log admin_id 컬럼."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "관리자 계정 감사 이벤트에 해당시 FK, 애매할 땐 null. Prisma audit_log admin_id 컬럼."
              }
            ],
            "description": "관리자 계정 감사 이벤트에 해당시 FK, 애매할 땐 null. Prisma audit_log admin_id 컬럼."
          },
          "classroom_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "반/클래스 단위 감사 로그인 경우 classroom_id, 아닐 땐 null."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "반/클래스 단위 감사 로그인 경우 classroom_id, 아닐 땐 null."
              }
            ],
            "description": "반/클래스 단위 감사 로그인 경우 classroom_id, 아닐 땐 null."
          },
          "event_type": {
            "type": "string",
            "description": "본 감사 로그의 이벤트 타입. 예시: attendance_edit, policy_update, data_export 등. 외부 정책/constant 값으로 enum화 권장. Prisma audit_log event_type 컬럼."
          },
          "action_details": {
            "type": "string",
            "description": "구체적으로 수행된 감사/행위 상세 요약/설명. 예: '2025-07-09 1반 전체 출결 수정', '엑셀 일괄 내보내기' 등 자유기술. Prisma audit_log action_details 컬럼의 atomic string."
          },
          "success": {
            "type": "boolean",
            "description": "본 감사 이벤트의 성공/실패 여부. True=성공, False=실패. Prisma audit_log success 컬럼."
          },
          "failed_reason": {
            "oneOf": [
              {
                "type": "string",
                "description": "성공=False일 때 실패 사유, 오류 구체 정보. 시스템 오류/권한 없음 등. Prisma audit_log failed_reason 컬럼. 성공시 null."
              },
              {
                "type": "null",
                "description": "성공=False일 때 실패 사유, 오류 구체 정보. 시스템 오류/권한 없음 등. Prisma audit_log failed_reason 컬럼. 성공시 null."
              }
            ],
            "description": "성공=False일 때 실패 사유, 오류 구체 정보. 시스템 오류/권한 없음 등. Prisma audit_log failed_reason 컬럼. 성공시 null."
          },
          "audited_at": {
            "type": "string",
            "format": "date-time",
            "description": "감사 이벤트 발생 UTC 타임스탬프. 반드시 입력 필요."
          }
        },
        "required": [
          "id",
          "event_type",
          "action_details",
          "success",
          "audited_at"
        ],
        "description": "attendance_audit_log의 각 감사 레코드 객체. 모든 atomic 필드, FK, 이벤트타입, 결과, 시각, 실패사유 등 담당.\n\n교사/학생/폴(parent)/관리자 등 접근 주체별로 FK 필드가 달라지며, Null/필수 구분을 명확히 따라야 함.\n\n실무상 정책상 필드 추가/확장(로그 상세화)시 반드시 atomic 구조로 유지."
      },
      "IAttendanceAuditLog.ICreate": {
        "type": "object",
        "properties": {
          "teacher_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "해당 감사 이벤트의 교사 FK, teacher 계정의 행위시만 기록. Null/생략시 비교정적 교사 이벤트임을 나타냄."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "해당 감사 이벤트의 교사 FK, teacher 계정의 행위시만 기록. Null/생략시 비교정적 교사 이벤트임을 나타냄."
              }
            ],
            "description": "해당 감사 이벤트의 교사 FK, teacher 계정의 행위시만 기록. Null/생략시 비교정적 교사 이벤트임을 나타냄."
          },
          "student_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "학생 계정의 경우 해당 유저 uuid, 그 외 null. Prisma attendance_audit_log 테이블 컬럼."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "학생 계정의 경우 해당 유저 uuid, 그 외 null. Prisma attendance_audit_log 테이블 컬럼."
              }
            ],
            "description": "학생 계정의 경우 해당 유저 uuid, 그 외 null. Prisma attendance_audit_log 테이블 컬럼."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "해당 감사 이벤트에 학부모 참여 혹은 트리거 관련시 명시, 아니라면 null."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "해당 감사 이벤트에 학부모 참여 혹은 트리거 관련시 명시, 아니라면 null."
              }
            ],
            "description": "해당 감사 이벤트에 학부모 참여 혹은 트리거 관련시 명시, 아니라면 null."
          },
          "admin_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "관리자(감사/관리) 계정이면 FK, 그 외 null. Prisma audit_log admin_id."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "관리자(감사/관리) 계정이면 FK, 그 외 null. Prisma audit_log admin_id."
              }
            ],
            "description": "관리자(감사/관리) 계정이면 FK, 그 외 null. Prisma audit_log admin_id."
          },
          "classroom_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "특정 반, 클래스 단위 감사 이벤트라면 해당 uuid, 아니면 null."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "특정 반, 클래스 단위 감사 이벤트라면 해당 uuid, 아니면 null."
              }
            ],
            "description": "특정 반, 클래스 단위 감사 이벤트라면 해당 uuid, 아니면 null."
          },
          "event_type": {
            "type": "string",
            "description": "감사 로그 종류(정책수정, 출결일괄변경 등 atomic string value, enum화 권장). Prisma audit_log event_type."
          },
          "action_details": {
            "type": "string",
            "description": "구체 행위/이벤트 설명. 예: '정책 일괄 변경, 대상 전체 학급', '파일 엑셀내보내기' 등. Prisma audit_log action_details atomic string."
          },
          "success": {
            "type": "boolean",
            "description": "해당 행위 성공여부. Prisma audit_log success 컬럼. True/False."
          },
          "failed_reason": {
            "oneOf": [
              {
                "type": "string",
                "description": "실패(성공=False)시 오류/실패내역/note 등. 성공/미할당시 null."
              },
              {
                "type": "null",
                "description": "실패(성공=False)시 오류/실패내역/note 등. 성공/미할당시 null."
              }
            ],
            "description": "실패(성공=False)시 오류/실패내역/note 등. 성공/미할당시 null."
          },
          "audited_at": {
            "type": "string",
            "format": "date-time",
            "description": "감사 이벤트 발생 UTC 타임스탬프. 필수 입력."
          }
        },
        "required": [
          "event_type",
          "action_details",
          "success",
          "audited_at"
        ],
        "description": "attendance_audit_log 신규 감사 레코드 생성용 오브젝트. 모든 atomic 필드, FK(주체별)/이벤트타입/행위상세/성공여부/실패사유/발생시각 필수값.\n\nPK(id)는 생성 시 서버에서 부여, 클라이언트는 미입력. 성공/실패 등 실무적 감사처리 정책에 따라 success/failed_reason 구분해 반드시 입력."
      },
      "IAttendanceAuditLog.IUpdate": {
        "type": "object",
        "properties": {
          "teacher_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "해당 감사 이벤트의 교사 FK, teacher 계정 접근/행위시만 기록, null=기타."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "해당 감사 이벤트의 교사 FK, teacher 계정 접근/행위시만 기록, null=기타."
              }
            ],
            "description": "해당 감사 이벤트의 교사 FK, teacher 계정 접근/행위시만 기록, null=기타."
          },
          "student_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "학생 계정 관련 감사 시 유저 uuid, 그 외 null."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "학생 계정 관련 감사 시 유저 uuid, 그 외 null."
              }
            ],
            "description": "학생 계정 관련 감사 시 유저 uuid, 그 외 null."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "본 이벤트가 학부모 관련/행위시 지정, 그 외 null."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "본 이벤트가 학부모 관련/행위시 지정, 그 외 null."
              }
            ],
            "description": "본 이벤트가 학부모 관련/행위시 지정, 그 외 null."
          },
          "admin_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "관리자 감사 이벤트면 FK(package), 그외 null."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "관리자 감사 이벤트면 FK(package), 그외 null."
              }
            ],
            "description": "관리자 감사 이벤트면 FK(package), 그외 null."
          },
          "classroom_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "감사 로그가 학급 단위라면 해당 classroom uuid, else null."
              },
              {
                "type": "null",
                "format": "uuid",
                "description": "감사 로그가 학급 단위라면 해당 classroom uuid, else null."
              }
            ],
            "description": "감사 로그가 학급 단위라면 해당 classroom uuid, else null."
          },
          "event_type": {
            "oneOf": [
              {
                "type": "string",
                "description": "감사 로그 이벤트 타입. null이면 미변경."
              },
              {
                "type": "null",
                "description": "감사 로그 이벤트 타입. null이면 미변경."
              }
            ],
            "description": "감사 로그 이벤트 타입. null이면 미변경."
          },
          "action_details": {
            "oneOf": [
              {
                "type": "string",
                "description": "실행/감사 상세 설명. null=미변경."
              },
              {
                "type": "null",
                "description": "실행/감사 상세 설명. null=미변경."
              }
            ],
            "description": "실행/감사 상세 설명. null=미변경."
          },
          "success": {
            "oneOf": [
              {
                "type": "boolean",
                "description": "성공= true/실패= false/null=변경안함."
              },
              {
                "type": "null",
                "description": "성공= true/실패= false/null=변경안함."
              }
            ],
            "description": "성공= true/실패= false/null=변경안함."
          },
          "failed_reason": {
            "oneOf": [
              {
                "type": "string",
                "description": "실패세부 내역, 성공시 null/비변경시 null."
              },
              {
                "type": "null",
                "description": "실패세부 내역, 성공시 null/비변경시 null."
              }
            ],
            "description": "실패세부 내역, 성공시 null/비변경시 null."
          },
          "audited_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "description": "감사 이벤트 발생 UTC 타임스탬프. null=미변경."
              },
              {
                "type": "null",
                "format": "date-time",
                "description": "감사 이벤트 발생 UTC 타임스탬프. null=미변경."
              }
            ],
            "description": "감사 이벤트 발생 UTC 타임스탬프. null=미변경."
          }
        },
        "description": "attendance_audit_log 일부/전체 필드 업데이트용 오브젝트 타입.\n\nPK(id)는 path/프론트 param으로 전달, 본 타입에는 포함하지 않음. Null은 기존값 유지, 비Null은 갱신. atomic 구조/3NF 반드시 유지.\n\n변경시 정책별(로그, 감사지침) 필드별 별개 처리.",
        "required": []
      }
    }
  }
}