import { tags } from "typia";

/**
 * Moderator role assignment entity for the board, as stored in
 * discussion_board_moderators.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardModerator = {
  /**
   * Primary key ID of this moderator assignment record.
   * discussion_board_moderators.id
   */
  id: string & tags.Format<"uuid">;

  /**
   * External/user identity uuid, email, or principal (platform unique) for
   * this moderator. discussion_board_moderators.user_identifier
   */
  user_identifier: string;

  /**
   * Timestamp when moderator was assigned.
   * discussion_board_moderators.granted_at
   */
  granted_at: string & tags.Format<"date-time">;

  /**
   * If moderator removed, timestamp. Null if active.
   * discussion_board_moderators.revoked_at
   */
  revoked_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IDiscussionBoardModerator {
  /** Advanced search and paging request structure for board moderators. */
  export type IRequest = {
    /**
     * Filter by moderator's user identity (UUID, email, or SSO ID).
     * Optional for search.
     */
    user_identifier?: string | null;

    /** Start of grant time filter for moderator search. Optional. */
    granted_at_from?: (string & tags.Format<"date-time">) | null;

    /** End of grant window for moderator lookup. Optional. */
    granted_at_to?: (string & tags.Format<"date-time">) | null;

    /** Start of revoked window for search. Optional. */
    revoked_at_from?: (string & tags.Format<"date-time">) | null;

    /** End of revoked window for filter. Optional. */
    revoked_at_to?: (string & tags.Format<"date-time">) | null;

    /** Requested page number for pagination. */
    page?: (number & tags.Type<"int32">) | null;

    /** Page size maximum for returned data. */
    limit?: (number & tags.Type<"int32">) | null;
  };

  /** Post body for creating/moderator assignment for board moderation. */
  export type ICreate = {
    /**
     * User to grant moderator. Must be valid in platform users. Unique per
     * moderator.
     *
     * Discussion_board_moderators.user_identifier
     */
    user_identifier: string;

    /**
     * Start timestamp for moderation rights. Usually now; can be in future
     * for deferred. discussion_board_moderators.granted_at
     */
    granted_at: string & tags.Format<"date-time">;

    /**
     * If assignment pre-configured to auto-revoke, set revoke time; else
     * null. discussion_board_moderators.revoked_at
     */
    revoked_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Request/update body for moderator entity records. Only specified fields
   * are changed; others remain unchanged.
   */
  export type IUpdate = {
    /**
     * (Optional) Change moderator user ID. For corrections/migrations.
     * Null/omit to leave unchanged.
     */
    user_identifier?: string | null;

    /**
     * (Optional) Change/correct grant timestamp. Null/omit to leave
     * unchanged.
     */
    granted_at?: (string & tags.Format<"date-time">) | null;

    /**
     * (Optional) Set/correct removed timestamp for moderation rights.
     * Null/omit to leave as is.
     */
    revoked_at?: (string & tags.Format<"date-time">) | null;
  };
}
