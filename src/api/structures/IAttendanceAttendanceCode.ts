import { tags } from "typia";

/**
 * 출석코드 개별 엔터티 타입입니다.
 *
 * Prisma attendance_attendance_code에 매핑되며, 코드 기반 출석 이벤트, 대시보드 정보, 만료 관리, 이상 탐지
 * 등 다양한 서비스 영역에서 활용됩니다.
 *
 * 각 필드는 atomic, 대시보드/감사·보안 이력에 활용할 핵심 정보만을 포함합니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAttendanceAttendanceCode = {
  /**
   * 출석코드 개별 Row의 PK(UUID)
   *
   * Prisma: attendance_attendance_code.id
   */
  id: string & tags.Format<"uuid">;

  /**
   * 코드가 귀속된 반(클래스) ID(PK)
   *
   * Prisma: attendance_attendance_code.classroom_id
   */
  classroom_id: string & tags.Format<"uuid">;

  /**
   * 코드를 발급한 교사 ID
   *
   * Prisma: attendance_attendance_code.teacher_id
   */
  teacher_id: string & tags.Format<"uuid">;

  /**
   * 실제 출석코드(6자리 알파넘)
   *
   * Prisma: attendance_attendance_code.code_value. 중복, 유니크, 케이스 등 서버단 검사
   */
  code_value: string;

  /**
   * 코드 발급 시각(생성 시점)
   *
   * Prisma: attendance_attendance_code.issued_at
   */
  issued_at: string & tags.Format<"date-time">;

  /**
   * 코드 만료 시각
   *
   * Prisma: attendance_attendance_code.expires_at
   */
  expires_at: string & tags.Format<"date-time">;

  /**
   * 현재 코드의 유효 여부 (true/false)
   *
   * Prisma: attendance_attendance_code.is_active
   */
  is_active: boolean;
};
export namespace IAttendanceAttendanceCode {
  /**
   * 출석코드(teacher가 발급한 6자리 등) 리스트를 대시보드·검색·감사용으로 조회할 때 사용하는 검색/페이징/정렬 파라미터 타입.
   *
   * Prisma attendance_attendance_code의 주요 atomic 필드에 기반해 설계했으며, 교사/관리자 대시보드,
   * 출석코드생성 UI, 이상감지/감사 등에서 다양하게 활용됩니다.
   *
   * Is_active=true/false, 기간(issued/expires), 소유자 필터(teacher_id) 등 다중 조건 복합
   * 검색 가능.
   */
  export type IRequest = {
    /**
     * 코드를 발급/소유한 교사의 ID로 필터하거나 전체 코드 중 소유자 기준 대시보드 조회합니다.
     *
     * Prisma: attendance_attendance_code.teacher_id
     */
    teacher_id?: string & tags.Format<"uuid">;

    /**
     * 코드가 속한 학급(반) ID, attendance_classroom.id 기준입니다.
     *
     * Prisma: attendance_attendance_code.classroom_id
     */
    classroom_id?: string & tags.Format<"uuid">;

    /**
     * 현재 사용중(활성)인 코드만 조회 여부입니다.
     *
     * Prisma: attendance_attendance_code.is_active = true/false.
     */
    is_active?: boolean;

    /**
     * 코드 발급(시작) 시간 범위 검색용.
     *
     * Prisma: attendance_attendance_code.issued_at >= issued_from
     */
    issued_from?: string & tags.Format<"date-time">;

    /**
     * 코드 발급(종료) 시간 범위 검색용.
     *
     * Prisma: attendance_attendance_code.issued_at <= issued_to
     */
    issued_to?: string & tags.Format<"date-time">;

    /**
     * 유효기간(시작) 기준 검색용
     *
     * Prisma: attendance_attendance_code.expires_at >= expires_from
     */
    expires_from?: string & tags.Format<"date-time">;

    /**
     * 유효기간(종료) 기준 검색용
     *
     * Prisma: attendance_attendance_code.expires_at <= expires_to
     */
    expires_to?: string & tags.Format<"date-time">;

    /**
     * 페이지네이션: 몇 번째 페이지를 조회할지(1-base index).
     *
     * Default = 1, 0이면 전체조회
     */
    page?: number & tags.Type<"int32">;

    /**
     * 페이지 당 최대 결과 개수.
     *
     * Default = 100, 0이면 전체 출력
     */
    limit?: number & tags.Type<"int32">;

    /**
     * 정렬 기준(column명: issued_at, expires_at, is_active 등)
     *
     * Default = issued_at desc
     */
    sort?: string;
  };

  /**
   * 출석코드 신규 생성 요청 타입입니다.
   *
   * Prisma attendance_attendance_code의 atomic 필드 구성을 따라 코드발급(교사), 유효기간/활성여부
   * 등을 제어하는 신규입력 컨트롤입니다.
   *
   * 코드값(code_value) 검증(중복, 규칙 등)은 서버단 검증 필요.
   */
  export type ICreate = {
    /**
     * 코드가 귀속될 학급(반) UUID
     *
     * Prisma: attendance_attendance_code.classroom_id
     */
    classroom_id: string & tags.Format<"uuid">;

    /**
     * 코드를 발급하는 교사 UUID
     *
     * Prisma: attendance_attendance_code.teacher_id
     */
    teacher_id: string & tags.Format<"uuid">;

    /**
     * 실제 학생이 사용할 출석코드(6자, 대문자/숫자)
     *
     * Prisma: attendance_attendance_code.code_value
     */
    code_value: string;

    /**
     * 코드 발급 시각
     *
     * Prisma: attendance_attendance_code.issued_at
     */
    issued_at: string & tags.Format<"date-time">;

    /**
     * 코드 만료 시각
     *
     * Prisma: attendance_attendance_code.expires_at
     */
    expires_at: string & tags.Format<"date-time">;

    /**
     * 발급 즉시 활성화 여부(true/false)
     *
     * Prisma: attendance_attendance_code.is_active
     */
    is_active: boolean;
  };

  /**
   * 출석코드(출석 인증, 코드 관리 등) 기존 Row의 전체 수정/갱신 요청 타입입니다.
   *
   * Prisma attendance_attendance_code의 atomic 정보 중 교체 가능한 항목 전체 포함(코드값, 시간정보,
   * 활성여부 등).
   */
  export type IUpdate = {
    /**
     * 코드가 귀속될 학급(반) UUID
     *
     * Prisma: attendance_attendance_code.classroom_id
     */
    classroom_id: string & tags.Format<"uuid">;

    /**
     * 코드를 발급하는 교사 UUID
     *
     * Prisma: attendance_attendance_code.teacher_id
     */
    teacher_id: string & tags.Format<"uuid">;

    /**
     * 실제 학생이 사용할 출석코드(6자, 대문자/숫자)
     *
     * Prisma: attendance_attendance_code.code_value
     */
    code_value: string;

    /**
     * 코드 발급 시점 변경 등
     *
     * Prisma: attendance_attendance_code.issued_at
     */
    issued_at: string & tags.Format<"date-time">;

    /**
     * 코드 만료 시점 조정
     *
     * Prisma: attendance_attendance_code.expires_at
     */
    expires_at: string & tags.Format<"date-time">;

    /**
     * 코드의 활성/비활성 전환(상태)
     *
     * Prisma: attendance_attendance_code.is_active
     */
    is_active: boolean;
  };
}
