import { tags } from "typia";

/**
 * Represents a single forum category entity as per the normalized 3NF schema in
 * discussion_board_forum_category. Used for board navigation, analytics, and
 * category CRUD endpoints.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardForumCategory = {
  /** Primary key for the forum category (discussion_board_forum_category.id). */
  id: string & tags.Format<"uuid">;

  /**
   * Human-friendly display label for the forum category. Must be unique
   * across the system. Example: "International Politics".
   */
  name: string;

  /**
   * Optional: Category description, may be used as UI tooltip, summary, or
   * search enrichment.
   */
  description?: string | null;

  /** Timestamp for when the category was created (ISO 8601, UTC). */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for the most recent update to the category record (ISO 8601,
   * UTC).
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IDiscussionBoardForumCategory {
  /**
   * Payload for finding and paginating forum categories
   * (discussion_board_forum_category). Used by admin, moderator, or
   * navigation APIs to filter, search, and list board categories with
   * paging.
   */
  export type IRequest = {
    /**
     * Optional: Filter categories by display name (case-insensitive,
     * supports partial match). Null disables name filtering.
     */
    name?: string | null;

    /**
     * Lower boundary for creation timestamp filter. Null disables this
     * boundary.
     */
    created_at_start?: (string & tags.Format<"date-time">) | null;

    /**
     * Upper boundary for creation timestamp filter. Null disables this
     * boundary.
     */
    created_at_end?: (string & tags.Format<"date-time">) | null;

    /**
     * Pagination: Page number (1-based). Optional; defaults to 1 if
     * omitted.
     */
    page?: (number & tags.Type<"int32">) | null;

    /**
     * Pagination: Maximum number of records per page. Optional; defaults to
     * 100.
     */
    limit?: (number & tags.Type<"int32">) | null;
  };

  /**
   * Payload for creating a new forum category
   * (discussion_board_forum_category). Expects at least a unique category
   * name and optionally a description.
   */
  export type ICreate = {
    /**
     * Display name for the forum category. Must be uniqueâ€”cannot conflict
     * with any existing board category. Example: "Global Economy". Required
     * field for category creation.
     */
    name: string;

    /** Optional: Category description for search/filtering or UI summary. */
    description?: string | null;
  };

  /**
   * Update payload for a forum category. Allows updating either/both name and
   * description for admin/moderator category management.
   */
  export type IUpdate = {
    /**
     * Optionally update the display name for the category. Set to null to
     * leave unchanged. Name must remain unique if modified.
     */
    name?: string | null;

    /**
     * Optionally update the description for this category; null disables
     * change.
     */
    description?: string | null;
  };
}
