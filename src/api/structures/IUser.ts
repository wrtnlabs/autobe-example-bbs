import { tags } from "typia";

import { IUserProfile } from "./IUserProfile";
import { IPage } from "./IPage";

/**
 * 개별 사용자 계정 엔터티.
 *
 * Prisma users 테이블을 기반으로 하며, 이메일 주소, 생성일시, 삭제 플래그(soft deletion) 등 모든 인증 및 감사
 * 컬럼을 포함합니다.
 *
 * 원자적인 데이터만 포함되며, 관련 프로필/권한 등은 외부 별도의 연관 타입을 활용해 $ref 처리해야 합니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IUser = {
  /**
   * 사용자 고유 식별자(Prisma users.id)입니다.
   *
   * 시스템 상 모든 활동 및 관계의 기준이 되는 PK입니다.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 이메일 주소(Prisma users.email).
   *
   * 로그인, 공지, 패스워드 초기화 등에서 사용하며, 유일성이 보장됩니다.
   */
  email: string;

  /**
   * 계정 생성 시각(Prisma users.created_at).
   *
   * 감사 로그 및 가입 이력, 정렬 등에 활용합니다.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * 계정 탈퇴(또는 soft-delete) 시각(Prisma users.deleted_at).
   *
   * 존재하지 않으면 계정이 활성 상태임을 의미합니다.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null;

  /**
   * 1:1 연결된 사용자 프로필 객체입니다.
   *
   * 실제 테이블에서는 user_profiles.user_id를 통해 외래키 관계를 가집니다.
   */
  profile?: IUserProfile;
};
export namespace IUser {
  /**
   * 검색, 필터링, 정렬, 페이징 조건이 포함된 사용자 목록 요청 스키마입니다.
   *
   * Prisma users 테이블과 관련이 있으며 이메일, 가입일, 상태(활성/삭제 여부)를 기준으로 사용자 목록을 조회할 때
   * 사용합니다. 관리자는 이 타입을 통해 대량 검색, 정렬, 페이징, 기타 감사 목적의 필터링을 수행할 수 있습니다.
   *
   * 모든 필드는 원자적이며, 추가 조건(정렬, 페이지네이션 등)은 내부적으로 별도의 명명된 타입을 참조해야 합니다.
   */
  export type IRequest = {
    /**
     * 이메일 주소로 검색할 때 사용합니다(Prisma users.email 컬럼 참조).
     *
     * 필요시 전체 또는 부분 일치를 허용합니다.
     */
    email?: string;

    /** 계정 생성 날짜의 시작 범위. YYYY-MM-DDThh:mm:ss.sssZ 포맷으로 사용합니다. */
    created_at_from?: string & tags.Format<"date-time">;

    /** 계정 생성 날짜의 종료 범위. YYYY-MM-DDThh:mm:ss.sssZ 포맷으로 사용합니다. */
    created_at_to?: string & tags.Format<"date-time">;

    /** 삭제(탈퇴)된 계정만 포함할지 여부. true로 설정하면 deleted_at이 null이 아닌 계정만 반환합니다. */
    deleted?: boolean;
    pagination?: IPage.IRequest;

    /** 정렬 기준(예: 'created_at desc', 'email asc' 등). */
    sort?: string;
  };

  /**
   * 신규 사용자 등록 시 사용하는 입력 데이터 모델.
   *
   * 이메일, 비밀번호(해시 전송 또는 평문, 후단에서 해시화), 초기 프로필 설정 등이 포함될 수 있습니다.
   *
   * Prisma users 테이블 고유 컬럼(이메일, 비밀번호) 및 참조 필드(프로필 등)를 포함합니다.
   */
  export type ICreate = {
    /** 등록할 사용자의 이메일(고유값, 필수). */
    email: string;

    /** 비밀번호(plaintext 혹은 해시값). 평문이면 전송 후 즉시 해시 처리해야 함. */
    password: string;

    /** 동시에 생성할 사용자 프로필 정보(선택). */
    profile?: IUserProfile.ICreate;
  };

  /**
   * 기존 사용자 계정 정보 수정 시 사용하는 입력 스키마.
   *
   * 수정 가능한 원자적 데이터만 포함합니다. 각 필드는 선택적으로 제공되며 비워둘 수 있습니다.
   *
   * 예: 이메일 변경, 비밀번호 변경, soft-delete 등. 관리자/본인/모더레이터에 따라 허용 필드가 달라질 수 있습니다.
   */
  export type IUpdate = {
    /** 이메일 주소. 중복되면 오류 반환. 관리자 또는 본인만 수정 허용. */
    email?: string;

    /** 변경할 비밀번호(plaintext 또는 해시). 추가 보안 검증 필요. */
    password?: string;

    /** Soft-delete 처리 시점. 복구 시 null로 초기화. */
    deleted_at?: string & tags.Format<"date-time">;
  };
}
