import { tags } from "typia";

/**
 * Attendance_audit_log의 각 감사 레코드 객체. 모든 atomic 필드, FK, 이벤트타입, 결과, 시각, 실패사유 등
 * 담당.
 *
 * 교사/학생/폴(parent)/관리자 등 접근 주체별로 FK 필드가 달라지며, Null/필수 구분을 명확히 따라야 함.
 *
 * 실무상 정책상 필드 추가/확장(로그 상세화)시 반드시 atomic 구조로 유지.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAttendanceAuditLog = {
  /** 감사 로그의 고유 식별자(PK). attendance_audit_log 테이블의 id 컬럼. */
  id: string & tags.Format<"uuid">;

  /**
   * 해당 감사 이벤트의 교사 FK. teacher 계정의 행위시만 기록, 나머지는 null 처리. Prisma audit_log
   * teacher_id 컬럼 기반.
   */
  teacher_id?: (string & tags.Format<"uuid">) | null;

  /** 학생 계정 관련 감사 이벤트라면 그 유저의 uuid, 아닐 경우 null. */
  student_id?: (string & tags.Format<"uuid">) | null;

  /** 학부모가 관련된 감사 이벤트라면 그의 uuid, 아니면 null. */
  parent_id?: (string & tags.Format<"uuid">) | null;

  /** 관리자 계정 감사 이벤트에 해당시 FK, 애매할 땐 null. Prisma audit_log admin_id 컬럼. */
  admin_id?: (string & tags.Format<"uuid">) | null;

  /** 반/클래스 단위 감사 로그인 경우 classroom_id, 아닐 땐 null. */
  classroom_id?: (string & tags.Format<"uuid">) | null;

  /**
   * 본 감사 로그의 이벤트 타입. 예시: attendance_edit, policy_update, data_export 등. 외부
   * 정책/constant 값으로 enum화 권장. Prisma audit_log event_type 컬럼.
   */
  event_type: string;

  /**
   * 구체적으로 수행된 감사/행위 상세 요약/설명. 예: '2025-07-09 1반 전체 출결 수정', '엑셀 일괄 내보내기' 등
   * 자유기술. Prisma audit_log action_details 컬럼의 atomic string.
   */
  action_details: string;

  /** 본 감사 이벤트의 성공/실패 여부. True=성공, False=실패. Prisma audit_log success 컬럼. */
  success: boolean;

  /**
   * 성공=False일 때 실패 사유, 오류 구체 정보. 시스템 오류/권한 없음 등. Prisma audit_log
   * failed_reason 컬럼. 성공시 null.
   */
  failed_reason?: string | null;

  /** 감사 이벤트 발생 UTC 타임스탬프. 반드시 입력 필요. */
  audited_at: string & tags.Format<"date-time">;
};
export namespace IAttendanceAuditLog {
  /**
   * 감사 로그 조회/검색용 요청 타입. attendance_audit_log 테이블의 다중조건 검색, 페이지네이션/정렬 등에 사용.
   *
   * Event_type/actor_type 등 복합 필터 및 기간, 키워드 텍스트 등 다양한 조회조건이 반영됨.
   *
   * Actor_type/actor_id를 조합해 특정 유저의 감사 로그, event_type으로 함수별 감사 로그를 조회하며,
   * 성공/실패, 기간 범위 등 실무적 검색 요건을 모두 지원.
   */
  export type IRequest = {
    /**
     * 검색 또는 필터를 위한 action(이벤트) 타입: attendance_edit, policy_update,
     * data_export 등 Prisma attendance_audit_log 스키마 내 event_type 컬럼 참고.
     *
     * 특정 이벤트 타입만 조회하려면 해당 값을 지정. 예: 'data_export'.
     */
    event_type?: string | null;

    /**
     * 행위자 유형(teacher, student, parent, admin) 등. Prisma 테이블에 직접 컬럼은 없으나,
     * teacher_id, admin_id 등과 조합해 검색/필터링에 사용.
     *
     * Admin 등 복수 유형 필터 대응. 미지정/null이면 전체.
     */
    actor_type?: string | null;

    /**
     * 행위자(유저) id: 교사/학생/학부모/관리자 uuid. Prisma attendance_audit_log에서
     * teacher_id, admin_id 등과 조합 사용.
     *
     * 특정 사용자가 남긴 감사 로그만 필터링할 때 입력. 지정하지 않으면 전체 쿼리.
     */
    actor_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 특정 교실(반) 또는 단위 업무대상에 대한 검색 필터. Prisma attendance_audit_log 의
     * classroom_id 컬럼 기반.
     *
     * 특정 학급 단위의 정책 변경/출결 일괄 처리 등의 로그 조회시 사용. 전체 검색 시 null.
     */
    classroom_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 감사 로그 결과/성공 여부. Prisma 스키마 success 컬럼. true=성공, false=실패, null=전체.
     *
     * 예: export 성공/실패 감사 최종 보고서에서 활용.
     */
    success?: boolean | null;

    /**
     * 검색 시작 일시 범위 (RFC3339 date-time, UTC). audited_at(감사일자) 기준. 시작일 미지정시
     * null.
     */
    date_from?: (string & tags.Format<"date-time">) | null;

    /**
     * 검색 종료 일시 범위 (RFC3339 date-time, UTC). audited_at(감사일자) 기준. 종료일 미지정시
     * null.
     */
    date_to?: (string & tags.Format<"date-time">) | null;

    /**
     * 자유 텍스트 키워드 검색: action_details, event_type 등 복합적 동적 검색.
     *
     * 예: 내용에 'export' 또는 'policy'가 포함된 감사 로그만 조회할 때 사용.
     *
     * 공지사항 내용(자유 텍스트, Null 시 전체)
     */
    keyword?: string | null;

    /**
     * 페이지네이션: 현재 페이지 (1부터 시작, null=첫 번째 페이지)
     *
     * 실제 전체 페이지/건수는 반환 IPageIAttendanceAuditLog 페이지 메타에서 확인.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null;

    /** 페이지네이션: 페이지 당 항목 수 지정. null 또는 미입력 시 시스템 기본값 사용. 최소 1 이상 권장. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null;

    /** 정렬 기준 필드 지정. 예: 'audited_at' 또는 'event_type' 등. null이면 기본값(최신순) 적용. */
    sort?: string | null;

    /** 정렬 방향(asc 오름차순, desc 내림차순, 또는 null=기본값). */
    order?: "asc" | "desc" | null;
  };

  /**
   * Attendance_audit_log 신규 감사 레코드 생성용 오브젝트. 모든 atomic 필드,
   * FK(주체별)/이벤트타입/행위상세/성공여부/실패사유/발생시각 필수값.
   *
   * PK(id)는 생성 시 서버에서 부여, 클라이언트는 미입력. 성공/실패 등 실무적 감사처리 정책에 따라
   * success/failed_reason 구분해 반드시 입력.
   */
  export type ICreate = {
    /** 해당 감사 이벤트의 교사 FK, teacher 계정의 행위시만 기록. Null/생략시 비교정적 교사 이벤트임을 나타냄. */
    teacher_id?: (string & tags.Format<"uuid">) | null;

    /** 학생 계정의 경우 해당 유저 uuid, 그 외 null. Prisma attendance_audit_log 테이블 컬럼. */
    student_id?: (string & tags.Format<"uuid">) | null;

    /** 해당 감사 이벤트에 학부모 참여 혹은 트리거 관련시 명시, 아니라면 null. */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /** 관리자(감사/관리) 계정이면 FK, 그 외 null. Prisma audit_log admin_id. */
    admin_id?: (string & tags.Format<"uuid">) | null;

    /** 특정 반, 클래스 단위 감사 이벤트라면 해당 uuid, 아니면 null. */
    classroom_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 감사 로그 종류(정책수정, 출결일괄변경 등 atomic string value, enum화 권장). Prisma
     * audit_log event_type.
     */
    event_type: string;

    /**
     * 구체 행위/이벤트 설명. 예: '정책 일괄 변경, 대상 전체 학급', '파일 엑셀내보내기' 등. Prisma
     * audit_log action_details atomic string.
     */
    action_details: string;

    /** 해당 행위 성공여부. Prisma audit_log success 컬럼. True/False. */
    success: boolean;

    /** 실패(성공=False)시 오류/실패내역/note 등. 성공/미할당시 null. */
    failed_reason?: string | null;

    /** 감사 이벤트 발생 UTC 타임스탬프. 필수 입력. */
    audited_at: string & tags.Format<"date-time">;
  };

  /**
   * Attendance_audit_log 일부/전체 필드 업데이트용 오브젝트 타입.
   *
   * PK(id)는 path/프론트 param으로 전달, 본 타입에는 포함하지 않음. Null은 기존값 유지, 비Null은 갱신.
   * atomic 구조/3NF 반드시 유지.
   *
   * 변경시 정책별(로그, 감사지침) 필드별 별개 처리.
   */
  export type IUpdate = {
    /** 해당 감사 이벤트의 교사 FK, teacher 계정 접근/행위시만 기록, null=기타. */
    teacher_id?: (string & tags.Format<"uuid">) | null;

    /** 학생 계정 관련 감사 시 유저 uuid, 그 외 null. */
    student_id?: (string & tags.Format<"uuid">) | null;

    /** 본 이벤트가 학부모 관련/행위시 지정, 그 외 null. */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /** 관리자 감사 이벤트면 FK(package), 그외 null. */
    admin_id?: (string & tags.Format<"uuid">) | null;

    /** 감사 로그가 학급 단위라면 해당 classroom uuid, else null. */
    classroom_id?: (string & tags.Format<"uuid">) | null;

    /** 감사 로그 이벤트 타입. null이면 미변경. */
    event_type?: string | null;

    /** 실행/감사 상세 설명. null=미변경. */
    action_details?: string | null;

    /** 성공= true/실패= false/null=변경안함. */
    success?: boolean | null;

    /** 실패세부 내역, 성공시 null/비변경시 null. */
    failed_reason?: string | null;

    /** 감사 이벤트 발생 UTC 타임스탬프. null=미변경. */
    audited_at?: (string & tags.Format<"date-time">) | null;
  };
}
