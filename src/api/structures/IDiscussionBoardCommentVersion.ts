import { tags } from "typia";

/**
 * Comment Version Entity representing an edit made to a comment. Fulfills
 * audit, edit history, and moderation transparency requirements. Matches 3NF
 * normalization by isolating change records from the comment entity. Each edit
 * creates one of these objects, referenced by parent comment and the editor.
 * Used for rollback and diff view. See schema comment for additional domain
 * guidance.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardCommentVersion = {
  /**
   * The unique identifier of this version entity. Referenced from moderation
   * or analytics tables. Required for audit traceability.
   */
  id: string & tags.Format<"uuid">;

  /**
   * ID of the parent comment this version belongs to. Ensures strict
   * referential integrity.
   */
  discussion_board_comment_id: string & tags.Format<"uuid">;

  /**
   * ID of the member who performed the edit. May be original author or
   * admin/moderator.
   */
  editor_member_id: string & tags.Format<"uuid">;

  /**
   * Full content snapshot for this version. Non-nullable; limited by business
   * rules. Used for audits and rollback.
   */
  content: string;

  /**
   * Timestamp of when the version was created. For ordering and audit
   * history.
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace IDiscussionBoardCommentVersion {
  /**
   * Request schema for searching/filtering/paginating comment version history
   * APIs. Used by backoffice, moderation, and audit endpoints to locate
   * specific version events or support timeline navigation.
   *
   * Allowable filters:
   *
   * - Editor_member_id: restrict to all edits by the same actor
   * - Created_at_from / created_at_to: date range
   * - Content_contains: substring search for the edited body
   *
   * Pagination controlled elsewhere or via request parameters. All fields
   * optional, except where paginated list parent requires page/limit.
   */
  export type IRequest = {
    /** Limit to versions created by this member (UUID) */
    editor_member_id?: string & tags.Format<"uuid">;

    /** Earliest creation time to include in results (UTC/ISO 8601) */
    created_at_from?: string & tags.Format<"date-time">;

    /** Latest creation time to include in filtered results */
    created_at_to?: string & tags.Format<"date-time">;

    /** Free-text search: find version snapshots containing this substring. */
    content_contains?: string;
  };

  /**
   * Request type for creating a new comment version (edit). Used by the
   * comment edit flow or moderation override. Must specify parent comment,
   * editor, and new content. Follows versioning and audit design. See schema
   * and business logic for details.
   */
  export type ICreate = {
    /** The parent comment's ID being edited. */
    discussion_board_comment_id: string & tags.Format<"uuid">;

    /**
     * The member ID performing the edit (original author or admin/moderator
     * on behalf).
     */
    editor_member_id: string & tags.Format<"uuid">;

    /** The new snapshot of comment text for this edit. */
    content: string;
  };

  /**
   * Type for updating a version record for compliance, moderator annotation,
   * or rare legal use. Only certain fields may be updated. Normally
   * append-only, updates permitted for compliance only. See schema and
   * business audit policy for details.
   */
  export type IUpdate = {
    /**
     * New content for this version. Edit only permitted by compliance or
     * moderation override.
     */
    content?: string;

    /**
     * (Optional) Change or correct editor attribution for this version. Set
     * only by admins/mods if justified.
     */
    editor_member_id?: string & tags.Format<"uuid">;
  };
}
