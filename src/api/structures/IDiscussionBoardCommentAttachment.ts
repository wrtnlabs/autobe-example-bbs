import { tags } from "typia";

/**
 * Attachment file metadata for a comment. Contains file URI, name, type, and
 * linking references. Used for download/view, moderation, and audit. See
 * requirement docs for allowed file types and security.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardCommentAttachment = {
  /** Unique identifier for each comment attachment. */
  id: string & tags.Format<"uuid">;

  /** Parent comment's ID this attachment belongs to. */
  discussion_board_comment_id: string & tags.Format<"uuid">;

  /** ID of member uploading the attachment. */
  uploader_member_id: string & tags.Format<"uuid">;

  /** Original filename at upload (e.g., 'example.jpg'). */
  file_name: string;

  /** Storage URI for the file (e.g., 'https://cdn.example.com/xyz'). */
  file_url: string;

  /** MIME type of the file (e.g., 'image/png'). */
  mime_type: string;

  /** Timestamp when file uploaded. */
  uploaded_at: string & tags.Format<"date-time">;
};
export namespace IDiscussionBoardCommentAttachment {
  /**
   * Search/filter request type for comment attachments. Allows filtering by
   * comment, uploader, mime type, file name, upload date, and pagination.
   * Used for advanced queries in comment attachment listing and moderation
   * workflows.
   */
  export type IRequest = {
    /**
     * ID of the parent comment to filter attachments (required for
     * scoping).
     */
    comment_id: string & tags.Format<"uuid">;

    /** Filter by uploader's member ID. */
    uploader_member_id?: string & tags.Format<"uuid">;

    /** Filter by MIME type (e.g., 'image/png'). */
    mime_type?: string;

    /** Partial or exact file name match filter. */
    file_name?: string;

    /** Filter for attachments uploaded after (inclusive) this time. */
    uploaded_from?: string & tags.Format<"date-time">;

    /** Filter for attachments uploaded before (inclusive) this time. */
    uploaded_to?: string & tags.Format<"date-time">;

    /** Requested page number (for pagination). */
    page?: number;

    /** Number of records per page. */
    limit?: number;
  };

  /**
   * Request body type for uploading a file attachment to a comment. Specifies
   * all upload and association fields. Used in member and moderator uploading
   * workflows.
   */
  export type ICreate = {
    /** Parent comment's ID for the attachment. */
    discussion_board_comment_id: string & tags.Format<"uuid">;

    /** ID of member uploading file. */
    uploader_member_id: string & tags.Format<"uuid">;

    /** Original file name as provided by uploader. */
    file_name: string;

    /** Permanent or pre-signed URI to the uploaded file. */
    file_url: string;

    /** File type for validation and browser rendering (e.g., 'image/jpeg'). */
    mime_type: string;
  };

  /**
   * Update type for a comment attachment. Only certain metadata can be
   * changed (not upload timestamp or uploader). Used in moderation/file
   * management flows.
   */
  export type IUpdate = {
    /** Change or correct the file name. Allowed for owner or admin/mod. */
    file_name?: string;

    /** Update, re-link, or correct the file's storage URI. */
    file_url?: string;

    /** Update/correct the MIME type if auto-detected or re-uploaded. */
    mime_type?: string;
  };
}
