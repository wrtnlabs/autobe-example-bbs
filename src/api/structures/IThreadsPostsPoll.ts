import { tags } from "typia";

import { IPoll } from "./IPoll";

/**
 * Alias for poll entity in ThreadsPosts module. Used when referencing polls in
 * endpoints, ensuring consistency with strict atomic schema definitions. See
 * IPoll for full property details.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IThreadsPostsPoll = IPoll;
export namespace IThreadsPostsPoll {
  /**
   * Request body for updating an existing poll. Permits editing of the
   * question, open and close times, following business logic for mod/admin
   * tools or compliance.
   *
   * Maps to atomic updatable fields on the polls entity in the ThreadsPosts
   * namespace.
   */
  export type IUpdate = {
    /**
     * Updated poll question. May only be changed under certain business
     * rules or before poll opening (admin only).
     *
     * Prisma: polls.question
     */
    question?: string;

    /**
     * Updated opening time for the poll. Policy may restrict updates after
     * start.
     *
     * Prisma: polls.start_at
     */
    start_at?: string & tags.Format<"date-time">;

    /**
     * New closing date for the poll. Null indicates perpetual poll; changes
     * governed by poll status.
     *
     * Prisma: polls.end_at
     */
    end_at?: (string & tags.Format<"date-time">) | null;
  };
}
