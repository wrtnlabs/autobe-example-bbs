import { tags } from "typia";

/**
 * Board administrator assignment entity from the database.
 *
 * Aligns to the discussion_board_admins table; describes full record per admin
 * user role assignment, for permission, audit, and management.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardAdmin = {
  /**
   * Primary key for the admin row.
   *
   * Referenced from discussion_board_admins Prisma schema.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The external or platform-unique identifier for the admin user (e.g.,
   * UUID, email, or SSO ID).
   *
   * Referenced from discussion_board_admins Prisma schema.
   */
  user_identifier: string;

  /**
   * Timestamp when admin privilege was assigned.
   *
   * Referenced from discussion_board_admins Prisma schema.
   */
  granted_at: string & tags.Format<"date-time">;

  /**
   * If privileges are revoked, the date/time. Null if assignment is currently
   * active.
   *
   * Referenced from discussion_board_admins Prisma schema.
   */
  revoked_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IDiscussionBoardAdmin {
  /**
   * Request/criteria for searching board admins in paginated fashion.
   *
   * Derived from search features in admin dashboards.
   */
  export type IRequest = {
    /**
     * Filter by the admin user's unique identifier (UUID, email, SSO ID).
     * Optional for search.
     */
    user_identifier?: string | null;

    /**
     * Start of grant date/time range for admin assignments to search.
     * Optional.
     */
    granted_at_from?: (string & tags.Format<"date-time">) | null;

    /** End of grant date/time range for search. Optional. */
    granted_at_to?: (string & tags.Format<"date-time">) | null;

    /** Start of revoke window for historical admin search. Optional. */
    revoked_at_from?: (string & tags.Format<"date-time">) | null;

    /** End of revoke window filter for search. Optional. */
    revoked_at_to?: (string & tags.Format<"date-time">) | null;

    /** Requested page number (for pagination). */
    page?: (number & tags.Type<"int32">) | null;

    /** Page size limit (per page). */
    limit?: (number & tags.Type<"int32">) | null;
  };

  /**
   * Request body for creating a new board admin assignment.
   *
   * Follows the writable/insertable fields from discussion_board_admins.
   */
  export type ICreate = {
    /**
     * User ID (platform or external) of the admin to assign. Must not
     * duplicate an existing admin's user_identifier.
     *
     * Referenced from discussion_board_admins Prisma schema.
     */
    user_identifier: string;

    /**
     * Timestamp when admin is assigned. Usually now, but can be set in
     * admin UI for future effect.
     *
     * Referenced from discussion_board_admins Prisma schema.
     */
    granted_at: string & tags.Format<"date-time">;

    /**
     * If assignment is preplanned to revoke, set time; else omit/null for
     * indefinite active.
     *
     * Referenced from discussion_board_admins Prisma schema.
     */
    revoked_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Request body for updating an admin assignment record.
   *
   * Follows updateable fields of discussion_board_admins.
   */
  export type IUpdate = {
    /**
     * (Optional) Update user identifier for the admin role, e.g., after
     * SSO/account mapping change. Omit/null to leave unchanged.
     *
     * Referenced from discussion_board_admins Prisma schema.
     */
    user_identifier?: string | null;

    /**
     * (Optional) Change/correct grant timestamp. Omit/null to keep
     * existing.
     *
     * Referenced from discussion_board_admins Prisma schema.
     */
    granted_at?: (string & tags.Format<"date-time">) | null;

    /**
     * (Optional) Mark or clear the revoked timestamp to enable/disable
     * admin role. Omit/null to keep as is.
     *
     * Referenced from discussion_board_admins Prisma schema.
     */
    revoked_at?: (string & tags.Format<"date-time">) | null;
  };
}
