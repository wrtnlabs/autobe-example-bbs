import { tags } from "typia";

/**
 * Attendance_notification_history(알림 전송 이력/로깅 단건 객체).
 *
 * 알림 이벤트별 채널, 발송시각(요청/성공), 상태, 에러메시지 등 모든 중요 이벤트를 atomic하게 기록. 대시보드 오류/이상 알림 이력
 * 확인, 통계·감사 분석 UI의 테이블 단위로 주로 활용.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAttendanceNotificationHistory = {
  /** 알림 이력(History) PK. attendance_notification_history UUID. */
  id: string & tags.Format<"uuid">;

  /**
   * 이 이력이 속한 알림 이벤트(mater)의 UUID. attendance_notification PK 참조.
   *
   * 각 delivery 별로 1:N 관계를 가짐.
   */
  notification_id: string & tags.Format<"uuid">;

  /**
   * 해당 전송이 시도된 채널(UUID). attendance_notification_channel PK 참조.
   *
   * 이력은 알림(이벤트)별·채널별 모두 다르게 관리/저장됨.
   */
  channel_id: string & tags.Format<"uuid">;

  /** 발송 시도 일시(ISO8601 UTC). 발송 요청 즉시 기록, 통계·대시보드 등 시간단위 집계에 활용. */
  sent_at: string & tags.Format<"date-time">;

  /** 알림 실제 수신 처리된 시각(즉시/지연 발송 등 구분). 성공시만 기록, 미전달/실패시 NULL. */
  delivered_at?: (string & tags.Format<"date-time">) | null;

  /**
   * 알림 발송 상태(pending, delivered, failed, retried 등 상태 문자열). 대시보드 및 발송 성공/실패
   * 통계용으로 활용.
   */
  status: string;

  /** 알림 전송 실패시 반환된 상세 에러 메시지(서버/외부프로바이더 응답 등). 성공시/정상전달시엔 NULL. */
  error_message?: string | null;
};
export namespace IAttendanceNotificationHistory {
  /**
   * Attendance_notification_history(알림 전송 이력) 리스트 검색/필터링/페이징 요청 오브젝트.
   *
   * 알림 마스터/채널별 delivery 결과, 상태(h/pending/done), 기간별 집계 통계 등에 맞춘 자유로운 검색 API용
   * 파라미터. 모든 컬럼은 옵셔널, 해당 조건 주어질 때만 필터링.
   */
  export type IRequest = {
    /** 검색 대상 attendance_notification(알림 이벤트 마스터) UUID. 단일/복수 알림 이력 탐색시 활용. */
    notification_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 검색할 채널의 UUID (attendance_notification_channel PK). notification_id와
     * OR/AND 조건으로 사용 가능.
     */
    channel_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 알림 발송 시도 상태값(pending, delivered, failed, retried 등). Prisma의 status
     * 컬럼 참조, 문자열 비교. 다중/OR 조건 허용 시 상태 필터링에 활용.
     */
    status?: string | null;

    /** 검색/조회 시작 시각(발송 시점 기준 ISO8601). sent_at 컬럼 기준, 필터링 범위/통계 목적 사용. */
    sent_after?: (string & tags.Format<"date-time">) | null;

    /** 검색/조회 종료 시각(발송 시점 기준 ISO8601). sent_at 컬럼 기준, 필터링 범위/통계 목적 사용. */
    sent_before?: (string & tags.Format<"date-time">) | null;

    /** 페이징 요청 page 번호, default 1(최소 1~). IPage 표준과 일관. */
    page?: (number & tags.Type<"int32">) | null;

    /** 한 페이지 반환 데이터 갯수(기본값: 20-100 범위 권장). */
    limit?: (number & tags.Type<"int32">) | null;
  };

  /**
   * 알림 이력(attendance_notification_history) 신규 생성 API용 오브젝트.
   *
   * 알림이 발송 시도되는 모든 이벤트별로 채널, 상태, 발송 일시, 실패시 에러 메시지(log) 등 원자 단위로 저장됨. 대시보드
   * 실시간 모니터링/실패/재시도 관리에서 자동 활용.
   */
  export type ICreate = {
    /** 대상 알림 이벤트(마스터) UUID (attendance_notification PK 참조). NULL 불가. */
    notification_id: string & tags.Format<"uuid">;

    /** 알림을 전송할 채널 UUID (attendance_notification_channel PK 참조). NULL 불가. */
    channel_id: string & tags.Format<"uuid">;

    /** 알림 발송 요청 시각(UTC ISO8601 기록). 실제 요청(시도/서버→provider)과 동기화 필요. */
    sent_at: string & tags.Format<"date-time">;

    /** 실제 수신(전달 성공) 처리 일시(없으면 NULL). */
    delivered_at?: (string & tags.Format<"date-time">) | null;

    /**
     * 전송 상태(pending, delivered, failed, retried 등). 전송 시도 때 기본값 'pending'
     * 혹은 즉시 성공 시 'delivered' 입력.
     */
    status: string;

    /** 전송 실패시의 provider/system 에러 상세 메시지. 정상(성공시) NULL; 실패/오류 발생시 여기 기록. */
    error_message?: string | null;
  };

  /**
   * 알림 전송 이력(단건) 정보 업데이트/보정 API용 오브젝트.
   *
   * 상태/에러/시각 정보 등 실제 전달결과를 실시간 반영, 대시보드/오류 모니터링/수동처리 및 감차케이스에 활용됨.
   */
  export type IUpdate = {
    /** 발송 시점(수정). 보정, 오류 수정시만 업데이트. */
    sent_at?: (string & tags.Format<"date-time">) | null;

    /** 실도달/수신완료 시각. 오류 수정/데이터 보정 등 미/성공시점 변경. */
    delivered_at?: (string & tags.Format<"date-time">) | null;

    /**
     * 알림 전송 상태 문자열(pending|delivered|failed 등). 요청 body 내 미포함(NULL)시 원본값
     * 유지. 상태 오류보정, 재시도 트리거, 수동 처리 등에서 변경.
     */
    status?: string | null;

    /** 알림 전송 실패/오류시 에러메시지(서버/Provider). NULL이면 성공, 값 입력시 오류 상태. */
    error_message?: string | null;
  };
}
