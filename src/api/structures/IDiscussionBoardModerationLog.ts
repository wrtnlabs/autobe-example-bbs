import { tags } from "typia";

/**
 * 모더레이션 로그 단일 엔티티 타입입니다.
 *
 * Prisma schema의 discussion_board_moderation_logs를 근거로, 각 조치 이벤트에 대한 상세 정보를
 * 기록합니다. 시스템 내 모든 모더레이터·관리자 조치의 내역이 단일 레코드로 남습니다. 각 필드는 원 DB 스키마의 컬럼별 주석·설계 목적을
 * 충실히 반영합니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardModerationLog = {
  /** 모더레이션 로그의 고유 식별자(UUID). discussion_board_moderation_logs의 PK로 사용됩니다. */
  id: string & tags.Format<"uuid">;

  /** 조치 대상 모더레이터 식별자. 모더레이션 행위를 담당한 모더레이터의 UUID입니다. */
  moderator_id: string & tags.Format<"uuid">;

  /** 대상 스레드(게시글)의 UUID. 이 로그가 특정 스레드에서 발생했을 때만 값이 존재합니다. */
  thread_id?: (string & tags.Format<"uuid">) | null;

  /** 대상 포스트(글)의 UUID(있을 때만). 특정 포스트 조치 로그의 경우에만 값이 채워집니다. */
  post_id?: (string & tags.Format<"uuid">) | null;

  /** 대상 댓글의 UUID(있을 때만). */
  comment_id?: (string & tags.Format<"uuid">) | null;

  /**
   * 단일 모더레이션 액션 코드(예: 'hide', 'delete', 'warn', 'edit').
   *
   * 이 조치가 어떤 유형의 행위였는지를 나타냅니다.
   */
  action: string;

  /** 조치 이유·상세 설명. 자유 텍스트로, 모더레이션 경위 설명에 사용합니다. */
  action_reason?: string | null;

  /**
   * 조치 로그가 발생한 시각(ISO8601). discussion_board_moderation_logs.created_at에서
   * 관리됩니다.
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace IDiscussionBoardModerationLog {
  /**
   * 모더레이션 로그(조치 이력) 검색을 위한 요청 DTO입니다.
   *
   * 특정 조건(모더레이터, 대상 스레드/포스트/댓글, 액션타입, 기간 등)으로 검색 및 페이징할 때 사용합니다. 본 DTO는
   * Prisma schema의 discussion_board_moderation_logs 테이블 코멘트와 운영 보안 로그 요구사항을
   * 충실히 반영하여 설계되었습니다.
   */
  export type IRequest = {
    /**
     * 유효한 모더레이터의 UUID입니다. 이 필드는 요청이 특정 모더레이터의 행동 로그 조회에 사용됩니다.
     *
     * 모데레이션 로그를 소유한 담당자 기준으로 필터링하는데 활용됩니다.
     */
    moderator_id?: string & tags.Format<"uuid">;

    /**
     * 대상 스레드의 UUID로, 해당 스레드에서 발생한 모데레이션 로그만 필터링할 때 사용합니다.
     *
     * 게시글(스레드) 단위의 모더레이션 추적에 쓰입니다.
     */
    thread_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 대상 포스트(글)의 UUID입니다. 이 값이 있으면 특정 글에 대한 모더레이션 액션만을 조회합니다.
     *
     * 포스트 단위의 모데레이션 역사 검색에 사용됩니다.
     */
    post_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 대상 댓글의 UUID입니다. 이 값이 있으면 특정 댓글에 관련된 모더레이션 로그만 조회합니다.
     *
     * 댓글 관련 조치 내역만 추출할 때 사용됩니다.
     */
    comment_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 모데레이션 액션의 타입(예: 'hide', 'delete', 'warn', 'edit' 등)입니다. 특정 액션만 필터링하고
     * 싶을 때 사용합니다.
     *
     * 모더레이터가 수행한 구체적인 조치 유형을 기준으로 로그 조회가 가능하게 합니다.
     */
    action?: string;

    /**
     * 필터 검색 시작 시점(포함)입니다(ISO8601 시각 값).
     *
     * 이 시각 이후의 모더레이션 로그만 반환합니다.
     */
    created_from?: string & tags.Format<"date-time">;

    /**
     * 필터 검색 종료 시점(포함)입니다(ISO8601 시각 값).
     *
     * 이 시각 이전의 모더레이션 로그만 반환합니다.
     */
    created_to?: string & tags.Format<"date-time">;

    /**
     * 검색할 페이지 번호입니다. 기본값은 1입니다.
     *
     * 검색 결과 페이징 시 어디서부터 시작할지 지정합니다.
     */
    page?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "uint32";
      }>;

    /**
     * 한 페이지에 반환할 최대 결과 수입니다. 기본값은 100입니다.
     *
     * 대량 결과에 대한 페이징 제어에 이용됩니다.
     */
    limit?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "uint32";
      }>;
  };

  /**
   * Discussion_board_moderation_logs 레코드 생성 요청 DTO입니다.
   *
   * Prisma discussion_board_moderation_logs 테이블 생성 조건을 따르며, 조치를 취한 모더레이터와 액션
   * 유형이 필수로 요구됩니다. 대상(thread/post/comment) 별로 필요시 UUID를 지정하며, 설명은 선택적으로 포함할 수
   * 있습니다.
   */
  export type ICreate = {
    /** 조치 담당 모더레이터의 UUID입니다. 반드시 유효한 모더레이터 계정을 사용해야 합니다. */
    moderator_id: string & tags.Format<"uuid">;

    /** 조치 대상이 되는 스레드(게시글)의 UUID. 전체 조치가 스레드 단위일 때 사용합니다. */
    thread_id?: (string & tags.Format<"uuid">) | null;

    /** 대상 포스트(UUID). 포스트에 대한 조치(삭제, 경고 등)일 때 사용합니다. */
    post_id?: (string & tags.Format<"uuid">) | null;

    /** 대상 댓글(UUID). 댓글 특정 조치(삭제, 경고 등)에 해당하는 경우만 기록합니다. */
    comment_id?: (string & tags.Format<"uuid">) | null;

    /** 수행한 단일 액션의 코드(예: 'hide','delete','warn','edit'). 필수 입력값입니다. */
    action: string;

    /** 사유에 대한 설명(필요할 때만 사용). 자유 텍스트입니다. */
    action_reason?: string | null;
  };

  /**
   * Discussion_board_moderation_logs 엔티티의 수정용 DTO입니다.
   *
   * 지원 정책에 따라 허용된 값(action_reason, action)을 제한적으로 수정할 때 사용합니다. Prisma 스키마의
   * 업데이트 가능 컬럼 주석을 반영했습니다.
   */
  export type IUpdate = {
    /** 조치 이유 및 부연 설명(변경이 필요한 경우에만 사용). */
    action_reason?: string | null;

    /** 업데이트할 액션 코드('hide', 'warn' 등). 수정이 필요한 경우에 입력합니다. */
    action?: string;
  };

  /**
   * Discussion_board_moderation_logs 레코드 삭제(soft-delete) 결과 반환 DTO입니다.
   *
   * 삭제 성공 여부, 메시지, 삭제된 로그의 식별자를 제공합니다. Prisma 스키마의 데이터 무결성·정책과 일치하는 설계입니다.
   */
  export type IDeleteResult = {
    /**
     * 삭제(soft-delete)가 성공했는지 여부.
     *
     * 출력 결과로 성공시 true, 실패시 false를 반환합니다.
     */
    success: boolean;

    /** 상세 결과 메시지(성공/실패 사유 등). */
    message: string;

    /** 실제 삭제된 모더레이션 로그 UUID(성공 시에만 포함, 실패면 null). */
    deleted_log_id?: (string & tags.Format<"uuid">) | null;
  };
}
