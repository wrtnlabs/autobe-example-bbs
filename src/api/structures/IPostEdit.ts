import { tags } from "typia";

/**
 * Single versioned post content snapshot for audit, edit history, and
 * moderation. This schema implements the versioning of post content required by
 * system transparency (Prisma post_edits model / requirements).
 *
 * Captures the full state of a post at a given moment, including editor, title,
 * body, edit reason, and origin IP. Used for rollback, evidence in disputes,
 * and editorial review.
 *
 * This record enables admin, moderator, and regular user views as needed, with
 * sensitive information (IP) for audit only.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IPostEdit = {
  /**
   * Unique identifier for this post edit record (primary key in post_edits).
   * Sourced from Prisma post_edits.id column—used for audit trail and
   * evidence.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Foreign key referencing the target post (posts.id). Relates this edit
   * snapshot to the specific post it versioned. Required for traceability and
   * dispute resolution.
   */
  post_id: string & tags.Format<"uuid">;

  /**
   * User ID of the editor (users.id), as described in post_edits.editor_id in
   * Prisma. Identifies who performed this specific edit—enables
   * accountability, audit, and author/moderator separation.
   */
  editor_id: string & tags.Format<"uuid">;

  /**
   * Post title at the time of this edit. Captures 'as-it-was' for
   * audit/history. Drawn from post_edits.title per schema normalization.
   */
  title: string;

  /**
   * Main body/content of the post for this edit version. Full original text,
   * preserving historical state for transparency—in IPostEdit.body per
   * schema.
   */
  body: string;

  /**
   * Stated reason for the edit (e.g., typo fix, clarification, moderation).
   * Enforced as atomic edit_reason field in Prisma post_edits for
   * evidence—never calculated from other values.
   */
  edit_reason: string;

  /**
   * Editor IP address at time of edit event, stored for audit/compliance per
   * post_edits.ip. May be protected from normal user display.
   */
  ip: string;

  /**
   * When this post edit snapshot was created. Auto-set using Prisma
   * post_edits.edited_at. Enables timeline/audit views and supports strict
   * auditability.
   */
  edited_at: string & tags.Format<"date-time">;
};
export namespace IPostEdit {
  /**
   * 포스트 편집 이력(post_edits) 검색 및 페이징 요청 타입입니다.
   *
   * 특정 포스트별, 에디터별 검색과 일반 리스트 조회를 모두 지원합니다.
   */
  export type IRequest = {
    /** 페이지 번호. */
    page?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "uint32";
          }>)
      | null;

    /** 페이지 당 최대 항목 수. */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "uint32";
          }>)
      | null;

    /** 특정 포스트(post_id) 기준 필터. */
    post_id?: (string & tags.Format<"uuid">) | null;

    /** 수정 담당자(사용자) 필터. */
    editor_id?: (string & tags.Format<"uuid">) | null;

    /** 키워드/본문 등으로 필터검색. */
    search?: string | null;
  };

  /**
   * Request DTO for creating a new post edit history entry (as described by
   * IPostEdit). Used to snapshot post changes for audit, transparency, and
   * rollback needs per requirements and Prisma model.
   *
   * Requires POST body to include all fields necessary to generate a full
   * versioned snapshot, except those auto-generated by the system (such as
   * edited_at). Used during post update workflows, especially for moderation
   * evidence.
   */
  export type ICreate = {
    /**
     * ID of the post being edited (posts.id reference). Required for
     * linking this snapshot to a tracked user post (see post_edits.post_id
     * in DB).
     */
    post_id: string & tags.Format<"uuid">;

    /**
     * Editor ID (users.id reference)—who made the edit. Used for audit,
     * accountability, and distinguishing moderator-invoked changes.
     */
    editor_id: string & tags.Format<"uuid">;

    /**
     * Post title at this version. Must be supplied as 'what the user
     * sees/edits' at the time of change.
     */
    title: string;

    /**
     * Main body/content of the post for this edit event. Must represent the
     * full current state (not just a diff/patch) for audit and evidence.
     */
    body: string;

    /**
     * Reason/justification for the edit (e.g., typo, clarification, admin
     * removal). Enforces moderation and dispute policy.
     */
    edit_reason: string;

    /**
     * Originating IP address of the editor, used for compliance, fraud
     * detection, and full audit trails.
     */
    ip: string;
  };

  /**
   * Request DTO for updating a post edit history/snapshot record (patching
   * metadata, correcting reason, or recovering administrative error). Used
   * for moderator/admin interventions, not normal user workflows.
   *
   * Fields are generally immutable except for edit_reason and (rarely)
   * body/title in exceptional admin workflows. Edits maintain audit and
   * compliance standards per requirements.
   */
  export type IUpdate = {
    /**
     * New/revised post title for this version, only editable by admins
     * (rare).
     */
    title?: string;

    /**
     * New/revised post body for this version, only editable by admin/mod in
     * rare compliance/appeal cases.
     */
    body?: string;

    /**
     * Corrected or updated reason string for the original edit, e.g., after
     * appeal or moderation follow-up.
     */
    edit_reason?: string;
  };
}
