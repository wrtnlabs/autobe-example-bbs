import { tags } from "typia";

/**
 * Attendance_notification_channel 알림 수신 채널 단건 레코드.
 *
 * 학생/부모/알림 타입/활성화/우선순위/생성일 등 모든 필드는 atomic 하게 개별적으로 관리되며, 실제 알림 이력(History)나
 * 이벤트 통계와 join시 Key로 사용합니다. 신규 채널 생성, 수정, 삭제 등 전체 사이클에 활용됩니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAttendanceNotificationChannel = {
  /**
   * 알림 채널 PK. attendance_notification_channel의 고유 식별자.
   *
   * 학생(자녀), 보호자(부모), 알림 경로를 1:N:N으로 식별/매핑 가능하게 하는 원자적 id입니다.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 채널이 연결된 학생(user) UUID. attendance_student의 PK와 참조관계를 가짐.
   *
   * 학생별로 여러 보호자와 다양한 채널(app/SMS/email)을 설정할 수 있습니다.
   */
  student_id: string & tags.Format<"uuid">;

  /**
   * 알림 채널이 연결된 부모(학부모) UUID. NULL이면 보호자 미지정(=학생 자체 설정)의 의미입니다.
   * attendance_parent의 PK 참조.
   *
   * 1명의 부모가 여러 자녀의 채널을 가질 수 있으나, 단일 채널은 1:1:1 구조(학생/부모/채널) 유지.
   */
  parent_id?: (string & tags.Format<"uuid">) | null;

  /**
   * 알림 경로 유형(app_push|sms|email 등).
   *
   * 채널 방식 정책 추가시 자유 확장, 시스템은 문자열로 처리. 예: 'app_push', 'sms', 'email' 등.
   */
  channel_type: string;

  /**
   * 해당 채널의 현재 활성/비활성 상태. 수신 거부, 앱 이용 해지 등 사용자가 직접 변경할 수 있음.
   *
   * 부모/관리자/학생이 알림사용/미사용 UI 구현에 활용.
   */
  is_enabled: boolean;

  /**
   * 본인/가족/학생별 알림수신 우선순위 설정. 낮을수록 우선/자동 선택됨.
   *
   * 정책상 동일 student 내에서 중복 우선순위 불가.
   */
  preference_order: number & tags.Type<"int32">;

  /**
   * 채널 설정(생성) 일시. 감사, 정책 변동 추적 등 시각적 기준.
   *
   * ISO8601 date-time 표준으로 서버 자동 저장.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * 알림 채널 정보 갱신/변경시 수정 시각(UTC). 모든 변경 이력 확인 및 동기화 관리.
   *
   * 감사/변경 로그 연동/개인정보보호 정책 준수.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IAttendanceNotificationChannel {
  /**
   * Attendance_notification_channel 알림 채널 리스트 검색/조회, 대시보드/설정용 필터.
   *
   * 학생/학부모/관리자 각 역할/권한별로 접근 가능한 채널 설정을 다양한 기준으로 조회할 수 있도록 설계되어 있습니다. 페이징, 정렬,
   * 조건 필터 등 실무 UI/업무 요구에 부응하며, 반환되는 데이터(IPageIAttendanceNotificationChannel)는
   * 필터 조건에 맞는 채널 배열 및 페이징 메타 정보를 포함합니다.
   */
  export type IRequest = {
    /**
     * 알림 채널이 설정된 학생의 고유 식별자입니다. Prisma attendance_notification_channel 테이블의
     * student_id 컬럼과 매핑되며, 페이징/검색 API에서 학생별 채널 설정을 조회/검색할 때 사용됩니다. NULL이 아닌
     * 경우 해당 학생의 채널만 필터링합니다.
     *
     * 고등학생/초등학생 등 모든 학년/학급에 대해 원자적이며, 부모가 여러 자녀를 관리하는 경우 각 자녀별 student_id로
     * 분리됩니다.
     */
    student_id?: string & tags.Format<"uuid">;

    /**
     * 해당 알림 채널이 연결된 보호자(학부모)의 UUID입니다. attendance_notification_channel 테이블의
     * parent_id와 매핑되며, NULL일 경우 부모 미지정 혹은 학생 본인 설정을 의미합니다. 부모/자녀 매핑 및
     * 보호자-학생별 알림 설정 관리에 활용됩니다.
     */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 알림 채널의 타입(앱푸시, SMS, 이메일 등)입니다. attendance_notification_channel 테이블
     * column: channel_type과 매핑되며, 'app_push', 'sms', 'email' 등 문자열로 구분합니다.
     * 특정 채널만 조회할 때 값 지정, 전체 검색시 NULL 허용.
     *
     * 기업 내 정책/설정 메뉴에서 각 타입별 활성/비활성 상태 조정에 사용됩니다.
     */
    channel_type?: string | null;

    /**
     * 해당 알림 채널이 현재 활성(true)/비활성(false) 상태인지 여부입니다.
     * attendance_notification_channel 컬럼 is_enabled와 매핑되며, NULL시 전체(활성/비활성)
     * 모두 검색 대상에 포함됩니다.
     *
     * 부모/학생이 직접 앱에서 채널 사용 여부(수신 거부 등) 변경 시 update용으로도 활용됩니다.
     */
    is_enabled?: boolean | null;

    /**
     * 알림 채널 우선순위(작을수록 높은 순위)입니다. Prisma 테이블의 preference_order 필드와 매핑되며,
     * NULL시 전체/우선순위 무관 검색, int 지정시 해당 값만 필터링합니다.
     *
     * 예: 앱푸시>SMS>이메일 순 자동전환·우선순위 정책에 활용.
     */
    preference_order?: (number & tags.Type<"int32">) | null;

    /**
     * 검색 결과 페이징의 현재 페이지 번호 (기본:1, 0~N 양수).
     *
     * 공통 IPage 구조와 호환되며, API response에서 data와 pagination을 분리/연동합니다.
     */
    page?: (number & tags.Type<"int32">) | null;

    /**
     * 한 페이지당 반환할 데이터 개수(기본값 20~100 권장, 최소 1). 페이지네이션 및 대용량 데이터 응답 최적화를 위한
     * 옵션입니다. 전체 row 수는 response의 pagination에서 제공.
     *
     * 페이징 쿼리 또는 대시보드 UI 반영시 활용.
     */
    limit?: (number & tags.Type<"int32">) | null;

    /**
     * 정렬 기준 컬럼 지정 값입니다. (예: 'created_at', 'preference_order'). 지정하지 않으면
     * 기본값(생성일 또는 PK)으로 자동 정렬됩니다.
     */
    sort_by?: string | null;

    /**
     * 오름차순('asc')/내림차순('desc') 등 정렬 방향 설정 옵션입니다. response의 data 순서 제어에 활용,
     * NULL시 기본 정렬 사용.
     */
    sort_order?: string | null;
  };

  /**
   * 알림 채널 신규등록 요청 오브젝트.
   *
   * 학생/부모/채널유형/활성화/우선순위 등 모든 필드 필수, NULL 허용되는 항목만 parent_id. 관리자/학부모/학생 권한별
   * 등록 API 활용.
   */
  export type ICreate = {
    /** 채널을 등록할 대상 학생 UUID (attendance_student PK). NULL 불가. 자녀별로 중복 없이 관리함. */
    student_id: string & tags.Format<"uuid">;

    /**
     * 해당 채널을 관리할 부모/보호자 UUID (attendance_parent PK). 학생 개별 관리 시 NULL 허용. 실제
     * 가족관계/권한 정책에 따라 활용.
     */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 등록할 알림 채널 유형(app_push|sms|email 등 문자열, ENUM 미고정). 반드시 채널명 표준화(소문자)로
     * 실무 적용. 예: 'sms', 'app_push', 'email'. 신규 확장 허용.
     */
    channel_type: string;

    /** 채널 활성화 상태(True=알림수신, False=수신거부/비활성화). 앱내/설정페이지에서 부모/학생이 직접 설정 가능. */
    is_enabled: boolean;

    /** 알림 우선순위(1=최우선, 숫자가 커질수록 후순위). 각 student/channel_type 조합 내 고유값 보장해야 함. */
    preference_order: number & tags.Type<"int32">;
  };

  /**
   * 알림 채널 단건(PK) 업데이트 API용 오브젝트.
   *
   * 업데이트 시 수정 원하는 필드만 선택적으로 포함, 미포함(NULL) 시 기존값 유지. 주로 부모/학생이 채널
   * 우선순위/활성화/비활성화 등 실무 설정을 변경하는 use case에서 사용.
   */
  export type IUpdate = {
    /**
     * 변경할 대상 학생 UUID(pk). NULL은 미수정, 지정시 업데이트. 학생 및 가족/보호자 간 이동(관리자 기능) 또는
     * 부모/학생이 직접 설정 시 사용.
     */
    student_id?: (string & tags.Format<"uuid">) | null;

    /** 부모 UUID. 가족구성, 권한 변경에 따른 보호자 연결 정보 수정에만 사용. */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 업데이트할 채널 타입(app_push|sms|email등), NULL시 기존값 유지; 실무상 채널 자체Type 변경보단
     * 활성화/비활성 트리거 용도로 사용.
     */
    channel_type?: string | null;

    /** 채널 활성/비활성 업데이트. true=수신, false=알림 무시/중지. NULL이면 현재 상태 유지. */
    is_enabled?: boolean | null;

    /** 알림 채널 우선순위 변경 시 지정. NULL시 미변경, int 지정시 우선순위 갱신. */
    preference_order?: (number & tags.Type<"int32">) | null;
  };

  /**
   * 알림 채널 단건 삭제 API 응답 오브젝트.
   *
   * 성공 플래그(success), 삭제된 채널 UUID(deleted_id)로 status를 명확히 구분하여 반환.
   * 비활성화/물리삭제/오류 등 모든 결과에 대한 일관된 응답 제공.
   */
  export type IDeleteResponse = {
    /**
     * 삭제 성공(true)/실패(false) 여부 플래그.
     *
     * 실제 삭제/비활성화 정책에 따라 true(성공) 또는 false(오류, 미삭제)를 API에서 전송.
     */
    success: boolean;

    /**
     * 실제 삭제된(또는 논리적 비활성화) 채널 UUID. 정상 처리시 해당 id, 실패시 null. 정책상 hard/soft
     * delete 모두 대응.
     */
    deleted_id?: (string & tags.Format<"uuid">) | null;
  };
}
