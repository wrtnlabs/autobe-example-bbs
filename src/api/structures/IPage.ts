import { tags } from "typia";

/**
 * Paginated list container object for list/search endpoints.
 *
 * Encapsulates paging controls and API result data array. Used for standard
 * responses to paginated search/filter queries (see IPage<T> in requirements).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IPage = {
  /** Page information and metadata, including current, limit, records, pages. */
  pagination: IPage.IPagination;

  /**
   * Paginated result set for the current call/endpoint; entity list for the
   * API.
   */
  data: {}[];
};
export namespace IPage {
  /**
   * Page information.
   *
   * Contains pagination metadata for results pages throughout the API.
   * Referenced by IPage<T> responses.
   */
  export type IPagination = {
    /** Current page number. */
    current: number & tags.Type<"int32">;

    /** Number of records per page. Default is 100 if not specified. */
    limit: number & tags.Type<"int32">;

    /** Total records in the database or result set. */
    records: number & tags.Type<"int32">;

    /** Total number of pages, computed as records/limit and rounded up. */
    pages: number & tags.Type<"int32">;
  };
}
