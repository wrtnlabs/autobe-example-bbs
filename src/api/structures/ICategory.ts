import { tags } from "typia";

/**
 * 토론 게시판의 주제분류(카테고리) 정보를 담는 엔터티입니다.
 *
 * 각 카테고리는 고유명, 설명, 생성일시 필드를 가지며 게시글(Posts)과 1:N 관계입니다. 관리자가 생성·관리하며, 게시글 작성 시
 * 반드시 할당해야 하는 구조입니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICategory = {
  /**
   * 카테고리의 고유 식별자(UUID).
   *
   * Prisma 'categories.id' 컬럼. 예: 'b4682df2-b264-4e1b-807d-381340390a64'.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 카테고리 이름(고유).
   *
   * Prisma 'categories.name' 컬럼. 예: '정치', '경제'
   */
  name: string;

  /**
   * 카테고리 상세 설명.
   *
   * Prisma 'categories.description' 컬럼. 예: '정치 제도와 관련된 모든 주제를 다룹니다.'
   */
  description: string;

  /**
   * 카테고리 생성 일시(ISO8601).
   *
   * Prisma 'categories.created_at' 컬럼. 예: '2024-06-09T09:00:00+09:00'.
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace ICategory {
  /**
   * 카테고리 리스트/검색 요청에 이용되는 필터, 검색, 페이징 정보 객체입니다.
   *
   * 카테고리 명, 설명, 기간 필터, 페이징 조작(페이지, limit) 등 검색 옵션을 다루며, 관리자 또는 일반 사용자의 카테고리
   * 목록 검색 시 활용됩니다.
   */
  export type IRequest = {
    /**
     * 필터링 또는 검색을 위한 카테고리 이름입니다.
     *
     * 예: '정치', '경제'
     */
    name?: string;

    /**
     * 카테고리 설명의 검색을 위한 옵션 필드입니다.
     *
     * 예: '정치 체계와 관련된 논의', '국제 경제 토론'
     */
    description?: string;

    /** 검색 시작일자(ISO8601 형식). 예: '2024-06-09T00:00:00+09:00'. */
    created_from?: string & tags.Format<"date-time">;

    /** 검색 종료일자(ISO8601 형식). 예: '2024-07-09T23:59:59+09:00'. */
    created_to?: string & tags.Format<"date-time">;

    /** 페이지 번호(1부터 시작). */
    page: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** 페이지당 반환할 레코드 수(기본값 100). */
    limit: number & tags.Type<"int32"> & tags.Minimum<1>;
  };

  /**
   * 카테고리 신규 생성시 전달하는 요청 바디 객체입니다.
   *
   * 이름(고유), 설명을 필수로 제공해야 하며, 관리자가 카테고리를 추가할 때 활용됩니다.
   */
  export type ICreate = {
    /** 신규 카테고리의 이름(고유). 예: '시사', '국제'. */
    name: string;

    /** 카테고리 상세 설명. 예: '글로벌 경제 및 정치 이슈를 다루는 공간입니다.' */
    description: string;
  };

  /**
   * 기존 카테고리의 이름·설명을 수정하는 요청 바디입니다.
   *
   * 두 필드 모두 선택적이며, 하나 또는 모두 변경할 수 있습니다.
   */
  export type IUpdate = {
    /** 변경할 카테고리명(옵션). 예: '사회' */
    name?: string;

    /** 변경할 카테고리 설명(옵션). */
    description?: string;
  };

  /**
   * 카테고리 삭제(soft/hard delete) 결과를 나타내는 오브젝트입니다.
   *
   * 성공/실패의 플래그 및 설명 메시지를 포함해 후처리 사용자 안내에 활용합니다.
   */
  export type IDeleteResult = {
    /** 삭제 성공 여부. true 이면 정상 삭제, false 이면 오류. */
    success: boolean;

    /** 삭제 결과 메시지(실패 이유, 성공 안내 등). */
    message: string;
  };
}
