import { tags } from "typia";

/**
 * 반(클래스) 정보 엔티티. attendance_classroom 개별 레코드.
 *
 * 학교, 교사, 학년, 이름, 생성/수정일 등 모든 필수 필드와 참조 관계 명시.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAttendanceClassroom = {
  /**
   * 반(클래스)의 고유 UUID(PK).
   *
   * Attendance_classroom.id에 해당.
   *
   * 시스템 전체에서 반을 식별하는 유일 식별자이다.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 이 반이 소속된 학교의 UUID(FK). attendance_school.id 참조.
   *
   * 통계/필터에서 학교별로 그룹핑 시 활용, 외부 조인에서도 활용.
   */
  school_id: string & tags.Format<"uuid">;

  /**
   * 담임/담당 교사의 UUID(FK). attendance_teacher.id 참조.
   *
   * 교사별 반 목록, 대시보드 등에서 활용
   */
  teacher_id: string & tags.Format<"uuid">;

  /**
   * 반 또는 학급명(문자열). 예: '1-1', '창의융합반' 등.
   *
   * 학년 구분, 관리 대시보드 등 다양한 뷰에서 활용.
   */
  name: string;

  /** 반의 학년입니다. 예: 1학년, 2학년 등. 정수 범위만 허용. */
  grade_level: number & tags.Type<"int32">;

  /** 생성일시. 반이 처음 등록된 UTC 시각(ISO8601). */
  created_at: string & tags.Format<"date-time">;

  /** 최종정보 수정일시(변경이 있을 때마다 갱신, UTC ISO8601). */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IAttendanceClassroom {
  /**
   * 반 목록(검색/필터/페이징)용 요청 파라미터 오브젝트.
   *
   * Attendance_classroom 테이블의 검색/필터/페이징/정렬 파라미터들을 집약한 구조입니다.
   *
   * 학교, 담당교사, 학년, 이름, 페이징/정렬 등 주요 필드를 명확화하였습니다.
   */
  export type IRequest = {
    /**
     * 검색 대상 학교의 UUID. attendance_classroom.school_id와 매핑됩니다. 특정 학교 소속
     * 반(Classroom)만 조회할 때 사용합니다.
     *
     * - 예시: 'fcb7ab29-6ca8-43e7-b4ea-ccfbc32f734a'
     * - Null 또는 미입력 시 전체 학교의 반 목록을 검색할 수 있습니다.
     */
    school_id?: string & tags.Format<"uuid">;

    /**
     * 담임/담당 교사(teacher)의 UUID. 특정 선생님이 담당한 반만 조회할 때 지정합니다.
     *
     * - 예시: 'dae3ffe8-351c-446d-af60-b202da0b7f1d'
     * - Null 또는 미입력 시 전체 교사의 반을 검색할 수 있습니다.
     */
    teacher_id?: string & tags.Format<"uuid">;

    /**
     * 학년 정보(정수값). 예: 1학년, 2학년, 3학년 등. 특정 학년별 반만 필터링할 때 사용합니다.
     *
     * - 미입력 시 특정 grade 필터 없음
     * - 1,2,3 등 양수 정수
     */
    grade_level?: number & tags.Type<"int32">;

    /**
     * 반 이름(문자열). 특정 이름의 반만 검색할 때 활용합니다. 부분 일치, 키워드 검색 등에서 활용 가능.
     *
     * - 예: '1-1', '창의융합반', '국제교류'
     * - 키워드 검색 지원 시 일부 문자열로도 조회
     */
    name?: string;

    /**
     * 페이징을 위한 페이지 번호(1부터 시작). 기본=1 또는 프론트 요청값 사용.
     *
     * - 예: 1, 2, 3
     * - Null/미입력 시 첫 페이지(1)
     */
    page?: number & tags.Type<"int32">;

    /**
     * 1페이지당 반환할 레코드(반) 개수. 기본 = 20 또는 50 등 시스템 표준
     *
     * - 미입력/0/null 시 시스템 기본값(예: 20)
     * - 페이징 미사용 또는 모든 레코드 반환은 비권장
     */
    limit?: number & tags.Type<"int32">;

    /**
     * 정렬 기준 컬럼명. 예: 'created_at', 'name', 'grade_level', 'updated_at' 등
     *
     * - 기본: 'created_at' 오름차순 또는 시스템 표준 값
     */
    sort?: string;

    /**
     * 정렬 방향(asc=오름차순, desc=내림차순)
     *
     * - 기본: asc(오름차순)
     * - Desc는 최근 순/내림차순 조회
     */
    order?: "asc" | "desc";
  };

  /**
   * 반(클래스) 신규 생성용 요청 오브젝트. 필수 필드는 모두 원자적으로 입력되어야 함.
   *
   * 중복 방지 및 참조키 유효성을 엄격히 검증.
   *
   * 예: 새학기 반 생성, 교사 인사발령, 학년 추가 상황 등.
   */
  export type ICreate = {
    /**
     * 신규 반 생성 시 소속 학교 UUID(FK).
     *
     * Attendance_school.id와 일치해야 하며, 유효성 필수.
     */
    school_id: string & tags.Format<"uuid">;

    /**
     * 담임 교사(teacher) UUID(FK).
     *
     * 반 생성 시 지정(필수).
     */
    teacher_id: string & tags.Format<"uuid">;

    /**
     * 반 이름 또는 학급명(예: '1-1', '창의융합반').
     *
     * 정확한 식별 및 관리 필요(필수).
     */
    name: string;

    /** 반의 학년(정수, 예: 1,2,3,6 등). 신규 학급 생성시 필수. */
    grade_level: number & tags.Type<"int32">;
  };

  /**
   * 반(클래스) 정보 전체 수정(교체/PUT)용 요청 오브젝트.
   *
   * 모든 필드는 필수로 입력되어야 하며, 기존 데이터의 완전 대체/등록 방식을 따름.
   */
  export type IUpdate = {
    /**
     * 수정 대상 반 클래스가 속한 학교의 UUID(FK). 변경 시 참조무결성 유효성 검사 필요.
     *
     * 기존 school_id에서 새로운 UUID로 변경되는 경우 참고.
     */
    school_id: string & tags.Format<"uuid">;

    /** 수정할 담임/담당 교사의 UUID. 교사 인사 이동 등에서 활용. */
    teacher_id: string & tags.Format<"uuid">;

    /** 반 또는 학급명. 수정시 새 이름으로 입력(부분/전체수정). */
    name: string;

    /** 반의 학년(정수). 학년변경시 활용. */
    grade_level: number & tags.Type<"int32">;
  };
}
