import { tags } from "typia";

/**
 * 일별 출석 통계(대시보드/집계테이블) 단일 레코드 타입입니다. Prisma attendance_stats_daily 스키마 기준.
 *
 * 특정 일, 학급(classroom), 학교(school)에 대한 출석률, 결석/지각/조퇴 건수, 생성/수정일 등 atomic 데이터로
 * 구성됩니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAttendanceStatsDaily = {
  /** PK(ID, UUID). 일별 통계 단일 식별자. 시스템 전역에서 유일. */
  id: string & tags.Format<"uuid">;

  /** 대상 학급(반)의 식별자(Prisma attendance_classroom.id). */
  classroomId: string & tags.Format<"uuid">;

  /** 대상 학교 식별자(Prisma attendance_school.id). */
  schoolId: string & tags.Format<"uuid">;

  /** 통계 대상 일자. YYYY-MM-DD 포맷 문자열. */
  day: string;

  /** 출석 인원. 해당 일자/학급의 출석 처리 인원수(정규수업 기준). */
  presentCount: number & tags.Type<"int32"> & tags.Minimum<0>;

  /** 지각 인원 수. 해당 일자/학급(반) 기준. */
  lateCount: number & tags.Type<"int32">;

  /** 결석 인원. 기준 일/학급. */
  absentCount: number & tags.Type<"int32">;

  /** 조퇴 인원(정해진 시간 전 퇴실 학생수). */
  earlyLeaveCount: number & tags.Type<"int32">;

  /** 레코드의 생성 일시(ISO8601 DateTime, UTC). */
  createdAt: string & tags.Format<"date-time">;

  /** 레코드 최종수정일시(ISO8601 DateTime, UTC). */
  updatedAt: string & tags.Format<"date-time">;
};
export namespace IAttendanceStatsDaily {
  /**
   * 일별 출석 통계(IAttendanceStatsDaily) 조회 및 검색을 위한 조건 객체입니다. 통계 대시보드, 관리자/교사용
   * 조회, 기간별 필터 기능 등에서 사용되는 요청 파라미터 구조입니다.
   *
   * SchoolId, classroomId, day, 기간, 카운트, 페이징·정렬 옵션 필드 및 통합 검색 기능을 지원합니다. 반드시
   * 일자/학교/반 식별(또는 조합)으로 필터가 가능합니다.
   */
  export type IRequest = {
    /**
     * 대상 학교 식별자(UUID). attendance_school.id. 해당 학교에 속한 일별 통계만 조회/검색할 때
     * 사용합니다.
     */
    schoolId?: string & tags.Format<"uuid">;

    /**
     * 기준 학급의 식별자(UUID). attendance_classroom.id. 주어진 반(학급)에 대한 일별 출석통계만 조회할
     * 때 사용합니다.
     */
    classroomId?: string & tags.Format<"uuid">;

    /** 검색 시작일자(YYYY-MM-DD, ISO포맷 문자열). 기간 조회 시 검색 범위 시작일입니다. */
    fromDay?: string;

    /** 검색 종료일자(YYYY-MM-DD, ISO포맷 문자열). 기간 조회 시 검색 범위 마지막 날짜입니다. */
    toDay?: string;

    /** 출석 인원이 최소 minPresentCount명 이상인 기록만 검색합니다. */
    minPresentCount?: number & tags.Type<"int32"> & tags.Minimum<0>;

    /** 지각 인원이 최소 minLateCount명 이상 등 하한 옵션입니다. */
    minLateCount?: number & tags.Type<"int32"> & tags.Minimum<0>;

    /** 결석 인원 하한 필터(해당 값 이상일 때만 표시). */
    minAbsentCount?: number & tags.Type<"int32"> & tags.Minimum<0>;

    /** 조퇴 인원 하한 필터(해당 값 이상만 검색). */
    minEarlyLeaveCount?: number & tags.Type<"int32"> & tags.Minimum<0>;

    /** 정렬 기준 필드명입니다. day, presentCount 등만 지정 가능합니다. */
    sortBy?:
      | "day"
      | "presentCount"
      | "lateCount"
      | "absentCount"
      | "earlyLeaveCount";

    /** 오름차순(asc), 내림차순(desc) 중 선택. */
    sortOrder?: "asc" | "desc";

    /** 요청 페이지 번호(1 이상). */
    page?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** 한 페이지당 최대 반환 항목 수(기본값 100, 1~200 사이). */
    limit?: number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<200>;

    /** 통합 키워드 검색(학교명/학급명/일자 등 자유 검색 필드, 대시보드 텍스트 검색에 사용). */
    search?: string;
  };

  /**
   * 일별 출석통계 신규 생성시(관리자/배치 작업 등), 등록 요청 바디 객체입니다. attendance_stats_daily 테이블
   * 구조를 따릅니다.
   *
   * PK는 서버에서 직접 생성하며 요청 시에는 미포함(응답 시 반환).
   */
  export type ICreate = {
    /** 등록할 일별 통계의 대상 학급(반) ID */
    classroomId: string & tags.Format<"uuid">;

    /** 등록할 출석통계의 대상 학교 ID */
    schoolId: string & tags.Format<"uuid">;

    /** 신규 통계의 적용 일자. YYYY-MM-DD 포맷 문자열. */
    day: string;

    /** 출석 인원 수. 0 이상의 값. */
    presentCount: number & tags.Type<"int32">;

    /** 지각 인원수. */
    lateCount: number & tags.Type<"int32">;

    /** 결석 인원 수. */
    absentCount: number & tags.Type<"int32">;

    /** 조퇴 인원 수. */
    earlyLeaveCount: number & tags.Type<"int32">;
  };

  /**
   * 일별 출석통계 정보 수정용(Update) 요청 객체입니다. attendance_stats_daily PK(id)는 path
   * param으로 전달, 요청 body에는 수정 대상 필드만 포함됩니다.
   *
   * 모든 값은 atomic(단일 값)이며, null 허용 불가.
   */
  export type IUpdate = {
    /** 대상 학급 ID. */
    classroomId?: string & tags.Format<"uuid">;

    /** 대상 학교 ID. */
    schoolId?: string & tags.Format<"uuid">;

    /** 적용 일자. YYYY-MM-DD. */
    day?: string;

    /** 출석 인원(수정시). */
    presentCount?: number & tags.Type<"int32">;

    /** 지각 인원. */
    lateCount?: number & tags.Type<"int32">;

    /** 결석 인원. */
    absentCount?: number & tags.Type<"int32">;

    /** 조퇴 인원. */
    earlyLeaveCount?: number & tags.Type<"int32">;
  };
}
