import { tags } from "typia";

/**
 * Discussion Board Member record, representing a registered, authenticated user
 * authorized for full participation. Mirrors the schema in the Actors domain
 * with references to external identities. Includes join/suspension times for
 * audit, privileges, and system workflows.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardMember = {
  /**
   * Unique identifier for a registered discussion board member. This value is
   * assigned by the system, conforming to UUID v4. Used for referencing
   * member records in all board-related operations. (See Prisma: @id
   * @db.Uuid)
   */
  id: string & tags.Format<"uuid">;

  /**
   * External/business identifier for the user, such as a user UUID, SSO id,
   * or normalized email. This is the principal mapping to a platform
   * identity, and is guaranteed unique. (See Prisma: user_identifier,
   * @unique)
   */
  user_identifier: string;

  /**
   * Timestamp at which the member joined/was registered on the discussion
   * board. Used for auditing, onboarding analytics, and membership
   * calculations. (See Prisma: joined_at, @db.Timestamptz)
   */
  joined_at: string & tags.Format<"date-time">;

  /**
   * Timestamp marking when the member's participation was suspended. Null if
   * the membership is still active; holds the suspension event time if
   * suspended. (See Prisma: suspended_at, nullable)
   */
  suspended_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IDiscussionBoardMember {
  /**
   * Filter/pagination controls for searching discussion board members. All
   * properties are optional for flexible and compound filtering.
   */
  export type IRequest = {
    /**
     * Page number for pagination. This property allows clients to request a
     * specific page of the results. Must be a positive integer when
     * provided. Null or omitted for first page.
     */
    page?: (number & tags.Type<"int32">) | null;

    /**
     * Number of records per page. Used for paginating member search
     * results. Defaults to 100 if not provided. Should be within acceptable
     * (non-abusive) query size limits.
     */
    limit?: (number & tags.Type<"int32">) | null;

    /**
     * Search filter for the unique user identifier string. This supports
     * filtering member records by external user reference, SSO id, or
     * email, as recorded in the database. Can be used for exact or partial
     * match searches.
     */
    user_identifier?: string | null;

    /**
     * Datetime filter: return only members who joined after this timestamp
     * (inclusive). ISO 8601 format. Optional.
     */
    joined_at_from?: (string & tags.Format<"date-time">) | null;

    /**
     * Datetime filter: return only members who joined before this timestamp
     * (inclusive). ISO 8601 format. Optional.
     */
    joined_at_to?: (string & tags.Format<"date-time">) | null;

    /**
     * Optional filter to return only suspended or only active members. True
     * returns only suspended, False returns only active, null/no filter
     * returns all.
     */
    suspended?: boolean | null;
  };

  /**
   * Request body for registering a new board member. Only allows fields that
   * can be set at creation time. Excludes id and suspension data, which are
   * system-generated or managed via separate update endpoints.
   */
  export type ICreate = {
    /**
     * External/business identifier (user UUID, SSO id, or email) for the
     * new member. Must be unique across all members. Cannot be null.
     * Required at creation.
     */
    user_identifier: string;

    /**
     * Datetime of member registration/join event; set at creation. ISO 8601
     * format. Generally system-generated.
     */
    joined_at: string & tags.Format<"date-time">;
  };

  /**
   * Updatable fields for an existing Discussion Board Member. Can only
   * set/change business identifier, join date, or suspended state. For full
   * admin management workflows.
   */
  export type IUpdate = {
    /**
     * Business/external identifier to be updated (rare; only for correcting
     * SSO/identity references). Optional.
     */
    user_identifier?: string | null;

    /**
     * Update for join timestamp (rare, admin use). ISO 8601 format.
     * Optional.
     */
    joined_at?: (string & tags.Format<"date-time">) | null;

    /**
     * Set/unset suspension of the member (admin action). When provided,
     * sets suspension; if null, clears suspension. Optional for status
     * changes.
     */
    suspended_at?: (string & tags.Format<"date-time">) | null;
  };
}
