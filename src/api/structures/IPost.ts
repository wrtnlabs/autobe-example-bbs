import { tags } from "typia";

/**
 * 토론 게시판의 게시글(포스트) 정보를 담는 도메인 오브젝트입니다.
 *
 * 작성자, 카테고리, 제목·본문, 생성/수정/삭제일 등을 보유하여 커뮤니티 핵심 콘텐츠 구조를 이룹니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IPost = {
  /** 게시글의 고유 ID (Prisma 'posts.id'). */
  id: string & tags.Format<"uuid">;

  /** 작성자(유저) ID (Prisma 'posts.user_id'). */
  user_id: string & tags.Format<"uuid">;

  /** 카테고리 ID (Prisma 'posts.category_id'). */
  category_id: string & tags.Format<"uuid">;

  /** 게시글 제목 (Prisma 'posts.title'). */
  title: string;

  /** 게시글 본문 (Prisma 'posts.content'). */
  content: string;

  /** 생성 시각 (Prisma 'posts.created_at'). */
  created_at: string & tags.Format<"date-time">;

  /** 수정 시각 (Prisma 'posts.updated_at'). */
  updated_at: string & tags.Format<"date-time">;

  /** 삭제(soft delete) 시각(Prisma 'posts.deleted_at'). 삭제 안된 경우 null. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IPost {
  /**
   * 게시글(포스트)의 요약 정보를 제공하는 타입입니다. 목록 조회, 관계 프로퍼티 등에서 사용됩니다.
   *
   * 게시글의 고유 ID, 제목, 작성자 ID, 카테고리 ID, 생성일, 수정일, 댓글/추천 등 카운트 필수 정보를 담고 있어, 리스트
   * UI 테이블/카드 등 요약 리스트용으로 활용합니다. 본문 전체나 관계 정보는 포함하지 않습니다.
   */
  export type ISummary = {
    /** 게시글 고유 식별자(UUID). 예: '973c0116-ac2c-4ffb-b38b-7c4c45c7b2df' */
    id: string & tags.Format<"uuid">;

    /** 작성자(user)의 ID(UUID) */
    user_id: string & tags.Format<"uuid">;

    /** 속한 카테고리의 ID(UUID) */
    category_id: string & tags.Format<"uuid">;

    /** 게시글 제목 */
    title: string;

    /** 게시글 작성일시(ISO8601) */
    created_at: string & tags.Format<"date-time">;

    /** 게시글 마지막 수정 시각(ISO8601) */
    updated_at: string & tags.Format<"date-time">;

    /** 해당 글의 댓글 개수 */
    comment_count: number & tags.Type<"int32">;

    /** 해당 글의 추천(투표) 합계 */
    vote_count: number & tags.Type<"int32">;
  };

  /**
   * 게시글 검색, 필터, 페이징에 요청 정보로 사용되는 객체입니다.
   *
   * 카테고리, 작성자, 키워드, 기간, 페이징 등 다양한 필터를 지원하여 게시글 탐색 UX를 구현합니다.
   */
  export type IRequest = {
    /**
     * 검색/필터링용 카테고리 ID.
     *
     * 특정 카테고리 내 게시글만 조회하고자 할 때 사용합니다.
     */
    category_id?: string & tags.Format<"uuid">;

    /**
     * 검색/필터링용 작성자(유저) ID.
     *
     * 특정 사용자가 작성한 게시글만 조회할 때 활용합니다.
     */
    user_id?: string & tags.Format<"uuid">;

    /**
     * 제목 키워드 검색 (부분 일치 허용).
     *
     * 게시글의 제목에 포함된 키워드로 검색합니다.
     */
    title?: string;

    /**
     * 본문 키워드 검색 (부분 일치 허용).
     *
     * 게시글의 전체 텍스트에서 키워드로 검색합니다.
     */
    content?: string;

    /** 게시글 생성 시작일(검색 필터용, ISO8601). */
    created_from?: string & tags.Format<"date-time">;

    /** 게시글 생성 종료일(검색 필터용, ISO8601). */
    created_to?: string & tags.Format<"date-time">;

    /** 페이지 번호(1 이상). */
    page: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** 페이지당 데이터 수(기본 100). */
    limit: number & tags.Type<"int32"> & tags.Minimum<1>;
  };

  /**
   * 게시글 신규 작성 요청에 전달되는 바디입니다.
   *
   * 카테고리, 제목, 본문, 작성자 정보를 반드시 포함해야 합니다. 생성일시 등은 서버에서 자동 처리합니다.
   */
  export type ICreate = {
    /** 작성할 게시글의 카테고리 ID. (필수) */
    category_id: string & tags.Format<"uuid">;

    /** 게시글 제목. 예: '2025년 물가·인플레이션 전망' */
    title: string;

    /** 게시글 본문 내용. (텍스트·포맷팅 지원) */
    content: string;

    /** 작성자(Author) ID. 회원 작성 시 필수 */
    user_id: string & tags.Format<"uuid">;

    /** 생성시각 (시스템 자동 할당이지만, 조직 배치용으로도 허용될 수 있음) */
    created_at?: string & tags.Format<"date-time">;
  };

  /**
   * 기존 게시글(포스트)의 제목/본문/카테고리를 수정하는 요청 바디입니다.
   *
   * 각 필드는 선택값으로, 일부만 수정 가능하며 누락시 기존 값 유지합니다.
   */
  export type IUpdate = {
    /** 변경할 게시글 제목 (옵션) */
    title?: string;

    /** 변경할 게시글 본문 (옵션) */
    content?: string;

    /** 변경할 카테고리 ID (옵션) */
    category_id?: string & tags.Format<"uuid">;
  };

  /**
   * 게시글 삭제(soft/hard) 요청 결과나 상태를 반환하는 결과 객체입니다.
   *
   * 정상 삭제(숨김) 시 success=true, 실패 시 false와 설명 메시지를 제공합니다.
   */
  export type IDeleteResult = {
    /** 삭제(Soft 또는 Hard) 성공 여부 */
    success: boolean;

    /** 삭제 결과 메시지 */
    message: string;
  };
}
