import { tags } from "typia";

/**
 * 유저 경고 레코드 단일 상세 엔티티 타입입니다.
 *
 * Prisma schema discussion_board_warnings의 모든 주요 컬럼을 포함하며, 경고 이력 관리·정책 집행·감사
 * 용도로 활용될 수 있도록 설계되었습니다. 필드별 상세한 주석을 포함하여 운영/감사/관리 요구사항을 충실히 반영합니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardWarning = {
  /** 고유 경고 식별자(UUID, discussion_board_warnings.id). */
  id: string & tags.Format<"uuid">;

  /** 경고를 받은 멤버의 UUID. 대상자 식별입니다. */
  member_id: string & tags.Format<"uuid">;

  /** 경고를 부여한 모더레이터(UUID). 조치 담당자를 명확히 나타냄. */
  moderator_id: string & tags.Format<"uuid">;

  /** 경고 유형(예: 'spam', 'harassment'). 플랫폼 정책에서 정의된 카테고리 씀. */
  warning_type: string;

  /** 실제 경고 메시지(자유 텍스트). 경고 사유를 명확히 기술합니다. */
  message: string;

  /** 경고 발행 시각(ISO8601, db기준 저장). */
  created_at: string & tags.Format<"date-time">;

  /** 만료 시각(있을 때만). 영구 경고(false), 임시 경고(true) 분류에 사용됨. */
  expires_at?: (string & tags.Format<"date-time">) | null;

  /** 소프트 삭제 시각. 관리상 삭제된 경우에만 입력. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IDiscussionBoardWarning {
  /**
   * 유저 경고(disussion_board_warnings) 검색/조회 요청 DTO입니다.
   *
   * Prisma 스키마의 경고 엔티티 필드 및 검색 수요(대상/담당/타입/기간/만료 등)를 충실히 반영하여 유형별, 기간별, 만료여부
   * 등 다각적 검색을 지원합니다.
   */
  export type IRequest = {
    /** 경고를 받은 대상 멤버의 UUID입니다. 특정 사용자의 경고만 조회할 때 filter로 사용됩니다. */
    member_id?: string & tags.Format<"uuid">;

    /** 경고를 부여한 모더레이터(담당자) UUID. 담당자 기준으로 추출하고 싶을 때 입력합니다. */
    moderator_id?: string & tags.Format<"uuid">;

    /** 경고 카테고리(예: 'spam', 'harassment' 등). 유형별로 필터하고 싶은 경우에 이용됩니다. */
    warning_type?: string;

    /** 검색 기간(시작, 포함). 이 시각 이후 발급된 경고만 조회합니다. */
    created_from?: string & tags.Format<"date-time">;

    /** 검색 기간(끝, 포함). 이 시각 이전 발급된 경고만 조회합니다. */
    created_to?: string & tags.Format<"date-time">;

    /** 만료 여부로 필터링(만료된 경고만 추출/표시 등). */
    expired?: boolean;
  };

  /**
   * 경고 발급(creation) 요청 DTO입니다.
   *
   * Prisma discussion_board_warnings 생성 규칙을 준수하여 대상자, 담당자, 경고 유형, 메시지는 필수이고,
   * 만료 일시는 옵션입니다. 정책상 필요에 따라 추가 설명 포함도 가능합니다.
   */
  export type ICreate = {
    /** 경고를 받을 멤버의 UUID입니다. 타겟 멤버 식별자로 사용됩니다. */
    member_id: string & tags.Format<"uuid">;

    /** 경고 발급 담당 모더레이터의 UUID. 반드시 활성 모더레이터 또는 관리자이어야 합니다. */
    moderator_id: string & tags.Format<"uuid">;

    /** 경고 유형(예: 'spam', 'harassment' 등 정책별 분류 코드). */
    warning_type: string;

    /** 경고 사유 및 사용자에 전달될 공지 메시지(필수). 자유 설명. */
    message: string;

    /** 경고 만료 시각(있을 때 한정). null이면 영구 경고, 날짜값이면 임시 경고임을 나타냅니다. */
    expires_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * 경고 엔티티 수정용 DTO(IUpdate 타입).
   *
   * Discussion_board_warnings의 메시지, 만료 일자 등을 제한적으로 수정할 때 사용하는 데이터 구조입니다.
   */
  export type IUpdate = {
    /** 경고 메시지(수정용). 사유 변경이나 설명 추가 등이 가능한 필드입니다. */
    message?: string;

    /** 만료 시각 변경이 필요한 경우 지정. null이면 영구 경고로 유지됩니다. */
    expires_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Discussion_board_warnings(경고) 삭제 결과 반환용 DTO입니다.
   *
   * 삭제 처리 결과와 상세 메시지만 포함하며, Prisma 경고 정책에 따라 설계되었습니다.
   */
  export type IDeleteResult = {
    /**
     * 삭제(soft-delete) 성공 여부.
     *
     * 성공 시 true, 실패 시 false를 반환합니다.
     */
    success: boolean;

    /** 상세 메시지(성공/실패 사유). */
    message: string;
  };
}
