import { tags } from "typia";

/**
 * 학생별 기간집계 통계(semester/month/custom 기간별). Prisma
 * attendance_stats_student_summary 기준.
 *
 * 특정 학생 · 반 · 기간 별로 출석/지각/결석/조퇴 합계, 요약 정보 저장.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAttendanceStatsStudentSummary = {
  /** PK(UUID). 해당 기간/stats서머리 단일 식별자 */
  id: string & tags.Format<"uuid">;

  /** 대상 학생 UUID. attendance_student.id */
  studentId: string & tags.Format<"uuid">;

  /** 소속 학급 UUID. attendance_classroom.id */
  classroomId: string & tags.Format<"uuid">;

  /** 요약집계 시작일자(YYYY-MM-DD). */
  periodStart: string;

  /** 집계 종료일자(YYYY-MM-DD). */
  periodEnd: string;

  /** 총 출석일수(합계) */
  totalPresent: number & tags.Type<"int32">;

  /** 총 지각일수 */
  totalLate: number & tags.Type<"int32">;

  /** 총 결석일수 */
  totalAbsent: number & tags.Type<"int32">;

  /** 총 조퇴일수(합계) */
  totalEarlyLeave: number & tags.Type<"int32">;

  /** 레코드 생성일(UTC, ISO8601) */
  createdAt: string & tags.Format<"date-time">;

  /** 레코드 최종 수정일(UTC, ISO8601) */
  updatedAt: string & tags.Format<"date-time">;
};
export namespace IAttendanceStatsStudentSummary {
  /**
   * 학생별 기간요약 통계 대시보드, 위험학생 탐지, 진도/출석 비교, 페이징·검색 API 요청 조건
   *
   * 학생id, 반id, 기간(from~to), 카운트 조건, 검색/정렬/페이징 필드 포함 가능
   *
   * Prisma attendance_stats_student_summary 구조 활용.
   */
  export type IRequest = {
    /** 대상 학생 UUID(attendance_student.id). 단일 학생 요약만 필터할때 사용. */
    studentId?: string & tags.Format<"uuid">;

    /** 대상 학급 UUID. 반별 서머리, 집계 보기용. */
    classroomId?: string & tags.Format<"uuid">;

    /**
     * 검색 시작 기간(YYYY-MM-DD). 기간 필터에서 시작일자(semester, month, custom period
     * 지원).
     */
    fromPeriod?: string;

    /** 검색 종료 기간(YYYY-MM-DD). 기간 조회 마지막 일자 지정시. */
    toPeriod?: string;

    /** 정렬 기준 필드명. 기간, 출석수, 지각수 등 지원. */
    sortBy?:
      | "periodStart"
      | "periodEnd"
      | "totalPresent"
      | "totalLate"
      | "totalAbsent"
      | "totalEarlyLeave";

    /** 정렬 방향(asc:오름차순, desc:내림차순) */
    sortOrder?: "asc" | "desc";

    /** 페이지 번호(1base: 1,2,3…). */
    page?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** 한 페이지 반환 개수(최대 200, 기본 100). */
    limit?: number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<200>;

    /** 학생명, 클래스/학급명, 기간 기타 통합 텍스트 검색 필드 */
    search?: string;
  };

  /**
   * 학생별 기간집계 통계 신규생성(관리자, 집계배치 등)용 바디 객체. attendance_stats_student_summary
   * 테이블 insert시 사용.
   *
   * PK(id)는 API 서버에서 생성, 요청에는 시작/종료일, 대상(학생/학급) UUID, 합계 필드 필요.
   */
  export type ICreate = {
    /** 대상 학생 UUID. */
    studentId: string & tags.Format<"uuid">;

    /** 소속 클래스 UUID. */
    classroomId: string & tags.Format<"uuid">;

    /** 집계 기간/시작일자(YYYY-MM-DD). */
    periodStart: string;

    /** 집계 기간/마지막 일자(YYYY-MM-DD). */
    periodEnd: string;

    /** 출석 합계(필수) */
    totalPresent: number & tags.Type<"int32">;

    /** 지각 합계(필수) */
    totalLate: number & tags.Type<"int32">;

    /** 결석 합계(필수) */
    totalAbsent: number & tags.Type<"int32">;

    /** 조퇴 합계(필수) */
    totalEarlyLeave: number & tags.Type<"int32">;
  };

  /**
   * 학생별 기간요약 통계 정보 수정 API 용도 바디 스키마입니다. path param으로 id 지정, body에는 변경 필드만 노출.
   *
   * 원본은 attendance_stats_student_summary 기준이며, atomic 수정 only/nullable 불가.
   */
  export type IUpdate = {
    /** 대상 학생 UUID. */
    studentId?: string & tags.Format<"uuid">;

    /** 소속 클래스 UUID. */
    classroomId?: string & tags.Format<"uuid">;

    /** 집계 시작일(YYYY-MM-DD). */
    periodStart?: string;

    /** 집계 종료일(YYYY-MM-DD). */
    periodEnd?: string;

    /** 출석 합계(수정값) */
    totalPresent?: number & tags.Type<"int32">;

    /** 지각 합계(수정값) */
    totalLate?: number & tags.Type<"int32">;

    /** 결석 합계(수정값) */
    totalAbsent?: number & tags.Type<"int32">;

    /** 조퇴 합계(수정값) */
    totalEarlyLeave?: number & tags.Type<"int32">;
  };
}
